(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    477178,       9101]
NotebookOptionsPosition[    452653,       8685]
NotebookOutlinePosition[    456205,       8750]
CellTagsIndexPosition[    456125,       8745]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 TogglerBox[1, {1->
  OverlayBox[{
   TagBox[GridBox[{
      {
       GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAKiEGSLED8//9/gvjRo0fsN27cELp69arY+fPnpZExPn137tzhBqrRBGJ/
ID4CxMfRMTZ9L168YL5w4YIaUD4AiC8C8Qcg/gvE/9AxFreC7PQD4gtA/BGq
7j8ujKz3+fPnLFC9b6H24dSHTf/FixfVofYSpRdZPzSsAqBuJkovsn5oOF8k
5F9s+h88eMBBjt0w/devXxcGso+S4m9k/ZcuXRKHpgeS3A7TD0wrkpToPw9J
ywOmn1L3Uxp+lMYfpemH0vRLjfwDjQey8y9a+fGOWDPwlF+gsPhEKDywlZ8g
d0D9EniexPITGd++fZv3PBnlN6764zxa3QHCAIDESDs=
         "], {{0, 26}, {16, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{16, 26},
        PlotRange->{{0, 16}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJzt2V1vVFUUBuBGTfTSSygthYYKNHyVinrrpbcYfwBEJN5gUkyMfw9KKaVw
KCkQKCW1RNIQKg1gEE3QtdN10pMRZCaBzNQ+kzxt5nzstfeZfbPOu/vkD8e/
e6+vr+/sR/Hn+ImfvpyYOPHz1x/Hl2/OnP3+9JlT33515sdTp09NfHHy/TjY
H6592Nf3QfyvqmpHBwbCYNr5GoMNAw2d1AEAADa3/obtLba1aJ7rb4xR9x1D
YVfYHYbDnjASPgn7wv4wGg6Eg+FQOByOhLEwnj4Nx8Jn6fM21dcfyzHq8cay
xuGseTDnMJpz2pdzHMk5D+caduWa6v6p+czafU71s6p1+/cGAADYqt52/9va
++6tXt331j3v0TTeoj5e966v6lv3Vv/uWfWr9LJm9tzMpN+UW3eaVV9s00yY
CzfC7bAQFhvuhjt57maYD9er9c+VcDlcCtMd1AQAADafqXQhTabz6VyL+vhk
Xl/uLX1D6UFmw9VwrVrvL0o/cqta7ztKD3Iv/BLuh1/DSngYHoXfwlp4Ep6F
38Pz8Ed4Ef5Mf71Gff5F3vM8x3iWY65ljUdZcyXncD/ndC/neDvnfCPXcC3X
NJtrnG48r3afU/2s6uc11QO/OwAAwFbzLvrfksWVjK30kSV3KxncUlgOD6qN
vnc1PK42+t7iaaq/r+U1q9VG3/ogx1rKse9krfmsrV+l15R9WDLmkjWXzLl8
yvuVsmdLJl3eu5R9XN7BNLPrhTxX3seUvT3TQc2Xbfr7LWq3JgAAwH95m33K
u9Dt5wMAAMDmp2dlK+vGnu/2+yQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPN42aZu
1AQAAAAAAICtrNsZIXRTN/b8xTbNhLlwI9wOC2Gx4W64k+duhvlwvVr/XAmX
w6Uw3UFNAAAAAAAA6EVT6UKaTOfTuRb18cm8vtxbcrOSwc2Gq9V6FlcytlvV
eu5WMrilsBwehJXwMKyGx2EtPElPU/19La9ZzXtWcozlHHMxa9zKmnM5h9mc
03Rjfe2uq15bvb6pHvid2NzKPiwZc8maS+ZcPiWDLnu2ZNIlmy77uGTVzex6
Ic+VbLvs7ZkOau7owEAYTDtfY7BhoKGTOgAAAAAAANDr+hu2t9jWonmuvzFG
nbsNhd1hOOwJI2Fv2B9Gw4FwMBwKR8JYOJrGW9THx/LaQ3nvgRxrf449krWG
s/ZQtZH3NdfY7rrqtdW6/fvw/9LMnpuZ9Jty646y6n8AhCP7tg==
         "], {{0, 26}, {2000, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{2000, 26},
        PlotRange->{{0, 2000}, {0, 26}}], 
       GraphicsBox[RasterBox[CompressedData["
1:eJy9lktLQkEUxyVdCBIELaxctYq+QduWbcKMPoCSRRsDC6JPp+Lj4vuq+EBc
iBtFfIYrpU7nPzQiN++9vmrgp/dx5j8z55w5c099z56HPYvF8mLnH4/37TIY
9L7fHvDNXeDl6THgv78KvPof/cELn5UfnjBHjI3J5/OudVBV9bhUKjmbzaad
iCxmcB9lAxKMmzmv1+v7JvpfG/DJjJkic8NrOut0OlYdfdoCjPXBqMx1q9Vy
7FhfgvX0MUa73bYZ6edyuTnrvPsZQ4Wv9PTRL5vNroTOGIiJu9FoOLT6UjuT
yVAqlaJkMin+0+m0YPEZbHTGQDwKyKtl+ugHjdFoRIVCgeLxOCUSCQGua7Ua
9Xo9YQNbozXI/aHVZ//RcDik2WxG5XKZwuGwANdo0JfrNIhDvFqtHi7zD+YW
i8VoMBgIvWKxKEDrdrtiHbAxiAF8pHAf5zJ9+Bca0WiUxuMxydbv98U64CvY
wNZgTyioI9r8QR/EEvrQUhRlrh8Kheb6sDHTZ1xG84ePMP/pdPpr/tvoL/of
Mcb9Jv7X+mcxP2X+QCMSiYh5VyoVMQbXMbP81I2vzM/JZCLyX+a+BPmPvbFN
fmr36pr713B/rVp7THy/tD6Y1cjF5zrahvVtB5jW5y21B/kVzpc1kecjfK53
Pu7kfNfO+x+/T/70++ob7NUEtQ==
         "], {{0, 26}, {24, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BaseStyle->"ImageGraphics",
        ImageSize->Magnification[1],
        ImageSizeRaw->{24, 26},
        PlotRange->{{0, 24}, {0, 26}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {Automatic, 
         Scaled[0.6], Automatic}},
     GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
    "Grid"], 
   PaneBox[
    StyleBox[
     RowBox[{
     "Background", " ", "images", " ", "and", " ", "text", " ", "colors", " ",
       "have", " ", "been", " ", "adjusted", " ", "for", " ", "editing", " ", 
      RowBox[{"purposes", "."}]}],
     LineBreakWithin->False,
     FontFamily->"Helvetica",
     FontSize->12,
     FontColor->GrayLevel[0.4]],
    Alignment->Center,
    ImageSize->Scaled[0.5],
    ScrollPosition->{0., 0.}]},
   Alignment->{Center, Center}], 2->""}, "1"]], "SlideShowNavigationBar", \
"FirstSlide",
 CellMargins->{{0, 0}, {0, 0}},
 CellFrameLabelMargins->2,
 CellSize->{Inherited, 30},
 TextAlignment->Center,
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6899b0d1-0d9d-418e-929d-832f32f32215"],

Cell["\<\



MX4023 Project: Random Graphs\
\>", "Title",
 CellChangeTimes->{
  3.559948400406288*^9, {3.821593652496961*^9, 3.821593655338487*^9}, {
   3.8215937079219947`*^9, 3.8215937364652157`*^9}, {3.8215939617223654`*^9, 
   3.821593964377884*^9}},
 TextAlignment->Center,ExpressionUUID->"29ddcfc4-5c4b-45da-aff5-f1983d663462"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.821593864270633*^9, 
  3.821593865865503*^9}},ExpressionUUID->"c938e9f2-7f3d-4f95-894a-\
7dad47e92c2a"],

Cell[CellGroupData[{

Cell["\<\


Author:  Marcell Veiner\t\
\>", "Subtitle",
 CellChangeTimes->{
  3.8215938256318045`*^9, {3.821593872906734*^9, 
   3.821593948290644*^9}},ExpressionUUID->"9e9f732e-f787-4eb4-9d72-\
c5da395980f0"],

Cell["Supervisor:  Dr Mark Grant", "Subtitle",
 CellChangeTimes->{{3.821593859747739*^9, 
  3.8215938847876062`*^9}},ExpressionUUID->"188c9394-e10b-48e0-bab2-\
8ef782decd46"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8215938338820105`*^9, 
  3.8215938391533136`*^9}},ExpressionUUID->"f547b722-6fa3-4d21-9429-\
836c6177101b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"69ff1bd6-bcb4-485a-b5cc-ad3152776792"],

Cell[CellGroupData[{

Cell["From a Cocktail Party to Random Networks [2]", "Section",
 CellChangeTimes->{
  3.821594222466804*^9, {3.8215946036432924`*^9, 3.8215946095141687`*^9}, {
   3.821948393204712*^9, 
   3.821948399549334*^9}},ExpressionUUID->"9ea291a9-5c2d-49d6-a421-\
1118b75ab1d9"],

Cell["\<\
Imagine organizing a party for guests who initially do not know each other, \
while offering them wine and cheese and you will soon see them chatting in \
groups of two to three. Now mention to Mary, one of your guests, that the red \
wine in the unlabeled dark green bottles is a rare vintage, much better than \
the other ones. If she shares this information only with her acquaintances, \
you may think that your expensive wine is safe, as she only had time to meet \
a few others so far. \
\>", "Text",
 CellChangeTimes->{{3.8215949817472796`*^9, 3.821595045906766*^9}, 
   3.821595250953602*^9, {3.8215954577141995`*^9, 3.8215955131299095`*^9}, {
   3.8215955891065655`*^9, 3.821595589339202*^9}, 3.8215956203870482`*^9},
 TextJustification->1.,ExpressionUUID->"51548551-8526-422c-b5fd-1888f60f1886"],

Cell["\<\
Yet, you would be wrong. As the guests continue to mingle, subtle paths form \
between individuals that may still be strangers to each other. For example, \
while John has not yet met Mary, they have both met Mike, so there is an \
invisible path from John to Mary through Mike. As time goes on, the guests \
will be increasingly interwoven by such elusive links.\
\>", "Text",
 CellChangeTimes->{{3.8215954119214644`*^9, 3.821595433563118*^9}, {
  3.8215955211313715`*^9, 3.8215955216671524`*^9}, {3.821595567867334*^9, 
  3.821595570595462*^9}, {3.8216246271457806`*^9, 3.8216246556177797`*^9}},
 TextJustification->1.,ExpressionUUID->"bae27d10-1b2d-4899-b271-dd37ad50c018"],

Cell["\<\
Random network theory tells us that we do not have to wait until all \
individuals get to know each other for our expensive wine to be in danger. \
Rather, soon after each person meets at least one other guest, an invisible \
network will emerge that will allow the information to reach all of them.\
\>", "Text",
 CellChangeTimes->{{3.8215956936958675`*^9, 3.821595717834766*^9}},
 TextJustification->1.,ExpressionUUID->"828e1607-0303-40ce-afcb-25301f6d6e52"],

Cell[CellGroupData[{

Cell["Modelling the Cocktail Party", "Subsection",
 CellChangeTimes->{{3.8216023985903215`*^9, 
  3.8216024060623207`*^9}},ExpressionUUID->"96545de7-8cef-4a56-95b6-\
11f97bd69740"],

Cell["We invited 100 guests none of which know each other.", "Item",
 CellChangeTimes->{{3.821603003879492*^9, 3.821603018236586*^9}, {
  3.821624718823065*^9, 
  3.821624735066138*^9}},ExpressionUUID->"366cd33a-b7e0-4fb5-ab3a-\
8c06cdcf07c4"],

Cell["\<\
We tell Mary at the beginning of the party about the rare wine.\
\>", "Item",
 CellChangeTimes->{{3.821603003879492*^9, 3.821603018236586*^9}, 
   3.8216247435161653`*^9},ExpressionUUID->"d8d43664-0b36-4e07-a3f8-\
8935be0763e5"],

Cell["\<\
Each person at the party talks to 3 other for 30 minutes. This can be someone \
they have already met that night.\
\>", "Item",
 CellChangeTimes->{{3.821603003879492*^9, 3.821603094547223*^9}, {
  3.821625168507425*^9, 3.821625176947154*^9}, {3.8216274294282455`*^9, 
  3.8216274507409973`*^9}, {3.8216276020534363`*^9, 
  3.8216276095640154`*^9}},ExpressionUUID->"d5286a43-4b97-4872-858d-\
d59b306ddebc"],

Cell["Assume that every person mentions the wine to the others.", "Item",
 CellChangeTimes->{{3.821603003879492*^9, 3.821603094187424*^9}, {
  3.821603194655515*^9, 3.8216032048558507`*^9}, {3.8216115976882095`*^9, 
  3.821611597691245*^9}},ExpressionUUID->"9cd62532-0e36-4368-8667-\
4ecfc983e45d"],

Cell["We let the night go on, and check in after every 30 minutes.", "Item",
 CellChangeTimes->{{3.821603003879492*^9, 3.821603094187424*^9}, {
  3.821603194655515*^9, 3.8216032048558507`*^9}, {3.821611598099422*^9, 
  3.8216116080037155`*^9}, {3.8216251908896666`*^9, 
  3.82162519916357*^9}},ExpressionUUID->"ca4c1e89-afef-427c-a4b8-\
ae1a2eaccc45"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextJustification->1.,
 CellTags->
  "SlideShowHeader",ExpressionUUID->"a7a94447-8053-4f8b-8b30-5b88b9bb8ab6"],

Cell["\<\
We will create an empty adjacency matrix for a 100 node graph. We will also \
let Mary know about the wine, and we will also want to keep time of the time \
passed.\
\>", "Text",
 CellChangeTimes->{{3.8216278161244497`*^9, 3.821627876444329*^9}, 
   3.821948744539242*^9},
 TextJustification->1.,ExpressionUUID->"a61a9e80-7d4f-41b2-9238-849fbf8f87c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", " ", "=", " ", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Range", "[", "100", "]"}], ",", 
     RowBox[{"{", "}"}]}], "]"}]}], ";", " ", 
  RowBox[{"mat", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"100", ",", "100"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"indices", " ", "=", " ", 
   RowBox[{"{", "1", "}"}]}], ";", " ", 
  RowBox[{"count", " ", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.821596778401375*^9, 3.8215968102747164`*^9}, {
   3.821596862253032*^9, 3.821596903651142*^9}, {3.821596982582033*^9, 
   3.8215969836674576`*^9}, {3.82159701987857*^9, 3.8215971158306475`*^9}, 
   3.8215971584944987`*^9, {3.821597349711375*^9, 3.821597369709442*^9}, {
   3.821597469331523*^9, 3.821597482467968*^9}, {3.8215975345907793`*^9, 
   3.82159766506048*^9}, {3.8215977237852793`*^9, 3.821597793805454*^9}, {
   3.8215978333761625`*^9, 3.8215978926084957`*^9}, {3.8215982093834877`*^9, 
   3.8215982155826817`*^9}, 3.8215983722872953`*^9, {3.8215984140468225`*^9, 
   3.821598414550544*^9}, {3.8215987459821477`*^9, 3.8215987659910035`*^9}, {
   3.821598806248339*^9, 3.821598834559724*^9}, {3.8215988664537735`*^9, 
   3.8215988667895217`*^9}, {3.8215993111682143`*^9, 3.8215993445103436`*^9}, 
   3.8215993772429523`*^9, {3.82160014706572*^9, 3.821600147544137*^9}, {
   3.8216006081516895`*^9, 3.821600660008154*^9}, {3.8216011137235823`*^9, 
   3.8216011159200935`*^9}, 3.8216012014495974`*^9, {3.8216016638629503`*^9, 
   3.821601678585673*^9}, 3.8216248344382315`*^9},
 TextJustification->1.,
 CellLabel->
  "In[932]:=",ExpressionUUID->"922abb62-0783-4a6a-a852-94b01de992b4"],

Cell["\<\
Every 30 minutes, people get together in groups of 3. If one of these people \
knows about the rare wine, tells them. We check for self loops, but not for \
people who already know about the wine.\
\>", "Text",
 CellChangeTimes->{{3.8216279166605177`*^9, 3.8216279788048115`*^9}},
 TextJustification->1.,ExpressionUUID->"98ab0d17-5bbc-4b41-9651-239dff767d0a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"j", "=", "1"}], ",", " ", 
    RowBox[{"j", "<", "4"}], ",", 
    RowBox[{"j", "++"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", " ", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "indices", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"index", " ", "=", " ", 
         RowBox[{"Part", "[", 
          RowBox[{
           RowBox[{"RandomChoice", "[", 
            RowBox[{
             RowBox[{"DeleteCases", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", "100"}], "]"}], ",", 
               RowBox[{"Part", "[", 
                RowBox[{"indices", ",", "i"}], "]"}]}], "]"}], ",", "1"}], 
            "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Part", "[", 
          RowBox[{"mat", ",", " ", 
           RowBox[{"Part", "[", 
            RowBox[{"indices", ",", "i"}], "]"}], ",", "  ", "index"}], "]"}],
          " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Part", "[", 
          RowBox[{"mat", ",", " ", "index", ",", "  ", 
           RowBox[{"Part", "[", 
            RowBox[{"indices", ",", "i"}], "]"}]}], "]"}], " ", "=", " ", 
         "1"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"indices", " ", "=", " ", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"SparseArray", "[", "mat", "]"}], "[", "\"\<AdjacencyLists\>\"",
       "]"}], "]"}], "]"}]}], ";", 
  RowBox[{"m", " ", "=", " ", 
   RowBox[{"mat", " ", "//", " ", "MatrixForm"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g1", " ", "=", " ", 
   RowBox[{"AdjacencyGraph", "[", "mat", "]"}]}], ";", 
  RowBox[{"count", " ", "=", " ", 
   RowBox[{"count", " ", "+", " ", "1"}]}], ";", " ", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Elapsed: \>\"", ",", " ", 
    RowBox[{"count", "*", " ", "30"}], ",", " ", "\"\< minutes, People: \>\"",
     ",", " ", 
    RowBox[{"Length", "[", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"ConnectedComponents", "[", "g1", "]"}], ",", "1"}], "]"}], 
     "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"g2", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"VertexList", "[", "g", "]"}], ",", 
    RowBox[{"EdgeList", "[", "g1", "]"}], ",", 
    RowBox[{"VertexCoordinates", "\[Rule]", 
     RowBox[{"GraphEmbedding", "[", "g", "]"}]}], ",", 
    RowBox[{"VertexSize", "\[Rule]", "Medium"}], ",", " ", 
    RowBox[{"VertexLabels", "\[Rule]", "Automatic"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8215982304270673`*^9, 3.821598231816491*^9}, {
   3.8215983390713215`*^9, 3.821598361870183*^9}, {3.8215984427577624`*^9, 
   3.8215984432540517`*^9}, {3.821598680029414*^9, 3.8215986893429117`*^9}, {
   3.821598967248637*^9, 3.821599172231382*^9}, {3.8215992112957892`*^9, 
   3.821599217844946*^9}, {3.821599250383768*^9, 3.8215992809356403`*^9}, {
   3.821599349278468*^9, 3.8215993523033853`*^9}, {3.821599517223347*^9, 
   3.8215995181518035`*^9}, {3.8215998089999375`*^9, 
   3.8215998806643596`*^9}, {3.821600872155302*^9, 3.8216008734809933`*^9}, {
   3.8216010195213656`*^9, 3.821601024945691*^9}, {3.8216011254167376`*^9, 
   3.8216011290326753`*^9}, {3.8216011832727594`*^9, 3.821601193487892*^9}, {
   3.8216012340257683`*^9, 3.8216012362027965`*^9}, {3.821601320993821*^9, 
   3.821601407489362*^9}, {3.821601513954574*^9, 3.8216015221868553`*^9}, {
   3.8216016880973988`*^9, 3.821601802674203*^9}, {3.8216018342662125`*^9, 
   3.8216018692668047`*^9}, {3.8216019048583364`*^9, 3.821601952200364*^9}, {
   3.8216024312973213`*^9, 3.8216025038523207`*^9}, {3.821603222969924*^9, 
   3.821603236480957*^9}, {3.8216032982591004`*^9, 3.8216033467056394`*^9}, 
   3.821604403043935*^9, 3.821624837527959*^9, {3.8216249230135665`*^9, 
   3.821624932647497*^9}, {3.821625234782589*^9, 3.8216252828533206`*^9}, {
   3.821625356789598*^9, 3.8216253577407904`*^9}, {3.8216254642297645`*^9, 
   3.821625464556526*^9}, {3.8216256639340887`*^9, 3.8216256763244905`*^9}, {
   3.8216258798000374`*^9, 3.8216259043182383`*^9}, {3.8216259580869555`*^9, 
   3.821626060782062*^9}, {3.821626093237788*^9, 3.821626098496685*^9}, {
   3.821626146421872*^9, 3.8216261468451734`*^9}, {3.82162619117514*^9, 
   3.8216261950128627`*^9}, {3.821626297302932*^9, 3.8216263864538016`*^9}, {
   3.8216264634151917`*^9, 3.821626532917451*^9}, {3.8216265952294645`*^9, 
   3.821626626429371*^9}, {3.8216266887997775`*^9, 3.8216267207522445`*^9}, {
   3.821626758846937*^9, 3.8216268472134924`*^9}, {3.821626889216072*^9, 
   3.8216268913350506`*^9}, {3.821626986392141*^9, 3.8216270207098475`*^9}, {
   3.8216270610314884`*^9, 3.821627150814088*^9}, {3.8216273367836585`*^9, 
   3.8216273686537104`*^9}, {3.8216275180628643`*^9, 3.8216275638301463`*^9}},
 TextJustification->1.,
 CellLabel->
  "In[945]:=",ExpressionUUID->"8e75390c-870c-48a0-bf39-a7c4819f7f1f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Elapsed: \"\>", "\[InvisibleSpace]", "120", 
   "\[InvisibleSpace]", "\<\" minutes, People: \"\>", "\[InvisibleSpace]", 
   "86"}],
  SequenceForm["Elapsed: ", 120, " minutes, People: ", 86],
  Editable->False]], "Print",
 CellChangeTimes->{{3.821601875667884*^9, 3.8216018876529303`*^9}, {
   3.821601953307583*^9, 3.821601957334816*^9}, {3.8216024398473206`*^9, 
   3.821602513098095*^9}, {3.821603225143633*^9, 3.8216032372561064`*^9}, {
   3.821603282388775*^9, 3.8216033120651555`*^9}, {3.821604368874005*^9, 
   3.821604373548086*^9}, {3.821604403726415*^9, 3.8216044162553215`*^9}, 
   3.82162484463663*^9, {3.8216248889776964`*^9, 3.821624935291564*^9}, 
   3.8216252141844664`*^9, {3.8216253057775335`*^9, 3.8216253081883397`*^9}, {
   3.8216253530409517`*^9, 3.821625364554597*^9}, {3.8216254412269325`*^9, 
   3.821625452407504*^9}, {3.8216255324636297`*^9, 3.821625540323795*^9}, {
   3.821625683717642*^9, 3.8216257064728923`*^9}, {3.821625749515853*^9, 
   3.821625756936222*^9}, {3.821625886631241*^9, 3.8216259108029733`*^9}, {
   3.8216260325070744`*^9, 3.821626099139189*^9}, {3.8216261317053595`*^9, 
   3.821626155042344*^9}, {3.8216261995507727`*^9, 3.8216263870749693`*^9}, {
   3.821626601256959*^9, 3.821626676494598*^9}, {3.821626785531192*^9, 
   3.8216268549368706`*^9}, {3.8216269076526628`*^9, 3.821627027821323*^9}, {
   3.8216271270072465`*^9, 3.821627170580762*^9}, {3.8216273504461613`*^9, 
   3.8216274006209545`*^9}, {3.821627478667573*^9, 3.8216275073968945`*^9}, {
   3.8216275862952843`*^9, 3.821627595509892*^9}, {3.8216276318888*^9, 
   3.8216276340998735`*^9}},
 TextJustification->1.,
 CellLabel->
  "During evaluation of \
In[945]:=",ExpressionUUID->"28411b4c-7725-4cf9-9304-434ddfaeacf7"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
       92, 93, 94, 95, 96, 97, 98, 99, 100}, {Null, CompressedData["
1:eJwVxVFvk0AAAOAe9LxR8MJwZCG2YKUgEhbxaFpJEJSOjIO2ZAuj7BIo1L37
N/1Z6sOXb3n5/XThJpPJn3/+DxC4AhjcAA8QkAMKCrAHj6AGLSdyPrflau7E
i/yc3/Annk21aTwtoQodeAcJTGAKKTzA4U2ETGShzyhAKXpABerR61UjYEER
LMETQiEWEiGb4ZkyW84iURY3YicZ0kdpLTVS97bFMlawjg1sYoY7PMi2fCf3
16FiKVulVZjy+s65qVVTtVVXDdRntb9NbguNaGst0Vqte1/NmzlbrBbuotc/
6F/0Wh+MtUGNX8veXJm+Sczjyl/dW64VWbFVWcy62K7t2cRO7OKT52QOdWqX
uI0XeqnH/MhP/Z1/+bolG5KQB9KQLvgexEERHIMqGNf7Tbdl36owC5+j+2iM
+/ic1EmfjD+Gn1lap+cd3dXZIWN5ldf5Sz7SPT3QlnZ0LMqiKlh5LB/Ldl8d
26fhxNqXduz68zCMfwFjLE+U
       "]}, {
      VertexLabels -> {Automatic}, VertexSize -> {Medium}, 
       VertexCoordinates -> CompressedData["
1:eJw90CFIQ1EUBuCHcQiKBssMQxARBDHIVnSgYSAWYYh1KIhFDGaNSwaLRWa2
WawzabKJmjcFg8nmMEyF853wuHy89+75/1NpHW7tjRRFsfv3/J9f+2/t2+/3
lTi7fDDd3Bw/HnbjzPfsve8X1sqf/eXSnfcc56r/2f/se/c9/Ty8dnYm8j72
PceZ97P72f3sf/PGXoa1x4upnMfmsf85zpzP5rP5bD67T56Nm+rl4LmceVge
lofdx3FmPpaP5WP5WD52v7zr99WTyVIl87K8LC/Ly+7nODM/y8/ys/wsP8vP
5unTWmouzl/PZB/Wh/VhfVgfNo/jzH6sH+vH+rF+rB/rx+bre3p11Ks3ZrMv
68v6sr6sL+vL5nOc2Z/1Z/1Zf9af9Wf9WX+Wxz46o2fn2x9zuQ+2D7YPtg+2
D7YPtg+Wh+PM/bD9sP2w/bD9sP2w/bD9sP2wfL8VCvPc
        "]}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJyF2C9o1VEYxvGLtiEoM1hmGIKIIIhBZtkVNAhiEYZYB4JYxoJZo8lgscjM
NotV08RgEzX7Bwwmm8MwF86z8PnxcMPl8rtfznn/Pe97zu+ubm7dvnd0Npt9
OPgcGZ8/9388efP35/r4fnvh2srv75eX5nlu/MHpjVsnHu5P+Kd/77/u3F1e
yI9/2b/y8fmpd/Lru2uPTi6t1vV53ry0cfH8qzOT9eP3+eOX29+u3jg74eP3
Gl94sx8+4qj7N/vJ386xp8/u/DpX45fHn/G9rv3wrL/5eu3F3ueVCR+/z81f
ePPP9eHxJ/7rnzz7xz/50MWhf/JF9pN/efzP/tGfPPrRv/DsP+I4zE+es7/6
Co/+R50m61O/tn/Tf3j8b/snHvUZ3vpDbv+Gj7xP8qd/0YfzJvXN/m0eJT55
8t94/En+Gk9+5KlP484PefLT4g+Pfp23iU+uvrRv/c2v+jJ/6rPtn/ra7/Lo
o/FmP/Gr3+SznT/OI/UbHv2Zj3D167yL/cbbfAtP/WM/8euf+ZWrL5/Vv/6p
r+Zf4m3nl/UwP3LrI49/0Y/c/DTe9vf8kLf45fqnHqJvufNf7vyIPhOP/df0
Hvty7wdy6ytv5294m2/Ww/w4r7Le89b6ys1/W9+454c8/jb/rF94m39yzxfv
M94P5Pa/vNlv9ZfbH8lX+iH+O9/D2/xxvf0ZnvrZf3L1Fd7q4/o2j5If9ed5
Z/60rz3nfeon9/4mz/45Pz3vjN9+Mr9y3z/k6lMe/1s92/7W2/tB6m395Z7v
jft+Fa6+G/f9Kjz5d/42/+Xez+TmX27/y9v9ttl3nnt/k6tfuf3T6qm+tJ/1
+uv52fIZ/+XWV72qL3nb3/nRuPoJVz++P3oeNN7eL7Vn/7m/+g9v54f2fX+X
m89w9dv4ovX2h/6rV9e39wHjt15NX80/9Wz/yb2/qFfnq9z4rYfnS+PtPmL/
y9v+cv0z/873xGv+2v8F3n/Djc9+dv7J2/3B9d4/5OZPbn6afXmeGzf/xmt/
NO59ob1/yu2vxtt55/9/jS9ar3/u531Xbr38f8b9zaf+eb9yPue53U+153xS
D42bf+tlf9tP+tees/9/owj5SA==
         "], 2.*^-6]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0.00001, -0.00001}, 2.*^-6], 
         InsetBox["1", Offset[{2, 2}, {0.000012, -8.000000000000001*^-6}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00001, -0.000030000000000000004}, 2.*^-6], 
         InsetBox["2", Offset[{2, 2}, {0.000012, -0.000028000000000000003}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.000030000000000000004, -0.00001}, 2.*^-6], 
         InsetBox["3", 
          Offset[{2, 2}, {0.000032000000000000005, -8.000000000000001*^-6}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.000030000000000000004, -0.000030000000000000004}, 2.*^-6],
          InsetBox["4", 
          Offset[{2, 2}, {0.000032000000000000005, -0.000028000000000000003}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00001, -0.00005}, 2.*^-6], 
         InsetBox["5", Offset[{2, 2}, {0.000012, -0.000048}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.000030000000000000004, -0.00005}, 2.*^-6], 
         InsetBox["6", Offset[{2, 2}, {0.000032000000000000005, -0.000048}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00005, -0.00001}, 2.*^-6], 
         InsetBox["7", 
          Offset[{2, 2}, {0.000052000000000000004, -8.000000000000001*^-6}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00005, -0.000030000000000000004}, 2.*^-6], 
         InsetBox["8", 
          Offset[{2, 2}, {0.000052000000000000004, -0.000028000000000000003}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00005, -0.00005}, 2.*^-6], 
         InsetBox["9", Offset[{2, 2}, {0.000052000000000000004, -0.000048}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00001, -0.00007000000000000001}, 2.*^-6], 
         InsetBox["10", Offset[{2, 2}, {0.000012, -0.00006800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.000030000000000000004, -0.00007000000000000001}, 2.*^-6], 
         InsetBox["11", 
          Offset[{2, 2}, {0.000032000000000000005, -0.00006800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00005, -0.00007000000000000001}, 2.*^-6], 
         InsetBox["12", 
          Offset[{2, 2}, {0.000052000000000000004, -0.00006800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00007000000000000001, -0.00001}, 2.*^-6], 
         InsetBox["13", Offset[{2, 2}, {0.000072, -8.000000000000001*^-6}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00007000000000000001, -0.000030000000000000004}, 2.*^-6], 
         InsetBox["14", Offset[{2, 2}, {0.000072, -0.000028000000000000003}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00007000000000000001, -0.00005}, 2.*^-6], 
         InsetBox["15", Offset[{2, 2}, {0.000072, -0.000048}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00007000000000000001, -0.00007000000000000001}, 2.*^-6], 
         InsetBox["16", Offset[{2, 2}, {0.000072, -0.00006800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00001, -0.00009}, 2.*^-6], 
         InsetBox["17", Offset[{2, 2}, {0.000012, -0.00008800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.000030000000000000004, -0.00009}, 2.*^-6], 
         InsetBox["18", 
          Offset[{2, 2}, {0.000032000000000000005, -0.00008800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00005, -0.00009}, 2.*^-6], 
         InsetBox["19", 
          Offset[{2, 2}, {0.000052000000000000004, -0.00008800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00007000000000000001, -0.00009}, 2.*^-6], 
         InsetBox["20", Offset[{2, 2}, {0.000072, -0.00008800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00009, -0.00001}, 2.*^-6], 
         InsetBox["21", Offset[{2, 2}, {0.000092, -8.000000000000001*^-6}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00009, -0.000030000000000000004}, 2.*^-6], 
         InsetBox["22", Offset[{2, 2}, {0.000092, -0.000028000000000000003}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00009, -0.00005}, 2.*^-6], 
         InsetBox["23", Offset[{2, 2}, {0.000092, -0.000048}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00009, -0.00007000000000000001}, 2.*^-6], 
         InsetBox["24", Offset[{2, 2}, {0.000092, -0.00006800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00009, -0.00009}, 2.*^-6], 
         InsetBox["25", Offset[{2, 2}, {0.000092, -0.00008800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00001, -0.00011}, 2.*^-6], 
         InsetBox["26", Offset[{2, 2}, {0.000012, -0.00010800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.000030000000000000004, -0.00011}, 2.*^-6], 
         InsetBox["27", 
          Offset[{2, 2}, {0.000032000000000000005, -0.00010800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00005, -0.00011}, 2.*^-6], 
         InsetBox["28", 
          Offset[{2, 2}, {0.000052000000000000004, -0.00010800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00007000000000000001, -0.00011}, 2.*^-6], 
         InsetBox["29", Offset[{2, 2}, {0.000072, -0.00010800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00009, -0.00011}, 2.*^-6], 
         InsetBox["30", Offset[{2, 2}, {0.000092, -0.00010800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00011, -0.00001}, 2.*^-6], 
         InsetBox["31", Offset[{2, 2}, {0.000112, -8.000000000000001*^-6}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00011, -0.000030000000000000004}, 2.*^-6], 
         InsetBox["32", Offset[{2, 2}, {0.000112, -0.000028000000000000003}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00011, -0.00005}, 2.*^-6], 
         InsetBox["33", Offset[{2, 2}, {0.000112, -0.000048}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00011, -0.00007000000000000001}, 2.*^-6], 
         InsetBox["34", Offset[{2, 2}, {0.000112, -0.00006800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00011, -0.00009}, 2.*^-6], 
         InsetBox["35", Offset[{2, 2}, {0.000112, -0.00008800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00011, -0.00011}, 2.*^-6], 
         InsetBox["36", Offset[{2, 2}, {0.000112, -0.00010800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00001, -0.00013000000000000002}, 2.*^-6], 
         InsetBox["37", Offset[{2, 2}, {0.000012, -0.00012800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.000030000000000000004, -0.00013000000000000002}, 2.*^-6], 
         InsetBox["38", 
          Offset[{2, 2}, {0.000032000000000000005, -0.00012800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00005, -0.00013000000000000002}, 2.*^-6], 
         InsetBox["39", 
          Offset[{2, 2}, {0.000052000000000000004, -0.00012800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00007000000000000001, -0.00013000000000000002}, 2.*^-6], 
         InsetBox["40", Offset[{2, 2}, {0.000072, -0.00012800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00009, -0.00013000000000000002}, 2.*^-6], 
         InsetBox["41", Offset[{2, 2}, {0.000092, -0.00012800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00011, -0.00013000000000000002}, 2.*^-6], 
         InsetBox["42", Offset[{2, 2}, {0.000112, -0.00012800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00013000000000000002, -0.00001}, 2.*^-6], 
         InsetBox["43", Offset[{2, 2}, {0.000132, -8.000000000000001*^-6}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00013000000000000002, -0.000030000000000000004}, 2.*^-6], 
         InsetBox["44", Offset[{2, 2}, {0.000132, -0.000028000000000000003}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00013000000000000002, -0.00005}, 2.*^-6], 
         InsetBox["45", Offset[{2, 2}, {0.000132, -0.000048}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00013000000000000002, -0.00007000000000000001}, 2.*^-6], 
         InsetBox["46", Offset[{2, 2}, {0.000132, -0.00006800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00013000000000000002, -0.00009}, 2.*^-6], 
         InsetBox["47", Offset[{2, 2}, {0.000132, -0.00008800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00013000000000000002, -0.00011}, 2.*^-6], 
         InsetBox["48", Offset[{2, 2}, {0.000132, -0.00010800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00013000000000000002, -0.00013000000000000002}, 2.*^-6], 
         InsetBox["49", Offset[{2, 2}, {0.000132, -0.00012800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00001, -0.00015000000000000001}, 2.*^-6], 
         InsetBox["50", Offset[{2, 2}, {0.000012, -0.00014800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.000030000000000000004, -0.00015000000000000001}, 2.*^-6], 
         InsetBox["51", 
          Offset[{2, 2}, {0.000032000000000000005, -0.00014800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00005, -0.00015000000000000001}, 2.*^-6], 
         InsetBox["52", 
          Offset[{2, 2}, {0.000052000000000000004, -0.00014800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00007000000000000001, -0.00015000000000000001}, 2.*^-6], 
         InsetBox["53", Offset[{2, 2}, {0.000072, -0.00014800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00009, -0.00015000000000000001}, 2.*^-6], 
         InsetBox["54", Offset[{2, 2}, {0.000092, -0.00014800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00011, -0.00015000000000000001}, 2.*^-6], 
         InsetBox["55", Offset[{2, 2}, {0.000112, -0.00014800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00013000000000000002, -0.00015000000000000001}, 2.*^-6], 
         InsetBox["56", Offset[{2, 2}, {0.000132, -0.00014800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00015000000000000001, -0.00001}, 2.*^-6], 
         InsetBox["57", Offset[{2, 2}, {0.000152, -8.000000000000001*^-6}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00015000000000000001, -0.000030000000000000004}, 2.*^-6], 
         InsetBox["58", Offset[{2, 2}, {0.000152, -0.000028000000000000003}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00015000000000000001, -0.00005}, 2.*^-6], 
         InsetBox["59", Offset[{2, 2}, {0.000152, -0.000048}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00015000000000000001, -0.00007000000000000001}, 2.*^-6], 
         InsetBox["60", Offset[{2, 2}, {0.000152, -0.00006800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00015000000000000001, -0.00009}, 2.*^-6], 
         InsetBox["61", Offset[{2, 2}, {0.000152, -0.00008800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00015000000000000001, -0.00011}, 2.*^-6], 
         InsetBox["62", Offset[{2, 2}, {0.000152, -0.00010800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00015000000000000001, -0.00013000000000000002}, 2.*^-6], 
         InsetBox["63", Offset[{2, 2}, {0.000152, -0.00012800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00015000000000000001, -0.00015000000000000001}, 2.*^-6], 
         InsetBox["64", Offset[{2, 2}, {0.000152, -0.00014800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00001, -0.00017}, 2.*^-6], 
         InsetBox["65", Offset[{2, 2}, {0.000012, -0.00016800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.000030000000000000004, -0.00017}, 2.*^-6], 
         InsetBox["66", 
          Offset[{2, 2}, {0.000032000000000000005, -0.00016800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00005, -0.00017}, 2.*^-6], 
         InsetBox["67", 
          Offset[{2, 2}, {0.000052000000000000004, -0.00016800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00007000000000000001, -0.00017}, 2.*^-6], 
         InsetBox["68", Offset[{2, 2}, {0.000072, -0.00016800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00009, -0.00017}, 2.*^-6], 
         InsetBox["69", Offset[{2, 2}, {0.000092, -0.00016800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00011, -0.00017}, 2.*^-6], 
         InsetBox["70", Offset[{2, 2}, {0.000112, -0.00016800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00013000000000000002, -0.00017}, 2.*^-6], 
         InsetBox["71", Offset[{2, 2}, {0.000132, -0.00016800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00015000000000000001, -0.00017}, 2.*^-6], 
         InsetBox["72", Offset[{2, 2}, {0.000152, -0.00016800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00017, -0.00001}, 2.*^-6], 
         InsetBox["73", Offset[{2, 2}, {0.000172, -8.000000000000001*^-6}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00017, -0.000030000000000000004}, 2.*^-6], 
         InsetBox["74", Offset[{2, 2}, {0.000172, -0.000028000000000000003}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00017, -0.00005}, 2.*^-6], 
         InsetBox["75", Offset[{2, 2}, {0.000172, -0.000048}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00017, -0.00007000000000000001}, 2.*^-6], 
         InsetBox["76", Offset[{2, 2}, {0.000172, -0.00006800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00017, -0.00009}, 2.*^-6], 
         InsetBox["77", Offset[{2, 2}, {0.000172, -0.00008800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00017, -0.00011}, 2.*^-6], 
         InsetBox["78", Offset[{2, 2}, {0.000172, -0.00010800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00017, -0.00013000000000000002}, 2.*^-6], 
         InsetBox["79", Offset[{2, 2}, {0.000172, -0.00012800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00017, -0.00015000000000000001}, 2.*^-6], 
         InsetBox["80", Offset[{2, 2}, {0.000172, -0.00014800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00017, -0.00017}, 2.*^-6], 
         InsetBox["81", Offset[{2, 2}, {0.000172, -0.00016800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00001, -0.00019}, 2.*^-6], 
         InsetBox["82", Offset[{2, 2}, {0.000012, -0.00018800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.000030000000000000004, -0.00019}, 2.*^-6], 
         InsetBox["83", 
          Offset[{2, 2}, {0.000032000000000000005, -0.00018800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00005, -0.00019}, 2.*^-6], 
         InsetBox["84", 
          Offset[{2, 2}, {0.000052000000000000004, -0.00018800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00007000000000000001, -0.00019}, 2.*^-6], 
         InsetBox["85", Offset[{2, 2}, {0.000072, -0.00018800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00009, -0.00019}, 2.*^-6], 
         InsetBox["86", Offset[{2, 2}, {0.000092, -0.00018800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00011, -0.00019}, 2.*^-6], 
         InsetBox["87", Offset[{2, 2}, {0.000112, -0.00018800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00013000000000000002, -0.00019}, 2.*^-6], 
         InsetBox["88", Offset[{2, 2}, {0.000132, -0.00018800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00015000000000000001, -0.00019}, 2.*^-6], 
         InsetBox["89", Offset[{2, 2}, {0.000152, -0.00018800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00017, -0.00019}, 2.*^-6], 
         InsetBox["90", Offset[{2, 2}, {0.000172, -0.00018800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00019, -0.00001}, 2.*^-6], 
         InsetBox["91", Offset[{2, 2}, {0.000192, -8.000000000000001*^-6}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00019, -0.000030000000000000004}, 2.*^-6], 
         InsetBox["92", Offset[{2, 2}, {0.000192, -0.000028000000000000003}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00019, -0.00005}, 2.*^-6], 
         InsetBox["93", Offset[{2, 2}, {0.000192, -0.000048}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00019, -0.00007000000000000001}, 2.*^-6], 
         InsetBox["94", Offset[{2, 2}, {0.000192, -0.00006800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00019, -0.00009}, 2.*^-6], 
         InsetBox["95", Offset[{2, 2}, {0.000192, -0.00008800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00019, -0.00011}, 2.*^-6], 
         InsetBox["96", Offset[{2, 2}, {0.000192, -0.00010800000000000001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00019, -0.00013000000000000002}, 2.*^-6], 
         InsetBox["97", Offset[{2, 2}, {0.000192, -0.00012800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.00019, -0.00015000000000000001}, 2.*^-6], 
         InsetBox["98", Offset[{2, 2}, {0.000192, -0.00014800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00019, -0.00017}, 2.*^-6], 
         InsetBox["99", Offset[{2, 2}, {0.000192, -0.00016800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.00019, -0.00019}, 2.*^-6], 
         InsetBox["100", Offset[{2, 2}, {0.000192, -0.00018800000000000002}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{364.61611647365305`, Automatic}]], "Output",
 CellChangeTimes->{{3.8216018756738834`*^9, 3.821601887661929*^9}, {
   3.8216019535276227`*^9, 3.8216019575218496`*^9}, {3.821602440089322*^9, 
   3.8216025131950946`*^9}, {3.8216032252336335`*^9, 3.821603237343107*^9}, {
   3.821603282478772*^9, 3.821603312152156*^9}, {3.821604368866005*^9, 
   3.821604373541088*^9}, {3.821604403789397*^9, 3.821604416315323*^9}, 
   3.821624844728629*^9, {3.8216248890407095`*^9, 3.821624935366563*^9}, 
   3.821625214265467*^9, {3.821625305859536*^9, 3.8216253082673335`*^9}, {
   3.821625353123952*^9, 3.8216253645475984`*^9}, {3.8216254412189302`*^9, 
   3.821625452400504*^9}, {3.8216255325246315`*^9, 3.821625540381797*^9}, {
   3.8216256837926426`*^9, 3.821625706586894*^9}, {3.8216257496418552`*^9, 
   3.8216257570812225`*^9}, {3.8216258867132425`*^9, 
   3.8216259108809776`*^9}, {3.821626032593404*^9, 3.82162609913019*^9}, {
   3.8216261316973495`*^9, 3.821626155120344*^9}, {3.8216261996347723`*^9, 
   3.8216263870679674`*^9}, {3.821626601249958*^9, 3.821626676515601*^9}, {
   3.821626785538192*^9, 3.82162685494987*^9}, {3.8216269076586637`*^9, 
   3.821627027833325*^9}, {3.821627127012247*^9, 3.821627170592763*^9}, {
   3.821627350451161*^9, 3.821627400787982*^9}, {3.821627478837571*^9, 
   3.8216275075668926`*^9}, {3.821627586285285*^9, 3.821627595675893*^9}, {
   3.8216276320538015`*^9, 3.821627634267925*^9}},
 TextAlignment->Center,
 TextJustification->1.,
 CellLabel->
  "Out[948]=",ExpressionUUID->"126807ca-8ef7-4dad-a249-02fefce62774"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1a4dbdc9-5259-4694-badb-144e1bf843cc"],

Cell[CellGroupData[{

Cell["Introduction to Random Graphs", "Section",
 CellChangeTimes->{
  3.821594222466804*^9, {3.8215946036432924`*^9, 3.8215946095141687`*^9}, {
   3.821603414807458*^9, 
   3.8216034244715123`*^9}},ExpressionUUID->"8b975cee-4994-4ab3-a8db-\
75cbdef74bc9"],

Cell["\<\
In mathematics, random graph is the general term to refer to a probability \
space over graphs, thus a random graph is described by a probability \
distribution or by a random process, which generates it. From a mathematical \
perspective, random graphs are used to answer questions about the properties \
of typical graphs.  For  example,  it  offers a way to study  how  the  \
connectivity  of a random graph evolves as the number of edges increases.\
\>", "Text",
 CellChangeTimes->{{3.821611261919464*^9, 3.8216114089397416`*^9}, {
  3.821612109004345*^9, 3.8216121096766233`*^9}, {3.821627666836037*^9, 
  3.8216276996544867`*^9}},
 TextJustification->1.,ExpressionUUID->"ae27f246-a926-449b-af27-82999f135ff3"],

Cell[CellGroupData[{

Cell["Brief History of Random Graphs", "Subsection",
 CellChangeTimes->{{3.8216023985903215`*^9, 3.8216024060623207`*^9}, {
  3.821611154108618*^9, 
  3.821611158564079*^9}},ExpressionUUID->"4f677161-dbd8-4a13-bb0a-\
448f2e6e7d08"],

Cell["\<\
Key ideas already appeared in sociology and biophysics [7; 8]\
\>", "Item",
 CellChangeTimes->{{3.821603003879492*^9, 3.821603018236586*^9}, {
   3.821603495159026*^9, 3.8216034976395254`*^9}, 3.821610397428356*^9, {
   3.8216104505388083`*^9, 3.82161045446698*^9}, {3.8216104985784645`*^9, 
   3.8216105120585213`*^9}, {3.82161070307868*^9, 3.8216107683634357`*^9}, {
   3.8216111066197205`*^9, 3.821611147948542*^9}, {3.8219484211978836`*^9, 
   3.8219484259321327`*^9}},ExpressionUUID->"57437801-c4dc-4223-bc22-\
a903d2caa301"],

Cell["\<\
Mathematical foundation by Paul Erd\[ODoubleAcute]s and  Alfr\[EAcute]d  R\
\[EAcute]nyi  \"On  random  Graphs\",  published  in  1959 [3] and then a \
seminal series of papers\
\>", "Item",
 CellChangeTimes->{{3.821603003879492*^9, 3.821603018236586*^9}, {
   3.821603495159026*^9, 3.8216034976395254`*^9}, 3.821610397428356*^9, {
   3.8216104505388083`*^9, 3.82161045446698*^9}, {3.8216104985784645`*^9, 
   3.8216105120585213`*^9}, {3.821610780627429*^9, 3.821610805467784*^9}, {
   3.821627723612567*^9, 3.8216277244525375`*^9}, {3.821948439192644*^9, 
   3.8219484392617693`*^9}, 
   3.821948478230527*^9},ExpressionUUID->"c090c27f-6894-4b42-a482-\
4ad87052a81f"],

Cell["Different approach by Edgar Gilbert in  \[OpenCurlyDoubleQuote]Random \
graphs\[CloseCurlyDoubleQuote] [5]", "Item",
 CellChangeTimes->{{3.821603003879492*^9, 3.821603094547223*^9}, {
  3.821603500527523*^9, 3.8216035034795113`*^9}, {3.8216105959599667`*^9, 
  3.8216106210910587`*^9}, {3.8216108326834745`*^9, 3.8216108428902087`*^9}, {
  3.8219484807729645`*^9, 
  3.821948486539523*^9}},ExpressionUUID->"5eae476b-8233-45c8-9d06-\
5504d2e80e38"],

Cell["\<\
Duncan J. Watts and Steven Strogatz bringing random graphs closer to \
real-world networks [9]\
\>", "Item",
 CellChangeTimes->{{3.821603003879492*^9, 3.821603094187424*^9}, {
  3.821603194655515*^9, 3.8216032048558507`*^9}, {3.821603490287367*^9, 
  3.821603508374268*^9}, {3.8216041439322653`*^9, 3.8216041545801315`*^9}, {
  3.821610683699644*^9, 3.8216106875709968`*^9}, {3.821610811058592*^9, 
  3.8216108535431557`*^9}, {3.821611141564027*^9, 3.821611142507405*^9}, {
  3.821627731675947*^9, 3.8216277326765676`*^9}, {3.8219484906531143`*^9, 
  3.8219484950529385`*^9}},ExpressionUUID->"52d4d9d1-5329-4060-a0b8-\
04b10a1624a4"],

Cell["\<\
Systematical study of random networks and general network science by Albert \
Barab\[AAcute]si [1; 2]\
\>", "Item",
 CellChangeTimes->{{3.821603003879492*^9, 3.821603094187424*^9}, {
  3.821603194655515*^9, 3.8216032048558507`*^9}, {3.821603490287367*^9, 
  3.821603508374268*^9}, {3.8216041439322653`*^9, 3.8216041545801315`*^9}, {
  3.821610683699644*^9, 3.8216106875709968`*^9}, {3.821610811058592*^9, 
  3.821610827666964*^9}, {3.821610952819029*^9, 3.8216109603317537`*^9}, {
  3.821611032571927*^9, 3.821611097507323*^9}, {3.8216111443241463`*^9, 
  3.821611182947596*^9}, {3.821627742556177*^9, 3.8216277435961175`*^9}, {
  3.8219484973728676`*^9, 
  3.8219485063565607`*^9}},ExpressionUUID->"0e8f3582-aaf0-4060-bc4d-\
7cd257362de8"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
I+FcQy7F/mBK3fm2bPX08+pg4rZs0LYLFrqfO/69Tger/0D/9+gOndISGwAA
ALJLoHX/9J5/jx6lNU7n+T7IOIVEpUs3UfsPJD/hzZvhne/b0ra9qMVLnFzW
lzt36/ppWrcJdt72HcWeN1+ksir9bf30O8kxb9WNVwhA7dvv/TyTp/g+vtW9
Z/h1jn+31KbNyU98+ozrcfTnkbBNPHxOYc3RsV5olrzNP/zo2di274jkGmpQ
Bg2uO2H8fmT16uP+8z17u/f/lZa61lf/+7D6VtzoayhI2zh9nQAAAMDPqfw9
wfK4zz5Pf6wR5KT27DmNnzCK/P/bMupV512+p3oXFATbByxR6dFL5Nw5I239
pLTvKHLtmteP/Ql7wrvez9Gytbd370+JJP//9jpL9p6Y/D+18m3+r8954oSn
31FLliatqx7D4fqZJrt3hE33bbRu6/+6GzM2fTECAAAg4+n3sUGeufX7sXSL
KidVmzYlPmGU+f/Pfv4u3K3Oa9eFf+4Xm7u+F4w0/9elTz9/YyD0OujNWvj7
XPW8Bx+izP+deLZuS3xi8v/UylP5v2Z/PM39d1q1aXTfUnXgoPvv9+6b9jU2
dB9SkPaRO3fSGicAAAAy1O3bwZ63R44yEm5kOamey3D9esMTRpz/O3ndzl2N
11e/93cbg5xKnc9fSH9bP133xvLhRPGs3+D7+PYboz0fX4s6/7d694kncXbD
E5P/p1bq5f96jovVpav79VEvXkcs5uT2rm160v/6EinTcxKCfM8WLU5/rAAA
AMg4+rkw0PNkI7lI5PFGmJPan3/R8IRpyP+tocMTV7aiwlkrINJzd+vR6Dzo
dOT/ejy/V9bLI/2f4/kX6/ZC8HqOqPP/eEm4BiL5f2qlfv6vz33ggLfPo95c
GLVsuft1+/G0UNozCL2Oqe/20XN+AAAA0OTpdbB8P0vq98aprmEfkJdcx574
nthfff2L8u5EZ6yva706dWl4Qg/5vz3pfWcNhQZl4yaxho3wloPcv9/g1Hq9
fE+fR59+Ts6iTpwUKS4Wdex4Xb9Ot+6efl/PLwja1jrHkrt3G5bSUrHHjguU
tyVUdj1wbqjbxivX/P+VUYnrW14uasdOZ80B13j27W94YvL/1Eoj15E9cZL7
78bzaVGq7hfu3XOfY9+5q0hlZSjtGYRzXwnQRmFdAwAAAMhSxRcDPUfaH001
FnLgXEfn8R7epTd4V+wh/086tlaPJR4wyP289ccS19R42pPBeQ9pWYnPXVsr
9vgJ7p9pl24Jx6SnnFdWx+vQvGWgvK0+e/6Cxo+h1wRI1r8Tb3+v3PJ/+/Xk
8wm89Nk0pfzfWd9B58pJipc57c73MtlxqqsTB3z/vrPWpGvb6n0a4/Seja4/
a3o9/RoP36tEn82XX5mNGwAAAEbZc+b6foZ0nsVPnTYWcyq5jpc1wRrMh081
/xePOWG9vd3V4QL3z2L4y4nnkj+ttlasvv3d651gP4Aw8ko9vyBpTjJ+QvL4
vz1Okj3d7LfGOmMwksZZfNHbeVLM/1XeFvc2S7RfXK7m/x7Y38xwjz+F8Uae
xiDoPrD4fU3PF0lav3e8Xa9Rs9+f7F6n+iXR+CYAAAA0GV7Hhz9T4vmRSSnl
/7PnuP/umbPP/lIY+f+0T93Pe7bw2d+ZOcv9vIcOe2uzbdvdj5VgjHzKeeXN
W675lF7Tz9WZ5LmxPoZbjmd//Y2ntkr5/f/Uj13yzK5Nav0/L6LO/51zvDXW
9Ryue0u0butrLYkoqWPH3OuTqB3r398AAADQNFy6FOj50fQ60inl/x5yALl0
+dlfSjX/1+8U3cbqxnOq+vmNnmfulqs0tm5fA3odQZc62OPGB2prPbZB594N
ypq17muod+vu7Gnuxv4kef+J3sNCHjxI3teg3326jZUQD/P/+w9MXN+t2zz1
8zS21gL5v0v8qa43ovc5ae1hDZBk7e+lryqNvOxv0ODz+cpbPxgAAAByi+e1
5eo/hzeyX3a6BMp1YjFRq9e410+vFV8/H/Wy/n+vPs574frFGjzE9f2380ye
IPfWa/ol/T2997gPrnOg9VyCAG0duHTs7KxV6Eqvn5Bs3YaBL/2iji7rouu9
FF3bKcL1/+1pn/xinbn6yP+Txx/CeqNq3frgn59e97Gxz86QQPdw5gAAAAA0
SVZfl/wy0bO9y9jndPCUk7br4OSXT4pLzvKkvDyy4Qmj3v9P9zkkyINd8/XB
Q321m+s+Dwn6EyLJ/1u3FfvTz+rWzPfyee/Zm/yanDP3Fz/rspelPWmyeztF
kf8PGSYqPz/5icn/k8cfxn4j8fzdGvWq/89Pj7W5ciX184etrCzQ9Vh/rhEA
AABy3OXLgZ4bM2H8a5TvpNXmvIYnjDj/V0uXJayna59FPKf0I9n6eU7p0Ck9
bd1vgKglS505CV7osRFJc5nCp3IZt/0snH0rG1kn/tt2Cjv/f7G52JM/cPZk
TIr8P3n8Ye03eu2a77Xz1cJF4Zw7Al72FmnwGXlcCwMAAAC5QS1YGCiXMT32
34k9qvx/6PC6vcrqiyr/b9ZC1KrVjdbTda/CsPP/Hr3S19a6xOunDhxMHrRe
tyCePzd6DN1nUW9Ov17HPWku10gO/eT3oxz/r+d5NJbHkv8njz+s/D9O97l5
/tz03pGJ7gsZItAeLswBAAAAaFL0nuu+nxl1fpwBIslJ27QTKbue+IQR5P/O
OPSr15LW03W8fr8BvtrNmQeR9PNt2J8Qaf6vSzy3T7aXpF4rz2+uqefYJ/2d
115P3k4R5v/O+ce8lfjE5P/J4w8x/9d9Rrr/zPXz0nNziorCO28Uzp8PdB16
3Q8TAAAAWe7+/UDPi86Y7QwQek7at59IaZK5vVHk//Pmu9bTGjYi+XFat/G0
nr3j0SP3vC1BXuqlrfXegs6eCQ3Kpbo9+fRaDMmO8dKQxttgePI20GsDNIh5
/wH33EfvF9DYOd3yf71OYsL6XnbmItiT3ndvs3iMDZD/J48/zPxfi+f1rt/T
j6aGe86IBNkHINF+nwAAAMg9XvaCT/j8nSxHTqPQ8v9OXZz1s93mg3vJ/511
3XV+FS9q1y73c7dq4/TDJOO2553zmRSd89Zmhwvc6/DUOnp+2totr/Sy5nqD
PRc1PU/brR31O9yRrzxbhrq/103Wl+WW/7uugan3K3DJx+wJExv+Hvl/8vjD
zv/v3nX/TsxfEO45I2J/9rm/e5+u2xtvmg4bAAAAaWBPnuL7WTHR3HBTUtqT
fseOunevOt/0+u7cQ/6v151/mj1mrHuMX3yZvJ67drsf471Jnqpgv/aGex0S
rE8XSv5/4qT7ubduaxhzwP0pPZX+jc+dSDn/18cY9Zr/7xP5f/L4yf8bpY4c
DfQ9AAAAQO7Tc939PifaM2eZDvuJdOY6jgD5v95fy7Vd9Z5i8WM3Ss/T8LBv
odq4KWn4ntZ61OMRamsb/m4Y+f/qNe51qD8WWe/TFs+Rg+Q0nnOf8xcSxpty
/v/4sTO2JOn59T4E9ZH/J4+f/D+pIPd1deyY6bABAAAQJbf90Rp79j5z1nTk
T2RF/h+n80TX/OKDKUlPbX841dPnY78/ua7O8dzT8eiR8z7ffnuct9+fNTvh
+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
G5FYzL2tws7/vy1du4tcupygkZXYr77u/vsdO4tUVTUe+NlC92O0bS9y755r
GyB6Vqcu/q6fNu1MhwwAAAAfnLHLfvPBTZtNhw0h/4+kJMv/9V4Z/QaEf86R
r4jU1iZvq6jyf126dKtbo6C+sjJPe4Pa38xIHLRSYg11+Yz19ZWXl7TuSB/r
pSG+rx8AAABkD/vzL/zng3v2mg4bQv4fSWks/4/FvL0PD1jsiZOcfLnRtooy
/9fnn/Zp4rZettz9919sXrfmYf3fzdvift7XXne/UJA29pi3fF87cvOm6bAB
AADgkf3BFP/54PHjpsOGkP9HUho5pz1vfvTtnGQv9ajzf6tZC5GHDxNU3Pb0
Dt8e+/azv1dd7T6WvEWruv0RkDGcNTl9XjtSWGg6bAAAAHjkrCvu93mv+KLp
sCHk/0ljGD1G7Mkf+C9z5zU8YTwvtlq3dW8rvabelA+dfdT1Xmp6D0C1Y2fd
Pg1e2lqPw3/8OHFbueX/Awc5521Qtm139mjz9Dnvzk/8QZWUOO/4XX+/4MiT
X9H7wrv+/NJlnq4TpI9e29X3/WHvPtNhAwAAwCP7tTf85/83b5kOG1p1tUhl
ZeOlvNw9T9Z79SU7hi711qfLhvxfTp9JuXmfnG/RYvfvRfuOIufPN36MY8fE
atXGPZfasDHh76fa5np8v+u59d6Ejf3+3HnubdBvQDxQS6TsujOeIOnPvjSk
7meRUdTqNf7z/yTjVgAAAJBZnH25/eb/icYJI/NU17jn/42t3ZZEU8v/rWHu
+/ypwwWux1Fbt7l/Hm+NTRxDim2ujh13P/f0GY0fIBYTq7/72oc6f7THjU/+
cy80Ezl/wbW9kH4qP9/334OEY2YAAACQkfS4Yd/5v22bDhtemMr/X3uj7t2u
S8mK/F/PY4/nq0nPN3S4t2Pp9fB7u8zZaN0m4XvxlPP/nbvcc/clS5PHX1go
1vMvJj+O23v/gNcc0kP3Y/nO/7/+xnTYAAAA8Mjq0cvf855eJwzZwVD+H1pJ
Zf7/q6+LPWGi59JY7qvXunQ91/wFnttOz7dw7btIsL5GSvn/7XKx+vZzz/+f
mr/faPxffZ3aZxq/38ijR57bC2l26rT//H/aJ6ajBgAAgEdWh07+nvf0PGdk
hyac//vOYeqvX//tuby8N9+x03PbqbXrAuXhrm3eroPTB1C/WC+PdNbZd22D
+H2g/joPCdXU+O8zfLpuR496bisYUFzs/7vz/mTTUQMAAMAjT7nB00W/v0N2
IP9PPf/3kq8fOOi57fR6/K7HS9CfEHWb63n7nuug1zIM0sYffuT5HDDk2jX/
n+u4d0xHDQAAAI98P8cPGGQ6ZHhF/u89h2ks//ew9r86eMhz26ntO9yPt259
WtvcWXPQ55oe9tSP/Z1Hjy+oqPB1Dhhw567/62f0GNNRAwAAwAu9BpvffEHv
24XsQP6fev7vYT+00PP/rdvS1ub2lA9FHj/2HP8TlZVide7q+Tx6HgWywP37
/q+h1143HTUAAAC8qK31nzN4Xesc5pH/p57/exmvvzvfc9vpvdJdj3eoYX9C
6G0+bISztmEq1L793tq2kT0NkYEePvR/Lb0yynTUAAAA8MJDftigjBhpOmp4
ZSr/12tK6PXm3UrzlpHl/3pNcj1233PZtTvxuTzsh6aWLffcdvbsOa7Hk6Ii
/23ut4x61XPMSesz5i33+ty6Fcq5kAZ6v0v+JgAAAOQmPYbXUN6ANDCU/7vt
Rf/kOPH8Pqr8X06f8V2vhO66z4e2x3h/v63fuyc93ovNE+6P55r/Dx1WV2dd
9B5uHTu791scLki5eexPPnX/LJA9GBMGAACQux488P2sZ7/2humo4RX5fyis
vv2Tn+/5F0UuX3Y/0KlT7t+xkYnHUvttcz0mwfVcgwbHf1Cl1Dbk/zkmyJow
g1kTBgAAICsEWevJY26HDED+Hwr7y6/cvxsDX3L60xp185azd6bbcfRchER8
t7n+7Nt3dD9fgr0GfbUN+X/O8Z3/62sfAAAAma+yyv+zHms9ZY8mnP/bX38j
au26QEWPgX5G2XWxXmjm/t3o2t1Z30/Ky+veq+ty44aolSs95eJWqzaN7pEX
pM297F1o9eojEot5+rwSIf/PMfFrwfffhMFDTUcNAAAAL4LM9Rw+wnTU8KoJ
5/+plETv8fU+eb6Oo/sLvPQZPN1us2aH2+a6f69NO9fzqnXrPX1eiZD/55ga
1oQFAADIWbYd4F0Pcz2zBvl/aPm/M1cmyn0P9fcqwbp/qba5PXee+7k7dXHy
viDI/3NMkP3/Rr1mOmoAAAB45PtZr/9A0yHDK/L/8PJ/7dIlZ4x+6Ofs3LVu
zkAUbV5RIVZr95gbW3fADfl/jvGw30WDa2/0GNNRAwAAwCNnr3Y/z3u9+5oO
GV6R/4eb/2u6D6DfgPDOp9f7v50890+1ze2Zs9zjaNOu0bUHkiH/zzG3bvnP
/98eZzpqAAAAeORlfvAzJZ6HIEuQ/4ef/2uPHsXbbXpqYwE6dBK1eImz31rk
ba7nLnjo57Onz/AUy9PI/3NMWZn//H/CRNNRAwAAwCOdh/h63tNjlZEdyP+j
yf+/VVklasVKZ/6zp3E0rduK/eYYUZs2NdxjwK2tUmxzvR+Ca3zNW3oai/DM
ccn/c8vly/7z//cnm44aAAAAHllduvl73mvf0XTIQObR7/HPXxB14ICordtE
rVotavWauv//4CGRkhJnvU0goxUX+8//P5pqOmoAAAB4ZPXs7e95r3Ub0yED
AKJQVOQ////kU9NRAwAAwCOrv/+1zAAAuUcdO+4////qa9NhAwAAwCNr+Mv+
8//KStNhAwBCpnbt9p//z5tvOmwAAAB4ZI9923/+X3bddNgAgJCpdet9/z1Q
a9aaDhsAAAAe2VM+9J//F50zHTYAIGRq4SL/+f+OnabDBgAAgEee9gWr/7xX
UGA6bABAyPRcft9/D44cNR02AAAAPFKLFgd437PDdNgAgJDZk6f4Hw92/oLp
sAEAAOCRWr+B+Z4AALHHjPWf/9+8ZTpsAAAAeKTy9/h+3rPnLzAdNgAgZNaw
Ef7z/+oa02EDAADAI3XihP/8/4svTYcNAAiZ1auPv78HzVqYDhkAAAB+XLrk
P/9/b5LpqAEAIbNatvb396BLN9MhAwAAwI/yct/5vzX8ZdNRAwDCVFHh/2/B
wJdMRw0AAAA/LMv/M1+nLqajBgCEqbjY/1iwN8eYjhoAAAA+Wd26+1/zybJM
hw0ACInau89//v/Jp6bDBgAAgE/WK6P85//XrpkOGwAQErVyle+/A2rJUtNh
AwAAwCf7gyn+n/uOHTMdNgAgJPZXX/v/O7Brl+mwAQAA4JM9d57/577NeabD
BgCExB433v84sMJC02EDAADAJ5WX53/e59x5psMGAITEemmI//z/7l3TYQMA
AMAndfy4//x/yoemwwYAhMRq297f34EXmsX/eCjTYQMAAMCv69d95/96zUAA
QA6oqvL/N6BvP9NRAwAAIAjL8v/s166D6agBAGE4c8b/GLA3x5iOGgAAAAFZ
3br7n/t5J/fmfj6MPZZLlQ+l4G65bL9ZJuvLrsjKq5dlcelFmVNyQb4pLpJP
z5+VD4tOyXtnTsjbp47KWyePyLtnjjv/7PP4v5t58ZwsvFwsK65ckg3x3995
67ocvXtHSuLHvfe41nQVgdwVqxSpviHyoFhU+QlRNw+Kur5H1LUdoko3i7q0
TuyLK8S+sEjsorlin50R/+85Yp+P/+/i5WKXrI7/3EZRV7eKKtsl6sY+UbeP
irpzKn7Mi3XHfvzQdC1Dp9Zv8J//f/Kp6bABAAAQkP3GaN/Pf+rIUdNhe1b8
sEK23LgmX10olNEnCqTPoT3SMn+rfH/bevlP65fLH6xcIN9Z8E3aym8tmS1/
tGqhc+5/3LrOiWXg4X0y/vQxp49h3bVSpw/iWnWV6aYDzKq9J+pekZOP28VL
xT71uVgH3xRr90CJbe0isY0tJbb2xxJb+Y/pLWt+KLENzSSW10Fi23uJtXeE
2Mc+EPv8wnisO0UeXBCxaky3nif251/4v/+vWGk6bAAAAARkfzPd//Pfysx5
/rtbWyt7bt+U2SXnnffxXfbvcvJqnWOnM6+PqvzhygXyD1vWSsd9O+SNEwVO
H8G2m2VysbLCdNMDqau67ryrd97Bn5wm1p7hEtvSUWKr/zn9eX3YZf3zYu3s
J9bhcc54Az22wOkbyCB6PRff9/+j2dP/CwAAgGepLVv9j//8cGpaY7SVct7j
63fjkwtPSs+D+U5O/PvL5xnPz02WX104Xf5qwwrpun+XTC06Lbtv3XDmMQAZ
58FFUVfyxD7ztVgHXq97f286PzdZ8jo47aDbQ7eL3D9v5GOxWrTyP/+rstJI
rAAAAAjBhQv+1wAcOizSkM5VPHDec+s8X4+TN51nZ1v5X9cslhb5W2XimePO
GgRA2jyuEHXrsDPP3iqYILHtPSS2+gfm8+2sKN9z+kWsgnfi7bdEVPkxkVh1
dJ/V7XL/9/6OnaOLBwAAANGLxcR6/kV/z4DNWoR2er2L9LF7d+Tjc6elVf42
+fcr5hvPn3Ot6HECf7t5tQw5sl+WlJbI9ZoIcwo0LQ9LRV1eX5fr57XPgBw6
B0u8Xa2DY8Q+N1/U7QIR61EoH506XOB/7Ndo1v4HAADIdlbf/v7HgJaVBT6f
Xt9Ov5t+bscm+TdLZhvPj5ti0esjtN2z3RlnwVqD8Ezn+5fWOHPanfX3TOfG
TbGs+idnDURnTQE9RsAONudHLVvuP/+fMTPkCwoAAADpZk+c5H8NqL37PB9f
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
3zI8JLoJECxl5YSujW2rv714Ce4BOEg+tJL/uVbNVtHhhxQ6D8DOOKm0E7jX
4hQ1I9N+7r/wLkL6MC4jXCjVm/nHSR1eJTp8AAAAx9yem87dn11TUyE6fAgy
NSnZfr+b3gPoxdpKdqmdBfzPtA4sEh1+SKJ1Us7evp7revnj2N1ERi1A29RD
h+3fh7zpFkJaW0U3BYLMznoAag/6OwAAEPrKenu4c///it8nOnwQxIl6W/K9
9+t1BYCXoq/Zx9eXvZiQ3hrRDQhZT9tYJ+Ud1EqxRS0u1mv127r20Fr/VVWi
mwICqN3luGcKAABh7fID8dz9WHrvAMKUqhLl5Vft3wN44EHcA+CkNsTxj/sv
Q70zO0YVmVwYtYPrunlexGbSNz4uugmhScvZ5VlzbF931Jxc0S0BgZSSt/jH
ADQmiA4fAACAW+qJVu7c/8EC9J+AEPnRx+3fA3hwGSEDWDuSiTJGpPjZfH1Y
7X1EHhXdgpB3wMb1c1lhnujwQ09NDZHnzLWf++/eI7olIJo0TKS4mXzXz/3X
adfPEdEtAAAA4PJv+/dw9V3/Ye9WMiDh+RUQPW+nNf1t3wO47wHU4WKg1Gzh
f37Vccj1+N5++22ycOHCgNuiRYvI0qVLyauvvkry8/Mt7XN8fJxs3ryZzJs3
j/zwhz8kX/va18j5559P/uM//oMsWbKEZGVludwqXwvzM7muoZ/Zvp4cHcD3
3TL63N+B3B/r/MEpalsW//ipynWiwwcAAGC2tb6W+9lVRGOd6PDBS9raiHzb
fPv3AJbcS8jJk6Jb433jfUSKuYqr3yrnPxuUEP/whz+Qv/u7v7O8/eY3vyF1
dXUB93fgwAHyve99z3Q/11xzjfZ1DF6N/Z6xMXLurk1c19GrsR6gJWppKZFn
32g/91/5guimgMfIuU9w3wMgwx2iwwcAAGDyXc65q7ReAICPhga9nrbtewB3
LSakq0t0azxNKV3D12eNvETrs7YHJUbW/J9uF1xwAWlv940vKiqKfO5zn7O8
nwsvvJB0dgZvre7Xq8q476ViPUBj6uECIt8wy/515cmnCBkbE90c8JrBZu78
Xy5aLTp6AAAAy96sLufurx4fRK02CIDOz3XgOZ2+JvcJPFvxa6hNz+O5xqyW
vxu0MKfm/3S8/k9/+tPT209+8hNyzjnn+OTuCxYsmLSf1tZWct555016DR3z
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
fG7HR4av/VncXv21wcSc60TNCGp84E30vhbrdX/qeJigkIYIGR8IvI10mufJ
JW8Z74NuZ+aU8giRYv5gnsMWrdbrzfslj+rr5Jn+HuNna/vwXZfPSv5P17EP
aKjFeJ09fbuY+FsTkDv/pzXpIi81OeZFRG0OMCZMGSdy7uPm7e6cfE1X27LM
vwN+xw180t6M+4zfWxcV+DwLYv7Z+m4AAACn0LyGtR/4lYhNwuIdkMZN4wtU
u81IuOX/Vp5l09eYOdLXa5oXn7trkz7mfiq75zy5vcW0DY8UBf4ujCkK+XHs
btN9vFldTq7LSDJ8DV0zkY6NCDY5bTF7P7C3Juhxgrc8V1bIfN1/zuBemjDS
sHnuV/YO0y7V9jzz3D/9XuIvd55EGbP0TNvfegC2839C89oHzK8Ffta7583/
aV5vet4KXzU+Z2N9+ph7w8+z4v3Jx7UyDypxnj5eym/c2udN6yEG2tSeCuOY
g4w+x2e95kupC0WHDQAAHvPViM3MfcG6wQEhsYrK/+kYePps12wLlfz/lybz
3z+/Y4M+RtiKO/MzTGPP7+rweZ/d/H9rfa3pcV+qKDbcR27XCX2cg9E+zO5v
8H7nnMAzD5Sujw3h7fID8czX/OgWC2uwBZsL+b9S/lfz3Ls919K+1MYE8/j8
PJt2Iv+ncxMM9xF1md/38eb/dJyF+b0O8zHo+tx8o3sI2t8nnau2bOvXvwN3
6fcP9M9vzLe+ayjgWZOCzssAAAA4E82zWPuCdB62CKLyf6c2O/k/Xbt+VmaK
5e3lCv9z0elz70+bzH3/v+RYy+dud1OdaexvVJUzn3Oj/J/WIbMy9+DM+fuB
PFiQa+szvTBqBxmSJdPjuIGOTWXuCxa8JCRW8I4v79rE/D0/Mer7rFg4F/J/
OdPkuTnNmwPU7fNBn2eb/R7znvZ5m938X68BYHZcfQyDn/Zz5v+mc9KjryCm
YyboK6o/No47e/nkNwx3MF8DT2+JNxH58IsTtfGGnbu/7ib58CrmdgaqMwEA
AOGLpwaglbHhbgjn/J91CzRft9VCDYW7Aqyd5095b4/p/p4oPsR8zv9+92b9
HsDU7X+SoskXd24wPeb5e7bo9zrMDEqSnsPznufENvN7DG5ReyrZ+7x0HS0I
WxV9J5m/4xfs2yY6bP9cyP9Nn5sz/n6k/dcx5+FW8n8694fm6lM3qzUTlWO7
/MbLm/+bHjdAvUEfI136vY1Am79x/GZz+C1vqQsmxkdZvb8jAL1nwdoutbtM
dNgAAOAxPDUAg7XG+VTI/+3n/1by9YcZzmHj0KDp/vzdT3D7nNN5+1YlWagl
4G+bn5du+Rhu4ennEim467iBd9Canqzfc1r/wpPcyP9N8nU6hpxpf2b5mp/7
Ca6v/0frDvqZ+09x5/+x15ict7uZzhsLuoaAFHmJg+dnFlE73VvniJuF8SR+
r/eytbl8AAAQPnhqANJ1zkVA/m8//6fr+Dl5Dpss5P9zslKCes6vSksgCmMt
fit1DM7c6PiCLos1EtwkpSxgfx5kcf4yTD+L8jOZf08vlBeJDts/N/J/szyS
MY81fS6+/zqf97ia/0deStSuwHVRuPN/h88bK7r2IU9d/MDn6RLtcxDznCMQ
K2sd+GxWx10AAEDY4akBSNdQDzbk//bz/2Ltcwt2/r8gLyNo5/z23HQyqgRY
l8sAXRfyW3u3Wj4OrT/oBXLBy8x9QuXIOtFhgyA/sbDmxdQtrrVJdNj+uZH/
x14d3Pyf1qafwrX8P24mUTuN7+Vw5/8xVwnN/yl9HICFNResbxfr+/QKWruQ
tQ2o/QcAAIFcreWKrH1CfzXd3Ib8337+b2W8/pJD2ZbPHV0D0Gx//tbhc/qc
0zUNUtpbLcftz96mekvHouMLvII+o2LuE2Y+KDpsEKBjdITrt9Xhxdp/lBv5
v9l4fcbnqVLcDca/xbTFPu9xPP+PvIQoR9YTMm6+bg///P95xu9Lmc903vgp
RG1KInLG/dpxL7J97uScR4MUtznTGot+NvpdAgAA8OdPR8qY+4TXBMgv3SQq
/6f15mi9ebONrpvnVv5P59DTcbhWt+0N/p9PD8uyo/ltQluz6f5eqfRdi8Dp
/P93yTGWYzZyRZr52mgNQx6aPz/UytWvpeuTQ3ih1wTW39WPYiNEhx2YG/X/
0+4x3mfMlcRKHfuJnY0Q+gzZOL98zOdtbjz/VzsLrYXMm/8fuMv4fbHXWDtn
/fUTYyYCbFPX/zM01kvUpmQiF60mUvJt3PdOAtVKCCr9u8RxnR9qER05AAB4
1OHuTuZ+4Zd2bQx6nKLyf7O16E+h+b1b+X9mh3PrE5mtnUfng1gdQ29l/Qha
X28qs3P+84RIvc10y9C2b+zZYnqc/Q6MU158MMv0OF5Dx/Uy5wMn2H8nENp4
5v7ffzhHdNiBuZD/K8Wvm/92eiot7UttzzOPr/JD3/dZyP9pnfpTNfGVivdM
Xy+nL7EUM/f6f4WvmOeig+ZrpZjNcZfz/zj5DXRMg5bnB9zOrOU/3q9f9/Rx
9KkLrefQ/fWWzp2buOb+a/8uAAAAGKH5PGvfML+rI6gxIv93xj2Hsk2P9+7R
I6b76R4bJV/b/bHhfj674yMyJEs+72U9569WlpjG/NO4vYSt6p+vUMz/uWoA
MOZFEPr+ad825mv8nibxuU9ALuT/anOqeS596HlL+5KzlpnfS+jwrTNvJf/X
18I7faAR83UL6Htazdcr4c3/1fpY88+i0vzaaXYfgd6fmfT69CXGbW4KvHYF
XRfPdN0Cmv/7WXMw2JSSt5iv8fLhVaLDBgAAj+OpAfByhe+4bjch/3fGHgvz
3M/dtYkc6u4MuI8RWSZXpiWY7ifQuWM95/SzN7vXQLct9fb6aqGY/3ONF05d
KDpsCKKjA33M13e60bqYnuVC/k9GeyytJafURRnuRqnaYP4bjL7S79pszPk/
PV71x+bHo7ULVOO5C7z5PxlssdDeyw1zabrmntm5VxvjJ8eb95Tx51S6xri9
BS+a5//ad0I0nrqGZt9RAAAAnhoAl6UGt7ZMOOf/ywrzyJqaCq6N5upnklWV
/Gv0TtNj0roHT5ccJhV9J/X3UHTNO1r7/t/277H0HYlv9T/mk+ec07oGZsf7
ntauccXi/Fw/QjH/J8Pt7Pk/7deO94mOHIKEjudhvb4Hul55hhv5P7E2lp1u
8uEXJvLwU2PM5RH9eb6c96S1/Kzifb/H58n/iTRkvnYBfV9DrHHbefN/+t6c
R83brcWo1EYQMtL1ybu0a/VAgz4Pgq5NyJqLK2VrTe85qK10/Rk/I8PoPYv4
Ocbvj7mKWK734Jaxk3zX94FGsXEDAIDn8dQAoPXugimc8387W6ef+t3ra9mO
eZa2fWb7eqb3/Dox8PMHnnPeOz5GvhKxyfS4f6mxNj/Xn5DM/wlnDYDmFNFh
Q5DMzExmvm7Q2h6e5lL+T+epm9Xt89miLmN7PX32T+en+8GV/xOLYw4S5kye
Ez+Fnfxff37Pcg70Z/3Wa/TLB5/zPWaHxWPuv15r20P6vRm9jUm3WDsmS71B
l3CN77JabxEAAMIeTw2AxDbzmj5OQf7vXP6vqKq+RqBbx6R5Ol0b0Olz/kxp
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
AACAuJbZ3yPvzU2LaY5l2t/mpctP25pkfHlJ+xEgTpj7Kk0tiU8UxeY+vz9u
d9RXu/UzE8biSOzfra41u/x2cQZKtKNHnHEGisWuvDvmn0fT3Psr2aMCAABw
1n7d2Srnx/Bc9Qub2dudNdCr/QigpHBkUK6tLJVX7Nyo8vm7ubZcBhYXtB+D
Z85Ui9gHvh77vMu8b218TJyJo9qPAEqck23uZ8DKvVQl77dr7hWZ7dF+DAAA
AAnJvH+972i9vDJVJw97za7N8vmKEtnR2yVz1qr240AUHRgbltsOVbl1IzU+
a6bdUHNAeheS552hM1QmVuF1KnmYtffzEmn+tcgM93wkvbk+ibT+Xu+zZvL+
stvcdS8AAAD4N7a8JN89ciimtQJeql28v0B+c7yNMwJJwtyn9436arV9Js+3
/6gqlc65Ge3HETXmDLR5N6+Vm5la65G2jSIzJ7QfBYJi7u9v3ypW6c16nyvT
zN1+wxXaTwMAACApTa+uyI+bG+XN6VtV8zXTzF2F5l62pukp7ceCc1AwNCC3
H9LP+Z/P+9tmp7UfSWyYOutNv9TN1Z7bF2A3PHoqZ7P06yjiHCwMS6QrTeyy
W+Pgc7RenL4C7ScCAAAQCku2LT/vOCZvz0pRz+FMe9taP245WCEZ/T2cE4gz
I0uL8nRXu3y2rFB9/8jzbX1FsRybOan9aHQsT53aq513uX4Ot9vcHfgN9z2y
c7Jd+8ngjy2Nr+XYe8U+/Ejs7+4/XSu4hjv9AQAAFG080aFSL+BM7eNFufLQ
sUZpmJrUfjyhVDk+Kt8/Wi8f2Zul/ll4YbtmLe9vZr/IHzi9+WKV3KSf0z3f
8q8Uu3aD+45Zpju1H0/4rJx06ziYuo5W4Rf1Pw8vbKU3i9NfpP2EAAAA8Jzc
wT75dMke9Rzvj5s5q3DZgX3y4LFGKRkdkgXb0n5USWViZdmtGXlPw0H5l8Jc
tTv7T9deu2uze8dAx2zynu/3yxmvF7v6Xv0c749b3mXufe6Rzp3uvfII2EyX
RLqzxa7/Sfzl+881u+IucUYPaj8pAAAAnIY5T/21ukr1vO9M7cN7MuXra33c
3N2Z1Pe+Bc2snVSMj7hnP66v3i/vzklV/1uerr0nd5fbT1PDAmdpvl8iR38m
Vs5F6nnfS7bsdafOCxz7jTiD+0UWR7WfWOKw5sUZqZFI6zNuTm3lXKL/9zxT
3l93v8h0h/ZTAwAAwFk6uboi/6/liHs2XzsXfLn2+rQt8s+FOW7d98famtw7
6vqSqA6cF5Mry1I4MiiPtByVf68slb+JszMep2vmnoGitX7DB2vhVM2Aff+h
nge+bHv+zED7FnHG6kUWx7Sfnj6zj3/0oHuvgn3wB4nxdzTN1IxsfZa/IQAA
QILb3tPl3tevnRueazP31X10b5bcWFMmD7cckV193VI/NZFUdwyadY59wwPy
RHuzu2/jk8V58udxcDf/uTTTX1OfMuxrNtHgjFSLXXWPfm54Li17nVilX13L
fX8okZbfi9O371Rt+GSrN7A6IzJz3K2lYO50dM9wFHxO//mfY7Nr7xNntFb7
aQIAACBgLTMn5bZDVfK6tM3qOaPf9qb0rfKP+7Ldd+Mbjh6SZ090uPXszb3y
o8tL2o/a1TM/JzUTY7J7oFd+3dkqP2w67Ob4V5YVyoUFu+VVqfFxH7/X9q9F
uZLS26X9mMPBnA048qRYuZeq54u+Wt5lYpV8Reya77rxRDpT3Dvv3PWBpQnt
p3yKtSCyMOT2yay/mL0YkZanxa5/UOyKO8UqvO7UGof2s/TTiq6XSMd2kZWQ
1N8EAAAIuS3dx+VTxfnqOWS01whMbQRzL95V5UVujUKzVvDj5kZ3X/2T7cfc
vNysHWzrOS5pfd2SM9jnvo8vHhly71Q0/93Wtf/N1NB7qqNF/qe1yf337zta
795hYGrYf2b/Xvf8wvvz0uUvdu+QV6bG1x18QTYTm1nDCG39vjhg7mF381Dt
HDKaawR7v3BqnaD8DvcOQvvQgxI58oT7nt2cNTDrBpGudHF6ctw69O4awnCF
+x7bGW9w99+7/3mw9NT+g568U3n88dS1vHebRNo2SuToz9d+7gNiV37Tvd/e
KlivH3uUn6upLeBMHNH+CAMAAEBJ19ysfLuxLuH2nNNi10xNAXOuf0dvF/Ub
4sniiLu/3tRkV88tafHZci5y7/Jzhqu0P60AAACIM2af+g01BxJ+XzotmHbp
gX1ujYZkum8hWbn3BBx6QKzc+L5XnhabZld9y90XIXZ8nIUCAABAfGMtIHzt
vNSNcvlazv+7420ys0rOn6hMnTm74VGx8q5Qz0NpMcz5K78pke5szvQDAADA
l+yBXrfefDLcG0h7cbtg9w73PL+56wDJx5z1jjQ9Jda+a9XzU1rALedisWu/
L05/oYhF7Q0AAAAEb89Qv9xZXyMfyM9Qz11p3to/7M1yaxEcnoqT+9YRG7Pd
EuncKXbl3fq5K81by7tc7PqfuHcbSmRF+xMFAACAEDF19jad6JTrqvZzf2Ac
t9fs2ixXlxfJM10dMhYntRGhzF46VdvO1BQ09ey081raSzfzjr/qHrdWn1sj
EQAAAIgT9VMTbl29i/cXyKt3cW+AZnt3TqrcUV8thSOD2h8LJIL5Qbc+nrkr
nnoCus3Udoy0bRJnskn7UwEAAACctbbZaXd/wK2HquQje7PUc+Jkbe/ISpGr
yovkgeYG9xz/0OKC9p8eiW6u171Lzq5/SKy9X1DPiZO25V0hdvV3JNK+RZzx
Bu2/OgAAABCo6olRebL9mKyvKJb35qap586J1t6XlybXVpa6+yzMu/2pFc4A
IwaWxsUZOiCRlt+t5av3irV3vX7unIit5MsSaXzsVG2+uV7tvyoAAAAQc3WT
4/J0V7vcfqhaPl6UK69P26KeZ8dDu7Bgt9xcWy6/6GiRqvFRWbAt7T8V8L+s
eXEmGiXSlSb24UfEPvB1sXIv0c+x46HlXyl2+R1urh/pSj/1bt9a1P6LAQAA
AHGpe35Odg/0unvab6wpk08U5cnbs1LUc/Kgm1nr+Md92W6MD7cccWNun6V+
NxLYykn37LrTmyeRY78Ru3aDWMU36ufkQbfsde7diXbFXRI58oR7f4JZD5HV
Ge2/AAAAAJA0js/NStHIoPz2eJvce6TO3Q9v9g18aE+mvCs7Vc7P2Cav2LlR
Pbd/S+Z2+fBan8x9iDfUHJBvN9bJ423NsqO3S8rHRmR4ifeBCBlzjmCqRZyB
Eol0prj1B+ya74q9/z/d2nbqOX3OJWIVfE6souvdPpm79+3DD0uk9RlxenLE
GT0oMnOcHB8AAACIQ5bjyJJty7xlyczqqpxcXZHJlWUZX15y6xeOrOXg5r68
wbXWvzAvvWutZ37O3X9wpmb+GfPPmxze/KzptZ87Z626v8v8TgAeOZaIvbz2
5V1Yy7PnRFamRZYnRRbH1tqIyMLwyzfzzy2OuusNsjRx6t9fnjr1s1ZmTv1c
a96tgyiR1bXfaWtHDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABJ6f8D5Y6+1A==
    "], {{0, 576.}, {768., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96, 96}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "XMP" -> Association[
       "Attrib" -> 
        Association[
         "Ads[1]" -> 
          Association[
           "Attrib" -> 
            Association[
             "Created" -> "2021-02-06", "ExtId" -> 
              "603fe914-8fb4-4fa5-b375-bc30044a4b07", "FbId" -> 
              525265914179580, "TouchType" -> 2]]], "DublinCoreSchema" -> 
        Association["Title" -> "lang=\"x-default\" Graph Theory"], 
        "XMPBasicSchema" -> Association["CreatorTool" -> "Canva"]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{351., Automatic},
  ImageSizeRaw->{768., 576.},
  PlotRange->{{0, 768.}, {0, 576.}}]], "Text",
 CellChangeTimes->{{3.8216114459577622`*^9, 3.821611468551186*^9}},
 TextAlignment->Center,ExpressionUUID->"5a5f476c-b9a5-4d80-9018-f8705559372b"],

Cell["Random Graphs : The Intersection of Different Fields", "Text",
 CellChangeTimes->{{3.821611473818498*^9, 3.8216115239639006`*^9}},
 TextAlignment->Center,ExpressionUUID->"2255959e-159a-4358-a345-2b336cc3d9b8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f73217a3-a55c-4cb9-90c1-99de46c1a212"],

Cell[CellGroupData[{

Cell["Introduction to Random Graphs", "Section",
 CellChangeTimes->{
  3.8216115643877387`*^9},ExpressionUUID->"e2c8e914-c073-4378-8455-\
78cdfb648495"],

Cell[TextData[{
 "Consider the sample space \[ScriptCapitalS] consisting of graphs with 3 \
vertices {\[ScriptV], \[ScriptU], \[ScriptW]} and 2 edges in between. If we \
define a probability function \[ScriptCapitalP], which assigns each graph in \
this sample space with equal probability, then (\[ScriptCapitalS], \
\[ScriptCapitalP]) defines a discrete probability space which is know as an ",
 StyleBox["Erd\[ODoubleAcute]s-R\[EAcute]nyi Random Graph",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{
  3.821611570916882*^9, {3.8216117311484265`*^9, 3.8216118290039234`*^9}, {
   3.821611861668014*^9, 3.821611928147891*^9}, {3.8216120059881754`*^9, 
   3.821612081725729*^9}, {3.821612130126009*^9, 
   3.8216121449009056`*^9}},ExpressionUUID->"de63188f-b2ad-4951-b725-\
37ef800bc741"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[ScriptV]", "\[UndirectedEdge]", "\[ScriptW]"}], ",", 
         RowBox[{"\[ScriptW]", "\[UndirectedEdge]", "\[ScriptU]"}]}], "}"}], 
       ",", 
       RowBox[{"VertexCoordinates", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[ScriptV]", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"\[ScriptW]", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", " ", 
          RowBox[{"\[ScriptU]", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"2", ",", " ", "0"}], "}"}]}]}], "}"}]}], ",", 
       RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", " ", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[ScriptV]", "\[UndirectedEdge]", "\[ScriptU]"}], ",", 
         RowBox[{"\[ScriptW]", "\[UndirectedEdge]", "\[ScriptU]"}]}], "}"}], 
       ",", 
       RowBox[{"VertexCoordinates", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[ScriptV]", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"\[ScriptW]", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", " ", 
          RowBox[{"\[ScriptU]", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"2", ",", " ", "0"}], "}"}]}]}], "}"}]}], ",", 
       RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", " ", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[ScriptV]", "\[UndirectedEdge]", "\[ScriptW]"}], ",", 
         RowBox[{"\[ScriptV]", "\[UndirectedEdge]", "\[ScriptU]"}]}], "}"}], 
       ",", 
       RowBox[{"VertexCoordinates", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[ScriptV]", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"\[ScriptW]", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", " ", 
          RowBox[{"\[ScriptU]", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"2", ",", " ", "0"}], "}"}]}]}], "}"}]}], ",", 
       RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], "}"}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8216136367122*^9, 3.821613655015015*^9}, {
  3.8216137256802716`*^9, 3.8216139167597785`*^9}, {3.821613961304323*^9, 
  3.821614018493891*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"165b7d02-ec23-4140-9ac8-fb069784b98d"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{$CellContext`\[ScriptV], $CellContext`\[ScriptW], \
$CellContext`\[ScriptU]}, {Null, {{1, 2}, {2, 3}}}, {
           VertexLabels -> {"Name"}, 
            VertexCoordinates -> {{0, 0}, {1, 1}, {2, 0}}}]]}, 
         TagBox[GraphicsGroupBox[{
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
             ArrowBox[{{{0., 0.}, {1., 1.}}, {{1., 1.}, {2., 0.}}}, 
              0.02261146496815286]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
             0.7]}], {DiskBox[{0., 0.}, 0.02261146496815286], 
              InsetBox["\[ScriptV]", 
               Offset[{2, 2}, {0.02261146496815286, 0.02261146496815286}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1., 1.}, 0.02261146496815286], 
              InsetBox["\[ScriptW]", 
               Offset[{2, 2}, {1.0226114649681528, 1.0226114649681528}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2., 0.}, 0.02261146496815286], 
              InsetBox["\[ScriptU]", 
               Offset[{2, 2}, {2.022611464968153, 0.02261146496815286}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None],
      TraditionalForm], {193.5, -104.475}, {Center, Center}, {360., 199.}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{$CellContext`\[ScriptV], $CellContext`\[ScriptU], \
$CellContext`\[ScriptW]}, {Null, {{1, 2}, {3, 2}}}, {
           VertexLabels -> {"Name"}, 
            VertexCoordinates -> {{0, 0}, {2, 0}, {1, 1}}}]]}, 
         TagBox[GraphicsGroupBox[{
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
             ArrowBox[{{{0., 0.}, {2., 0.}}, {{2., 0.}, {1., 1.}}}, 
              0.02261146496815286]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
             0.7]}], {DiskBox[{0., 0.}, 0.02261146496815286], 
              InsetBox["\[ScriptV]", 
               Offset[{2, 2}, {0.02261146496815286, 0.02261146496815286}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2., 0.}, 0.02261146496815286], 
              InsetBox["\[ScriptU]", 
               Offset[{2, 2}, {2.022611464968153, 0.02261146496815286}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1., 1.}, 0.02261146496815286], 
              InsetBox["\[ScriptW]", 
               Offset[{2, 2}, {1.0226114649681528, 1.0226114649681528}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None],
      TraditionalForm], {580.5, -104.475}, {Center, Center}, {360., 199.}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{$CellContext`\[ScriptV], $CellContext`\[ScriptW], \
$CellContext`\[ScriptU]}, {Null, {{1, 2}, {1, 3}}}, {
           VertexLabels -> {"Name"}, 
            VertexCoordinates -> {{0, 0}, {1, 1}, {2, 0}}}]]}, 
         TagBox[GraphicsGroupBox[{
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
             ArrowBox[{{{0., 0.}, {1., 1.}}, {{0., 0.}, {2., 0.}}}, 
              0.02261146496815286]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
             0.7]}], {DiskBox[{0., 0.}, 0.02261146496815286], 
              InsetBox["\[ScriptV]", 
               Offset[{2, 2}, {0.02261146496815286, 0.02261146496815286}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1., 1.}, 0.02261146496815286], 
              InsetBox["\[ScriptW]", 
               Offset[{2, 2}, {1.0226114649681528, 1.0226114649681528}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2., 0.}, 0.02261146496815286], 
              InsetBox["\[ScriptU]", 
               Offset[{2, 2}, {2.022611464968153, 0.02261146496815286}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FormatType->TraditionalForm,
       FrameTicks->None],
      TraditionalForm], {967.5, -104.475}, {
     Center, Center}, {360., 199.}]}, {}},
  ImageSize->{Automatic, 159.8970458553792},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.821613918200525*^9, 3.8216139240600324`*^9}, {
  3.8216139651342425`*^9, 3.8216140194418736`*^9}},
 TextAlignment->Center,
 CellLabel->"Out[97]=",ExpressionUUID->"dbcf7b29-0064-4bbe-a208-5158c87af0ff"]
}, Open  ]],

Cell["Random graph on {\[ScriptV], \[ScriptU], \[ScriptW]} with 2 edges", \
"Text",
 CellChangeTimes->{{3.8216140557900662`*^9, 3.8216140764465847`*^9}},
 TextAlignment->Center,ExpressionUUID->"c4674b1c-6832-4710-88a3-f6ba6ca555cc"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Definition: Erd\[ODoubleAcute]s-R\[EAcute]nyi Random \
Graph", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.821719880507678*^9, 3.82171989681183*^9}, {
  3.8217199672439704`*^9, 
  3.8217199754136353`*^9}},ExpressionUUID->"dfcedb31-05c8-4732-9d3d-\
744b8a3fdf25"],

Cell[TextData[{
 "Let \[ScriptCapitalV] be a set of \[ScriptN] vertices, and let \[ScriptM] \
\[Element] \[DoubleStruckCapitalN] denote the number of edges. Then an ",
 StyleBox["Erd\[ODoubleAcute]s R\[EAcute]nyi Random Graph",
  FontWeight->"Bold"],
 ", also called ",
 StyleBox["Uniform Random Graph ",
  FontWeight->"Bold"],
 "\[ScriptCapitalG](\[ScriptN], \[ScriptM]) is the uniform probability space \
on the set of all graphs with vertices \[ScriptCapitalV] and \[ScriptM] edges."
}], "Text",
 CellChangeTimes->{{3.821614143746833*^9, 3.8216141468352346`*^9}, {
  3.8216141775918317`*^9, 3.821614181118415*^9}, {3.821614238558449*^9, 
  3.8216143997208214`*^9}},
 TextJustification->1.,ExpressionUUID->"f23e54f3-91b7-4970-9a48-c2229a370827"],

Cell[TextData[{
 "In particular |\[ScriptCapitalV]| = \[ScriptN] implies that there can be at \
most  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"n"},
      {"2"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "34bcfa09-b73c-4357-969d-c68a0a93325f"],
 " edges. Therefore there are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        RowBox[{"(", GridBox[{
           {"n"},
           {"2"}
          }], ")"}], " "}]},
      {"\[ScriptM]"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "31c436ce-20d4-4bc0-8644-cc0a909f04d1"],
 " graphs with \[ScriptM] edges and \[ScriptN] vertices, and the probability \
function assigns each of them with equal probability. It follows that the \
probability of a particular graph is \[ScriptCapitalP](\[ScriptCapitalG](\
\[ScriptN], \[ScriptM]) = G) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        RowBox[{"(", GridBox[{
           {"n"},
           {"2"}
          }], ")"}], " "}]},
      {"\[ScriptM]"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "33de5586-d03a-4f23-a664-8a5037783854"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", 
    RowBox[{
     RowBox[{"-", "1"}], "\[IndentingNewLine]"}]], TraditionalForm]],
  ExpressionUUID->"357aa3c6-520f-4364-8a6a-008ca40af178"],
 " .\n"
}], "Text",
 CellChangeTimes->{{3.8216144957267337`*^9, 3.821614658352656*^9}, {
   3.8216146945587053`*^9, 3.8216148506381636`*^9}, 3.8216277917092752`*^9},
 TextJustification->1.,ExpressionUUID->"07ef390a-d8f4-4dfa-b7f4-26b0d5e95bb9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"33456efe-7aa8-4848-ba63-7e1361aba680"],

Cell[CellGroupData[{

Cell["Binomial Random Graphs", "Section",
 CellChangeTimes->{{3.821614903639516*^9, 
  3.821614906960046*^9}},ExpressionUUID->"7e6321ee-152f-4663-b101-\
a5b22631e8ee"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Definition: Gilbert Random Graph", "Subsection"]], \
"Subsection",
 CellChangeTimes->{{3.821719880507678*^9, 3.82171989681183*^9}, {
  3.821719946099554*^9, 
  3.8217199509710236`*^9}},ExpressionUUID->"a5d33595-4e0f-42cf-9c1a-\
fb9c7bb5d572"],

Cell[TextData[{
 "Let \[ScriptCapitalV] be a set of \[ScriptN] vertices, and let 0 \
\[LessEqual] \[ScriptP] \[LessEqual] 1 be the common probability of joining \
any two of these vertices. Then a ",
 StyleBox["Gilbert Random Graph",
  FontWeight->"Bold"],
 " or ",
 StyleBox["Binomial Random Graph",
  FontWeight->"Bold"],
 ", denoted \[ScriptCapitalG](\[ScriptN], \[ScriptP]) is the binomial \
probability space on the set of all graphs with vertices \[ScriptCapitalV]."
}], "Text",
 CellChangeTimes->{{3.821615111960266*^9, 3.821615234687431*^9}},
 TextJustification->1.,ExpressionUUID->"91956487-b4b8-4db5-ab54-1c43909763d9"],

Cell[TextData[{
 "This definition only fixes the number of nodes, and not the number of \
edges. In particular each edge of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"n"},
      {"2"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "a35e2235-0bdf-476e-be99-217584785042"],
 "  can be present or not, which yields the size of the sample space that is \
2",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"n"},
        {"2"}
       }], ")"}], " "}]], TraditionalForm]],ExpressionUUID->
  "8036494f-c33c-4cf8-9ca1-c61ef112780c"],
 ". Moreover the probability of sampling any one of these graphs G is \
\[ScriptCapitalP](\[ScriptCapitalG](\[ScriptN], \[ScriptP]) = G) =",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ScriptP]", "\[ScriptM]"], TraditionalForm]],
  ExpressionUUID->"03760ed5-f782-48be-834c-1034a418bf9c"],
 "(1-\[ScriptP])",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"n"},
        {"2"}
       }], ")"}], "-", "\[ScriptM]"}]], TraditionalForm]],ExpressionUUID->
  "350b5d9c-c980-4729-b527-4f3f84fc1e48"],
 "."
}], "Text",
 CellChangeTimes->{{3.821615305926793*^9, 3.8216155640972757`*^9}, 
   3.821692120574248*^9},
 TextJustification->1.,ExpressionUUID->"8ae0980b-4fea-434a-8af8-60f9080a57be"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`atr$$ = 1, $CellContext`e$$ = 
    5, $CellContext`ne$$ = 2, $CellContext`p$$ = 0.804, $CellContext`rp$$ = 
    0.448, $CellContext`ty$$ = 3, $CellContext`v$$ = 14, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`ty$$], 1, "type of graph"}, {
      1 -> "de Sola Price", 2 -> "Barabasi-Albert", 3 -> 
       "Bernoulli Distribution", 4 -> "Uniform Distribution", 5 -> 
       "Watts-Strogatz"}}, {{
       Hold[$CellContext`v$$], 5, "number of vertices"}, 2, 20, 1}, {{
       Hold[$CellContext`e$$], 5, "number of edges added at each step"}, 2, 
      40, 1}, {{
       Hold[$CellContext`p$$], 0.5, "edge probabilty"}, 0, 1}, {{
       Hold[$CellContext`ne$$], 2, "number of edges"}, 1, 
      Dynamic[$CellContext`v$$ (($CellContext`v$$ - 1)/2)], 1}, {{
       Hold[$CellContext`rp$$], 0.5, "rewiring probabilty"}, 0, 1}, {
      Hold[
       PaneSelector[{
        Alternatives[1, 2] -> Manipulate`Place[1], 3 -> Manipulate`Place[2], 
         4 -> Manipulate`Place[3], 5 -> Manipulate`Place[4]}, 
        Dynamic[$CellContext`ty$$]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`atr$$], 1, "attractiveness parameter"}, {1, 2, 3, 4, 
      5}}, {
      Hold[
       PaneSelector[{True -> Manipulate`Place[5]}, 
        Dynamic[
         MemberQ[{1}, $CellContext`ty$$]]]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    500., {172., 178.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`ty$53597$$ = 
    False, $CellContext`v$53598$$ = 0, $CellContext`e$53599$$ = 
    0, $CellContext`p$53600$$ = 0, $CellContext`ne$53601$$ = 
    0, $CellContext`rp$53602$$ = 0, $CellContext`atr$53603$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`atr$$ = 1, $CellContext`e$$ = 
        5, $CellContext`ne$$ = 2, $CellContext`p$$ = 0.5, $CellContext`rp$$ = 
        0.5, $CellContext`ty$$ = 1, $CellContext`v$$ = 5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`ty$$, $CellContext`ty$53597$$, False], 
        Hold[$CellContext`v$$, $CellContext`v$53598$$, 0], 
        Hold[$CellContext`e$$, $CellContext`e$53599$$, 0], 
        Hold[$CellContext`p$$, $CellContext`p$53600$$, 0], 
        Hold[$CellContext`ne$$, $CellContext`ne$53601$$, 0], 
        Hold[$CellContext`rp$$, $CellContext`rp$53602$$, 0], 
        Hold[$CellContext`atr$$, $CellContext`atr$53603$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> (If[
         And[$CellContext`ty$$ == 
          4, $CellContext`ne$$ > $CellContext`v$$ (($CellContext`v$$ - 1)/
            2)], $CellContext`ne$$ = $CellContext`v$$ (($CellContext`v$$ - 1)/
           2)]; HighlightGraph[
         RandomGraph[
          Switch[$CellContext`ty$$, 1, 
           
           PriceGraphDistribution[$CellContext`v$$, $CellContext`e$$, \
$CellContext`atr$$], 2, 
           
           BarabasiAlbertGraphDistribution[$CellContext`v$$, \
$CellContext`e$$], 3, 
           BernoulliGraphDistribution[$CellContext`v$$, $CellContext`p$$], 4, 
           UniformGraphDistribution[$CellContext`v$$, $CellContext`ne$$], 5, 
           
           WattsStrogatzGraphDistribution[$CellContext`v$$, \
$CellContext`rp$$]], VertexSize -> {"Scaled", 0.03}], 
         Table[
          Style[$CellContext`i, 
           ColorData[2, 
            RandomInteger[{1, 9}]]], {$CellContext`i, $CellContext`v$$}], 
         ImageSize -> {500, 350}]), 
      "Specifications" :> {{{$CellContext`ty$$, 1, "type of graph"}, {
         1 -> "de Sola Price", 2 -> "Barabasi-Albert", 3 -> 
          "Bernoulli Distribution", 4 -> "Uniform Distribution", 5 -> 
          "Watts-Strogatz"}, ControlType -> PopupMenu}, 
        Delimiter, {{$CellContext`v$$, 5, "number of vertices"}, 2, 20, 1, 
         Appearance -> 
         "Labeled"}, {{$CellContext`e$$, 5, 
          "number of edges added at each step"}, 2, 40, 1, Appearance -> 
         "Labeled", ControlPlacement -> 
         1}, {{$CellContext`p$$, 0.5, "edge probabilty"}, 0, 1, Appearance -> 
         "Labeled", ControlPlacement -> 
         2}, {{$CellContext`ne$$, 2, "number of edges"}, 1, 
         Dynamic[$CellContext`v$$ (($CellContext`v$$ - 1)/2)], 1, Appearance -> 
         "Labeled", ControlPlacement -> 
         3}, {{$CellContext`rp$$, 0.5, "rewiring probabilty"}, 0, 1, 
         Appearance -> "Labeled", ControlPlacement -> 4}, 
        PaneSelector[{
         Alternatives[1, 2] -> Manipulate`Place[1], 3 -> Manipulate`Place[2], 
          4 -> Manipulate`Place[3], 5 -> Manipulate`Place[4]}, 
         Dynamic[$CellContext`ty$$]], {{$CellContext`atr$$, 1, 
          "attractiveness parameter"}, {1, 2, 3, 4, 5}, ControlPlacement -> 
         5}, 
        PaneSelector[{True -> Manipulate`Place[5]}, 
         Dynamic[
          MemberQ[{1}, $CellContext`ty$$]]]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{551., {269., 275.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",
 CellChangeTimes->{{3.8216156077821693`*^9, 3.8216156101122675`*^9}, 
   3.8216156448319116`*^9, {3.821615712332235*^9, 3.8216157151682158`*^9}, {
   3.821625009326992*^9, 3.821625017213706*^9}},
 TextAlignment->Center,
 CellLabel->"",ExpressionUUID->"2d80ff5e-6ffa-4fbe-83be-f9247d323304"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"882f291b-61a3-4dd6-8f78-4b93ac630c41"],

Cell[CellGroupData[{

Cell["Binomial Random Graphs", "Section",
 CellChangeTimes->{
  3.821615895039181*^9},ExpressionUUID->"289d0db8-023c-49da-9ff4-\
a2a8fd1dcfdd"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Proposition: Edge Distribution", "Subsection"]], \
"Subsection",
 CellChangeTimes->{{3.821719880507678*^9, 
  3.82171989681183*^9}},ExpressionUUID->"a32c1b96-88ce-45f6-98db-\
7d06a5da9f4d"],

Cell[TextData[{
 "Let \[ScriptCapitalX] be a random variable denoting the number of edges in \
a binomial random graph, with \[ScriptN] nodes and parameter \[ScriptP]. Then \
\[ScriptCapitalP](\[ScriptCapitalX] = \[ScriptM]) =",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{" ", 
        RowBox[{"(", GridBox[{
           {"n"},
           {"2"}
          }], ")"}]}]},
      {"\[ScriptM]"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "2a1264b8-c4d5-44a7-b760-834c7f5cd81f"],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SuperscriptBox["\[ScriptP]", "\[ScriptM]"]}], TraditionalForm]],
  ExpressionUUID->"15a72e18-ce96-45de-a229-cf2d6118711b"],
 " (1-\[ScriptP])",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"n"},
        {"2"}
       }], ")"}], "-", "\[ScriptM]"}]], TraditionalForm]],ExpressionUUID->
  "953f826e-1873-478a-9e90-c7211d369cb1"],
 ",  and \[DoubleStruckCapitalE](\[ScriptCapitalX]) = \[ScriptP]",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"n"},
      {"2"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "8ea174cb-8313-4e96-a0ca-e553dd7d7144"],
 "."
}], "Text",
 CellChangeTimes->{
  3.8216166433238544`*^9, {3.821616977776884*^9, 3.8216171280328765`*^9}, {
   3.8216280263007183`*^9, 3.8216280272843113`*^9}},
 TextJustification->1.,ExpressionUUID->"3b1e977c-3198-474c-9156-4a69f50695fa"],

Cell[CellGroupData[{

Cell["Proof:", "Subsubsection",
 CellChangeTimes->{{3.8216171611215553`*^9, 
  3.821617162122167*^9}},ExpressionUUID->"f79d75db-b8b1-4580-8d41-\
e10bf67e2a8e"],

Cell[TextData[{
 "Let \[ScriptCapitalX] be a random variable denoting the number of edges in \
G. Then there are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"n"},
      {"2"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "200510be-ffd8-41f8-8d5a-6c3ccb74e4f2"],
 " choose \[ScriptM] ways of picking a graph with \[ScriptM] edges and a \
\[ScriptN] vertices, each of which has probability as in the previous slide. \
As these are all mutually independent events, the overall probability is as \
above. This means that \[ScriptCapitalX] has the binomial distribution as \
well, in which case its expectation value is \[ScriptP]",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"(", GridBox[{
       {"n"},
       {"2"}
      }], ")"}]}], TraditionalForm]],ExpressionUUID->
  "1e5b1d38-7671-4062-ac05-15a15e54b123"],
 "."
}], "Text",
 CellChangeTimes->{{3.821617193656625*^9, 3.8216173719310403`*^9}, {
  3.821628049844346*^9, 3.8216280891600547`*^9}},
 TextJustification->1.,ExpressionUUID->"ed2c4a3a-aa6f-498f-9728-0f807dc6d5ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Proposition: Degree Distribution", "Subsection"]], \
"Subsection",
 CellChangeTimes->{{3.821719880507678*^9, 
  3.8217199178672876`*^9}},ExpressionUUID->"45ede422-fd32-4919-bd62-\
9f93563929bf"],

Cell[TextData[{
 "Let \[ScriptCapitalX] be a random variable denoting the degree of an \
arbitrary vertex \[ScriptV] in a binomial random graph, with \[ScriptN] nodes \
and parameter \[ScriptP]. Then \[ScriptCapitalP](\[ScriptCapitalX] = k) =",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{"\[ScriptN]", "-", "1"}]},
      {"\[ScriptK]"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "b0b97fa0-9431-4484-89ec-a6d2a2becb78"],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SuperscriptBox["\[ScriptP]", "\[ScriptK]"]}], TraditionalForm]],
  ExpressionUUID->"92cf9c0a-4c4b-4fc1-b99a-a704196590ae"],
 " (1-\[ScriptP])",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[ScriptN]", "-", "1"}], ")"}], "-", "\[ScriptK]"}]], 
   TraditionalForm]],ExpressionUUID->"54903711-791c-4031-84e6-d75d135e6e2d"],
 ",  and \[DoubleStruckCapitalE](\[ScriptCapitalX]) = \[ScriptP]",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[ScriptN]", "-", "1"}], ")"}], TraditionalForm]],ExpressionUUID->
  "d2edaa0a-9b9e-4223-8f04-7a070cdb28b0"],
 "."
}], "Text",
 CellChangeTimes->{{3.821685667541559*^9, 3.8216856708651*^9}, {
  3.821685708107893*^9, 3.82168573345763*^9}, {3.821685810815118*^9, 
  3.8216858881475224`*^9}},ExpressionUUID->"dc1b6172-09bd-4ad6-b454-\
dd5ad5c349ab"],

Cell[CellGroupData[{

Cell["Proof", "Subsubsection",
 CellChangeTimes->{{3.821685988522498*^9, 
  3.8216859892259893`*^9}},ExpressionUUID->"6da66c4a-331b-4461-9961-\
305b61f414fb"],

Cell[TextData[{
 "Consider a vertex \[ScriptV] in a Gilbert random graph \[ScriptCapitalG](\
\[ScriptN], \[ScriptP]), and let \[ScriptCapitalX] = deg(\[ScriptV]) be as \
above, and \[ScriptK] \[Element] \[DoubleStruckCapitalN]. Then to have deg(\
\[ScriptV]) = \[ScriptK], we require \[ScriptK] nodes out of the remaining \
\[ScriptN]-1, as self loops are excluded, each of these subgraphs has \
probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SuperscriptBox["\[ScriptP]", "\[ScriptK]"]}], TraditionalForm]],
  ExpressionUUID->"db3eae10-29c1-4fc8-b4cd-f505d604c952"],
 " (1-\[ScriptP])",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[ScriptN]", "-", "1"}], ")"}], "-", "\[ScriptK]"}]], 
   TraditionalForm]],ExpressionUUID->"fa0b16c9-54ab-45d0-9dc4-fdd57f5298bc"],
 ", and so the overall probability can be derived from the disjoint union of \
these events. It follows again from the binomial distribution that the \
expectation value is \[ScriptP]",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[ScriptN]", "-", "1"}], ")"}], TraditionalForm]],ExpressionUUID->
  "1f68ace5-ca25-452b-8e78-122bd8c004d3"],
 "."
}], "Text",
 CellChangeTimes->{{3.8216859950096016`*^9, 3.821686068641672*^9}, {
  3.8216861309557*^9, 
  3.8216862776341753`*^9}},ExpressionUUID->"6d1ab619-17e9-41b1-ada0-\
af76b79bc109"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0159f69a-6834-4bf3-8999-7b5e2e7d68f1"],

Cell[CellGroupData[{

Cell["Binomial Random Graphs", "Section",
 CellChangeTimes->{{3.8216875648353662`*^9, 
  3.821687572865981*^9}},ExpressionUUID->"00df6a90-404d-4dde-82dc-\
db0eb10192da"],

Cell[CellGroupData[{

Cell["Definition: Hub", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691089563808*^9, 3.8216910929232016`*^9}, 
   3.8216913278704133`*^9},ExpressionUUID->"d8df051d-2e25-4f3d-bf4a-\
c31d722cf5cd"],

Cell[TextData[{
 "Let ",
 StyleBox["G = (V, E)",
  FontSlant->"Italic"],
 " be a graph. Then a ",
 StyleBox["hub",
  FontWeight->"Bold"],
 " ",
 StyleBox["H",
  FontSlant->"Italic"],
 " is a subset of ",
 StyleBox["V",
  FontSlant->"Italic"],
 " with the property that for any pair of vertices in ",
 StyleBox["H \\ V, ",
  FontSlant->"Italic"],
 "there is a path between them with intermediate vertices all in ",
 StyleBox["H.",
  FontSlant->"Italic"],
 "\nInformally Speaking Hubs are vertices with large degrees, often \
significantly larger than the average degree \[LeftAngleBracket]\[ScriptK]\
\[RightAngleBracket]. It is easy to see using Stirling\[CloseCurlyQuote]s \
approximation and the Poisson distribution that the probability of hubs \
decreases rapidly. This can also bee seen on the distributions themselves."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691097513618*^9, 3.8216912903310385`*^9}, 
   3.8216913278704133`*^9, {3.8216914235156507`*^9, 3.821691485530877*^9}, {
   3.8216915190593624`*^9, 3.821691563243918*^9}, 3.821691929606768*^9, {
   3.8216921311665974`*^9, 3.821692133404668*^9}},
 TextJustification->1.,ExpressionUUID->"a6a684a5-44ae-4ead-8d43-bc081f33a80b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Approximating the Degree Distribution", "Subsection",
 CellChangeTimes->{{3.821687588202976*^9, 3.8216875906592035`*^9}, {
  3.821691633946559*^9, 
  3.8216916414907694`*^9}},ExpressionUUID->"6270ed25-bb95-4690-9952-\
8aea73a61862"],

Cell[TextData[{
 "Probability Theory tells us that whenever we have a binomial distribution, \
we may approximate it with the Poisson distribution for \[ScriptK]\[LessLess] \
\[ScriptN], i.e. when the number of nodes is far greater than the average \
degree of a vertex. In this case we get that \
\[ScriptCapitalP](deg(\[ScriptV]) = k) \[TildeEqual] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{"-", 
     RowBox[{"\[ScriptP]", "(", 
      RowBox[{"\[ScriptN]", " ", "-", " ", "1"}], ")"}]}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "89c0ee49-fb3d-436f-bdc8-6016593f0894"],
 "  ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[ScriptP]", "\[ScriptK]"], "(", 
      RowBox[{"\[ScriptN]", "-", "1"}], ")"}], "\[ScriptK]"], 
    RowBox[{"\[ScriptK]", "!"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a670a8f5-81b5-4166-977c-f00510e3d995"],
 ":= ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{"-", 
     RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}]}]],
    TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bbbad13a-a1aa-41fa-8106-7883281b7cbc"],
 " ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox[
     RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}], 
     "\[ScriptK]"], 
    RowBox[{"\[ScriptK]", "!"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4e0b30e7-ab1a-4df2-adc2-049ae87162fe"],
 "."
}], "Text",
 CellChangeTimes->{{3.8216876141705112`*^9, 3.821687647410677*^9}, {
  3.8216876793261156`*^9, 3.8216879433317394`*^9}, {3.821690842835107*^9, 
  3.8216909396923504`*^9}},ExpressionUUID->"d81cf208-d336-4ffc-a97f-\
8f1a1acd055f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"BinomialDistribution", "[", 
             RowBox[{"100", ",", " ", "p"}], "]"}], ",", " ", "k"}], "]"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"p", ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", "/", "100"}], "}"}]}], "}"}]}], "]"}], " ", "//", 
        " ", "Evaluate"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "100"}], "}"}], ",", " ", 
       RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
       RowBox[{"PlotMarkers", " ", "->", " ", "Automatic"}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"{", "\"\<Binomial\>\"", "}"}], "]"}]}]}], "]"}], ",", " ", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"PoissonDistribution", "[", "\[Lambda]", "]"}], ",", 
            "k"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", 
            RowBox[{"{", "x", "}"}]}], "}"}]}], "]"}], "//", "Evaluate"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "100"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"{", "\"\<Poisson\>\"", "}"}], "]"}]}]}], "]"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "20", ",", " ", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8216868711810083`*^9, 3.8216869603670387`*^9}, 
   3.8216870246762266`*^9, {3.821687094078651*^9, 3.8216871138846145`*^9}, {
   3.821687146437041*^9, 3.82168714760643*^9}, {3.821687208163932*^9, 
   3.821687235622102*^9}, {3.8216872705811305`*^9, 3.821687343783783*^9}, {
   3.821687378575235*^9, 3.8216875164616146`*^9}, {3.8216923964607644`*^9, 
   3.8216924040142875`*^9}, {3.8217104568612003`*^9, 3.8217105337967963`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"cbef4157-9afa-415a-b455-0bba51d7e722"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 20., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 20, 100}}, Typeset`size$$ = {
    446., {106., 111.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 20}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        DiscretePlot[
         Evaluate[
          Table[
           PDF[
            BinomialDistribution[
            100, $CellContext`p], $CellContext`k], {$CellContext`p, \
{$CellContext`x$$/100}}]], {$CellContext`k, 100}, PlotRange -> All, 
         PlotMarkers -> Automatic, PlotLegends -> LineLegend[{"Binomial"}]], 
        DiscretePlot[
         Evaluate[
          Table[
           PDF[
            
            PoissonDistribution[$CellContext`\[Lambda]], $CellContext`k], \
{$CellContext`\[Lambda], {$CellContext`x$$}}]], {$CellContext`k, 100}, 
         PlotRange -> All, PlotMarkers -> Automatic, PlotStyle -> Red, 
         PlotLegends -> LineLegend[{"Poisson"}]]], 
      "Specifications" :> {{$CellContext`x$$, 20, 100}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{497., {153., 159.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8216869328691597`*^9, 3.8216870402414103`*^9, {3.8216871232857027`*^9, 
   3.8216871485133266`*^9}, {3.821687215367385*^9, 3.8216872288585835`*^9}, {
   3.8216874416490765`*^9, 3.8216874801887803`*^9}, 3.821687533199932*^9, 
   3.8216924132249365`*^9, {3.821710469430768*^9, 3.8217104744024887`*^9}, {
   3.821710512069952*^9, 3.8217105381091976`*^9}, 3.821861000972747*^9},
 TextAlignment->Center,
 CellLabel->"Out[17]=",ExpressionUUID->"463186ad-b937-4937-af10-1a00241f8840"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6ee84857-e5d5-4c88-834f-6ea0242e3af8"],

Cell[CellGroupData[{

Cell["Binomial Random Graphs", "Section",
 CellChangeTimes->{{3.8216875648353662`*^9, 
  3.821687572865981*^9}},ExpressionUUID->"b3965329-6d3a-4b42-861d-\
be89095bf9e9"],

Cell["\<\
A more local property of random graphs than hubs are so called, clusters.  \
The idea comes from social networks. For example, consider a group of \
friends. Then we expect them to all know each other, whereas in a group of \
acquaintances some introductions are yet to be made.  In order to capture \
this phenomenon first we need the following definitions.\
\>", "Text",
 CellChangeTimes->{{3.821691849319017*^9, 3.8216918712051163`*^9}},
 TextJustification->1.,ExpressionUUID->"b8068152-afd6-48bf-a726-92fd4e9ca64e"],

Cell[CellGroupData[{

Cell["Definition: Clustering Coefficient", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691089563808*^9, 3.8216910929232016`*^9}, 
   3.8216913278704133`*^9, {3.821691808130834*^9, 
   3.821691811653452*^9}},ExpressionUUID->"c350cd89-9f3d-463d-a750-\
a63ed8d7b754"],

Cell[TextData[{
 "Let ",
 StyleBox["G = (V, E)",
  FontSlant->"Italic"],
 " be a graph, and let \[Lambda](\[ScriptV]) denote the number of triangles \
on \[ScriptV] (3 edges, 3 vertices one of which is \[ScriptV]). Similarly let \
\[Tau](\[ScriptV]) denote the number of triples on \[ScriptV] (2 edges, 3 \
vertices one of which is \[ScriptV]). Then the ",
 StyleBox["Local Clustering Coefficient",
  FontWeight->"Bold"],
 " of \[ScriptV] is defined as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalC]", "\[ScriptV]"], TraditionalForm]],
  ExpressionUUID->"321ecafb-5a28-44e8-8e94-8360e80bb9d9"],
 "= ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[Lambda]", "(", "\[ScriptV]", ")"}], 
    RowBox[{"\[Tau]", "(", "\[ScriptV]", ")"}]], TraditionalForm]],
  ExpressionUUID->"0c5feaa7-5e19-4495-987d-171d362187be"],
 ". The ",
 StyleBox["Average Clustering Coefficient ",
  FontWeight->"Bold"],
 "of a graph ",
 StyleBox["G ",
  FontSlant->"Italic"],
 "is defined as the mean of all the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalC]", "\[ScriptW]"], TraditionalForm]],
  ExpressionUUID->"0aaa7ef8-ac0b-4219-825c-e462f75f68d5"],
 " where \[ScriptW] \[Element] ",
 StyleBox["V, ",
  FontSlant->"Italic"],
 "and can be denoted by ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["\[ScriptCapitalC]", "G"], "_"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3f642cf0-1b99-44ba-b087-2c8f39c68845"],
 "."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691097513618*^9, 3.8216912903310385`*^9}, 
   3.8216913278704133`*^9, {3.8216914235156507`*^9, 3.821691485530877*^9}, {
   3.8216915190593624`*^9, 3.821691563243918*^9}, {3.821691933835805*^9, 
   3.8216919367063804`*^9}, {3.821691995026724*^9, 3.8216920849873323`*^9}, {
   3.821692138571723*^9, 3.821692141379663*^9}, {3.821692176111305*^9, 
   3.8216922260579433`*^9}, {3.821693361954747*^9, 3.821693438947259*^9}, {
   3.821706984803341*^9, 3.821706987090865*^9}, {3.821863011166994*^9, 
   3.8218630245700865`*^9}, {3.8218630604854894`*^9, 3.821863096216736*^9}},
 TextJustification->1.,ExpressionUUID->"27f6d40b-849a-4c98-8177-28dfa3774b5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proposition: Expected Clustering Coefficient", "Subsection",
 CellChangeTimes->{{3.821687588202976*^9, 3.8216875906592035`*^9}, {
  3.821691633946559*^9, 3.8216916414907694`*^9}, {3.8216922623720207`*^9, 
  3.8216922920112877`*^9}},ExpressionUUID->"5be2f5d2-f3c0-4b1b-a1a1-\
34f3ff33d57a"],

Cell[TextData[{
 "Let \[ScriptCapitalG](\[ScriptN], \[ScriptP]) be a binomial random graph \
and \[ScriptV] one of its vertices, then \[DoubleStruckCapitalE](",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalC]", "\[ScriptV]"], TraditionalForm]],
  ExpressionUUID->"ff7dc4ba-7d7b-4653-a3f1-9944155c7124"],
 ") = \[ScriptP]."
}], "Text",
 CellChangeTimes->{{3.821692818061689*^9, 3.8216928315079846`*^9}, {
  3.8216929798185472`*^9, 
  3.8216930106744676`*^9}},ExpressionUUID->"2e0eb6eb-d501-4490-86cb-\
2f8993de68a8"],

Cell[CellGroupData[{

Cell["Proof:", "Subsubsection",
 CellChangeTimes->{{3.821692813675672*^9, 
  3.821692814882622*^9}},ExpressionUUID->"ee0f1f3f-6d66-4ae6-8d51-\
0e7808d5ad5c"],

Cell[TextData[{
 "We have seen that the expected number of edges in \[ScriptCapitalG](\
\[ScriptN], \[ScriptP]) is \[ScriptP]",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"(", GridBox[{
       {"n"},
       {"2"}
      }], ")"}]}], TraditionalForm]],ExpressionUUID->
  "9fe13a3b-8893-49f4-92d5-d3580e8d768b"],
 ". Therefore among \[ScriptK] edges, we expect to have \[ScriptP]",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"(", GridBox[{
       {"\[ScriptK]"},
       {"2"}
      }], ")"}]}], TraditionalForm]],ExpressionUUID->
  "9083f75e-648e-43bd-95ed-d3b098d3d625"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptP]", 
    FractionBox[
     RowBox[{"\[ScriptK]", "(", 
      RowBox[{"\[ScriptK]", "-", "1"}], ")"}], "2"]}], TraditionalForm]],
  ExpressionUUID->"2ab38b5f-5c80-4625-a71c-2f1e6bd07c22"],
 " edges. Therefore \[DoubleStruckCapitalE](",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalC]", "\[ScriptV]"], TraditionalForm]],
  ExpressionUUID->"fe34afb9-9fca-4841-9f25-c4387f3a97ca"],
 ") = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DoubleStruckCapitalE]", "(", 
    FractionBox[
     RowBox[{"\[Lambda]", "(", "\[ScriptV]", ")"}], 
     RowBox[{"\[Tau]", "(", "\[ScriptV]", ")"}]], ")"}], TraditionalForm]],
  ExpressionUUID->"c3474c22-ca99-42a0-b42b-c647c2d5c1bb"],
 " = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[DoubleStruckCapitalE]", "(", 
     RowBox[{"\[Lambda]", "(", "\[ScriptV]", ")"}], ")"}], 
    FractionBox[
     RowBox[{"\[ScriptK]", "(", 
      RowBox[{"\[ScriptK]", "-", "1"}], ")"}], "2"]], TraditionalForm]],
  ExpressionUUID->"9fda3bf6-61b4-492d-ba7e-d0edd080fde9"],
 "=",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[ScriptP]", 
     FractionBox[
      RowBox[{"\[ScriptK]", "(", 
       RowBox[{"\[ScriptK]", "-", "1"}], ")"}], "2"]}], 
    FractionBox[
     RowBox[{"\[ScriptK]", "(", 
      RowBox[{"\[ScriptK]", "-", "1"}], ")"}], "2"]], TraditionalForm]],
  ExpressionUUID->"d1be3c0b-f6b0-4bfa-9812-369f67d6edea"],
 "= \[ScriptP], as \[Lambda](\[ScriptV]) can also be counted as the number of \
edges between vertices adjacent to \[ScriptV], with deg(\[ScriptV]) = \
\[ScriptK]. As this holds for any vertex \[ScriptV], the average clustering \
coefficient of a binomial random graph is also \[ScriptP]."
}], "Text",
 CellChangeTimes->{{3.821692623698539*^9, 3.821692662484587*^9}, {
  3.8216926947461505`*^9, 3.8216927627575874`*^9}, {3.8216930137800503`*^9, 
  3.82169313067413*^9}, {3.8216931809162226`*^9, 3.821693269587102*^9}, {
  3.821693322659175*^9, 3.8216933244995947`*^9}, {3.8216934442514443`*^9, 
  3.8216934710752153`*^9}},ExpressionUUID->"d8bb9512-ec18-4ea8-aa47-\
40bf6cfc1c0a"],

Cell["", "Text",
 CellChangeTimes->{{3.8216876141705112`*^9, 3.821687647410677*^9}, {
   3.8216876793261156`*^9, 3.8216879433317394`*^9}, {3.821690842835107*^9, 
   3.8216909396923504`*^9}, 
   3.8216923028828616`*^9},ExpressionUUID->"633dfa5f-5a11-449f-aa28-\
421dd485e0e1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b153da5e-6d6b-4f8b-96fd-7a83f397a705"],

Cell[CellGroupData[{

Cell["Binomial Random Graphs", "Section",
 CellChangeTimes->{{3.8216875648353662`*^9, 3.821687572865981*^9}, {
   3.821707170490013*^9, 3.8217071760105953`*^9}, 
   3.821707547545323*^9},ExpressionUUID->"859226ef-497e-466a-a8e2-\
523e775082d4"],

Cell[CellGroupData[{

Cell["Connectivity", "Subsection",
 CellChangeTimes->{{3.821707559034419*^9, 
  3.8217075625224404`*^9}},ExpressionUUID->"9b1b900b-e7dc-4d97-acf4-\
a0bf52625a19"],

Cell["\<\
We have seen how the number of edges or the degree of vertices are likely to \
behave in random graphs, but we have not seen whether this graph should be \
connected or a collection of isolated edges? Inspired by telephone networks, \
this was the problem Gilbert investigated in 1959 [5].\
\>", "Text",
 CellChangeTimes->{{3.821691849319017*^9, 3.8216918712051163`*^9}, {
  3.82170723303032*^9, 3.8217073487388296`*^9}, {3.821720239887603*^9, 
  3.8217202430470686`*^9}, {3.821948833212489*^9, 3.82194883561379*^9}},
 TextJustification->1.,ExpressionUUID->"e3ea95f0-1f93-4ec8-8004-8ee1938fc031"],

Cell["", "Text",
 CellChangeTimes->{{3.8216876141705112`*^9, 3.821687647410677*^9}, {
   3.8216876793261156`*^9, 3.8216879433317394`*^9}, {3.821690842835107*^9, 
   3.8216909396923504`*^9}, 
   3.8216923028828616`*^9},ExpressionUUID->"bf2e2963-a9ac-48d1-9619-\
002f27194022"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{
       RowBox[{"ConnectedGraphQ", "/@", 
        RowBox[{"RandomGraph", "[", 
         RowBox[{
          RowBox[{"BernoulliGraphDistribution", "[", 
           RowBox[{"n", ",", "p"}], "]"}], ",", "100"}], "]"}]}], ",", " ", 
       "True"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"p", ",", " ", "\"\<% of Connected Graphs\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", " ", "100", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.821693672285019*^9, 3.821693696341206*^9}, {
   3.821693750949751*^9, 3.821693769045417*^9}, {3.8216938223041306`*^9, 
   3.8216938378731904`*^9}, {3.8216939110280848`*^9, 3.821693941399539*^9}, {
   3.8216940153884754`*^9, 3.8216940813193765`*^9}, {3.8216941272862196`*^9, 
   3.82169412743639*^9}, {3.8217070881087065`*^9, 3.821707088185705*^9}, {
   3.8217103872366023`*^9, 3.821710423317463*^9}, 3.821711093973296*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"e4245cd2-3c28-45bb-b72c-39018b2e784f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 18, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 100, 1}}, Typeset`size$$ = {
    360., {101., 108.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Count[
         Map[ConnectedGraphQ, 
          RandomGraph[
           BernoulliGraphDistribution[$CellContext`n$$, $CellContext`p], 
           100]], True], {$CellContext`p, 0, 1}, 
        AxesLabel -> {$CellContext`p, "% of Connected Graphs"}], 
      "Specifications" :> {{$CellContext`n$$, 1, 100, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{415., {155., 164.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8216940227120132`*^9, 3.821694094317396*^9}, 
   3.8216941280988245`*^9, 3.8217070896019135`*^9, 3.82170763581147*^9, 
   3.8217104240571094`*^9, 3.821711094757614*^9},
 TextAlignment->Center,
 CellLabel->"Out[82]=",ExpressionUUID->"fdfed8e5-9b95-41bf-b31f-a32ea3f61b48"]
}, Open  ]],

Cell["\<\
We can see that for every \[ScriptN], there is a 0 \[LessSlantEqual] \
\[ScriptP] \[LessSlantEqual] 1 such that most graphs are connected. More \
interestingly for most \[ScriptN], \[ScriptP] \[LessLess] 1 suffices, this is \
because as \[ScriptN] grows, we have more and more Bernoulli trials. This \
little experiment is in line with Gilbert\[CloseCurlyQuote]s more rigorous \
results, showing that the probability of a connected graph as \[ScriptN] \
grows goes to 1.\
\>", "Text",
 CellChangeTimes->{{3.8217076414891925`*^9, 3.8217078043780484`*^9}, {
  3.8217081037713413`*^9, 
  3.8217082009790745`*^9}},ExpressionUUID->"4bd23bc4-f31d-47a8-9ab2-\
069aefd3ee3e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"7f282770-ec0c-42ed-b86f-3fca64f00363"],

Cell[CellGroupData[{

Cell["Average Path Lengths", "Section",
 CellChangeTimes->{{3.8216875648353662`*^9, 3.821687572865981*^9}, {
  3.821711139057105*^9, 
  3.8217111419862256`*^9}},ExpressionUUID->"88f8938f-50c4-4a85-a65c-\
70264e0bb583"],

Cell["\<\
Having shown that a binomial random graph is almost certain to be connected \
as \[ScriptN] grows large.  It makes sense to ask, about the distance between \
two nodes as \[ScriptN] \[Rule] \[Infinity]. We will first define this \
distance rigorously, and then provide a rough estimate with the help of the \
diameter.\
\>", "Text",
 CellChangeTimes->{{3.821691849319017*^9, 3.8216918712051163`*^9}, {
   3.821711514201294*^9, 3.82171163656271*^9}, {3.8217174198578167`*^9, 
   3.8217174586910143`*^9}, 3.8217202355476174`*^9},
 TextJustification->1.,ExpressionUUID->"cc0a8370-eedb-44ae-830e-72656ffcd975"],

Cell[CellGroupData[{

Cell["Definition: Distance & Average Path Length", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691089563808*^9, 3.8216910929232016`*^9}, 
   3.8216913278704133`*^9, {3.821691808130834*^9, 3.821691811653452*^9}, {
   3.8217112640105133`*^9, 3.821711265394549*^9}, {3.821711691938119*^9, 
   3.821711706489653*^9}},ExpressionUUID->"c78be70b-88f1-4fc9-b1a1-\
18169002d47f"],

Cell[TextData[{
 "Let ",
 StyleBox["G = (V, E)",
  FontSlant->"Italic"],
 " be a graph and \[ScriptU], \[ScriptV] \[Element] ",
 StyleBox["V",
  FontSlant->"Italic"],
 ". Then ",
 StyleBox["d",
  FontSlant->"Italic"],
 "(\[ScriptU], \[ScriptV]) is called the ",
 StyleBox["distance ",
  FontWeight->"Bold"],
 "between \[ScriptU] and \[ScriptV], and is defined to be the number of nodes \
on the shortest path between them. If \[ScriptU] and \[ScriptV] are not \
connected, we defined ",
 StyleBox["d",
  FontSlant->"Italic"],
 "(\[ScriptU], \[ScriptV]) = 0. The ",
 StyleBox["Average (Shortest) Path Length ",
  FontWeight->"Bold"],
 "of a graph ",
 StyleBox["G=(V, E) is then defined as ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["\[ScriptL]",
     FontSlant->"Italic"], "G"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e0c7da4b-b316-4deb-a658-de16a75a9044"],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{"\[ScriptU]", ",", 
      RowBox[{"\[ScriptV]", " ", "\[Element]", " ", 
       StyleBox["V",
        FontSlant->"Italic"]}], 
      StyleBox[",",
       FontSlant->"Italic"], 
      StyleBox[" ",
       FontSlant->"Italic"], 
      RowBox[{"\[ScriptU]", "\[NotEqual]", "\[ScriptV]", 
       StyleBox[
        RowBox[{" ", 
         StyleBox[" ",
          FontSlant->"Italic"]}]]}]}]], 
    FractionBox[
     RowBox[{
      StyleBox["d",
       FontSlant->"Italic"], "(", 
      RowBox[{"\[ScriptU]", ",", "\[ScriptV]"}], ")"}], 
     RowBox[{"\[ScriptN]", "(", 
      RowBox[{"\[ScriptN]", " ", "-", " ", "1"}], ")"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f5ba43d5-5a76-4d46-811d-2b7e5efecc51"],
 ", sometimes called the ",
 StyleBox["APL.",
  FontWeight->"Bold"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691097513618*^9, 3.8216912903310385`*^9}, 
   3.8216913278704133`*^9, {3.8216914235156507`*^9, 3.821691485530877*^9}, {
   3.8216915190593624`*^9, 3.821691563243918*^9}, {3.821691933835805*^9, 
   3.8216919367063804`*^9}, {3.821691995026724*^9, 3.8216920849873323`*^9}, {
   3.821692138571723*^9, 3.821692141379663*^9}, {3.821692176111305*^9, 
   3.8216922260579433`*^9}, {3.821693361954747*^9, 3.821693438947259*^9}, {
   3.821706984803341*^9, 3.821706987090865*^9}, {3.8217112775389805`*^9, 
   3.8217114424586287`*^9}, {3.8217117296909604`*^9, 
   3.8217118649475594`*^9}, {3.821711911268256*^9, 3.8217119372833242`*^9}, {
   3.8217119714959903`*^9, 3.8217120754999866`*^9}, {3.8217122410589905`*^9, 
   3.821712246563029*^9}},
 TextJustification->1.,ExpressionUUID->"97c333bf-d46f-49b4-a97b-e02073c08174"],

Cell["Definition: Diameter", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691089563808*^9, 3.8216910929232016`*^9}, 
   3.8216913278704133`*^9, {3.821691808130834*^9, 3.821691811653452*^9}, {
   3.8217112640105133`*^9, 
   3.821711265394549*^9}},ExpressionUUID->"a450c799-6cce-4602-94f7-\
cdff758f3750"],

Cell[TextData[{
 "Let ",
 StyleBox["G = (V, E)",
  FontSlant->"Italic"],
 " be a graph, then the maximal distance between all the pairs of nodes of ",
 StyleBox["G",
  FontSlant->"Italic"],
 " is called the ",
 StyleBox["diameter ",
  FontWeight->"Bold"],
 "of ",
 StyleBox["G",
  FontSlant->"Italic"],
 ". More formally: ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptD]", 
    StyleBox["max",
     FontSlant->"Italic"]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "057341e0-369f-49e8-88ce-bb2034babac0"],
 " =  ",
 StyleBox["max",
  FontSlant->"Italic"],
 "{",
 StyleBox["d",
  FontSlant->"Italic"],
 "(\[ScriptU], \[ScriptV]) | \[ScriptU], \[ScriptV] \[Element] ",
 StyleBox["V",
  FontSlant->"Italic"],
 "}."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691097513618*^9, 3.8216912903310385`*^9}, 
   3.8216913278704133`*^9, {3.8216914235156507`*^9, 3.821691485530877*^9}, {
   3.8216915190593624`*^9, 3.821691563243918*^9}, {3.821691933835805*^9, 
   3.8216919367063804`*^9}, {3.821691995026724*^9, 3.8216920849873323`*^9}, {
   3.821692138571723*^9, 3.821692141379663*^9}, {3.821692176111305*^9, 
   3.8216922260579433`*^9}, {3.821693361954747*^9, 3.821693438947259*^9}, {
   3.821706984803341*^9, 3.821706987090865*^9}, {3.8217112775389805`*^9, 
   3.8217114424586287`*^9}, 3.8217117213725038`*^9, {3.821712357802864*^9, 
   3.8217124367248163`*^9}},
 TextJustification->1.,ExpressionUUID->"87905d5f-15bd-4cd6-a259-f139654b8684"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proposition: Approximation for the Diameter [2]", "Subsection",
 CellChangeTimes->{{3.821687588202976*^9, 3.8216875906592035`*^9}, {
  3.821691633946559*^9, 3.8216916414907694`*^9}, {3.8216922623720207`*^9, 
  3.8216922920112877`*^9}, {3.821712233924843*^9, 3.8217122637077017`*^9}, {
  3.8217129332511425`*^9, 3.8217129344552307`*^9}, {3.8217148171077766`*^9, 
  3.8217148230989857`*^9}, {3.8219488461187286`*^9, 
  3.82194884706277*^9}},ExpressionUUID->"6e7a9304-c338-49f3-9fc5-\
d50808d69527"],

Cell[TextData[{
 "In a binomial random graph with \[ScriptN] vertices and average degree \
\[LeftAngleBracket]\[ScriptK]\[RightAngleBracket], we have ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptD]", 
    StyleBox["max",
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "add30510-4741-49e2-bc31-6b550fcd93ad"],
 " \[TildeTilde] ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"ln", "(", "n", ")"}], 
    RowBox[{"ln", 
     RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}]}]],
    TraditionalForm]],ExpressionUUID->"bd22d411-3a89-4705-b493-8373b4534031"],
 "."
}], "Text",
 CellChangeTimes->{{3.821692818061689*^9, 3.8216928315079846`*^9}, {
  3.8216929798185472`*^9, 3.8216930106744676`*^9}, {3.821712309252895*^9, 
  3.8217123134022603`*^9}, {3.8217124505386133`*^9, 
  3.821712521571369*^9}},ExpressionUUID->"977b78f9-e10f-4578-bbba-\
3ee2e3d97718"],

Cell[CellGroupData[{

Cell["Proof:", "Subsubsection",
 CellChangeTimes->{{3.821692813675672*^9, 
  3.821692814882622*^9}},ExpressionUUID->"667d6388-6db9-44b7-a371-\
88d7e61febaf"],

Cell[TextData[{
 "Consider a binomial random graph with \[ScriptN] vertices and average \
degree \[LeftAngleBracket]\[ScriptK]\[RightAngleBracket]. Then a node \
\[ScriptV] has on average \[LeftAngleBracket]\[ScriptK]\[RightAngleBracket] \
vertices at distance 1. Since each of these vertices has average degree \
\[LeftAngleBracket]\[ScriptK]\[RightAngleBracket], the expected number of \
vertices at distance 2 is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}], 
    "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f89d9a9d-2b56-43e4-a47b-af2d01939e01"],
 ". Continuing with this method \[ScriptV] has on average ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}], 
    SubscriptBox["\[ScriptD]", 
     StyleBox["max",
      FontSlant->"Italic"]]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "39531b00-9933-4f39-908f-32e16f1986bf"],
 " vertices at distance ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptD]", 
    StyleBox["max",
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "3d4cd50a-de3b-43ef-8dfb-fe1b49596d9e"],
 ", and no nodes any further than that. As we have seen most random graphs \
are connected, and so the sum 1 + \[LeftAngleBracket]\[ScriptK]\
\[RightAngleBracket] + ... + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}], 
    SubscriptBox["\[ScriptD]", 
     StyleBox["max",
      FontSlant->"Italic"]]], TraditionalForm]],ExpressionUUID->
  "536c1531-9b34-4908-b7c7-65e2f779fa77"],
 " = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{" ", 
     FormBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}], 
        SubscriptBox["\[ScriptD]", 
         StyleBox[
          RowBox[{"max", " ", "+", " ", "1", " "}],
          FontSlant->"Italic"]]], "-", "1"}],
      TraditionalForm]}], 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}], 
     " ", "-", " ", "1"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "81a2507b-1033-4ed1-8deb-7cc2c23f6ae4"],
 "\[TildeTilde] ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{" ", 
     FormBox[
      SuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}], 
       SubscriptBox["\[ScriptD]", 
        StyleBox[
         RowBox[{"max", " ", "+", " ", "1", " "}],
         FontSlant->"Italic"]]],
      TraditionalForm]}], 
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}], 
     " "}]], TraditionalForm]],ExpressionUUID->
  "a696ef6a-e7ef-4565-8ee5-38c9151aa448"],
 "= ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}], 
    SubscriptBox["\[ScriptD]", 
     StyleBox["max",
      FontSlant->"Italic"]]], TraditionalForm]],ExpressionUUID->
  "c4c30c62-1f35-4749-8151-cf6d94aa7aca"],
 " should not exceed the overall number of nodes \[ScriptN]. Taking the \
natural logarithm and rearranging we get ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptD]", 
    StyleBox["max",
     FontSlant->"Italic"]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "89683e57-cd0a-4ee1-a668-bc901b25f05b"],
 " \[TildeTilde] ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"ln", "(", "n", ")"}], 
    RowBox[{"ln", 
     RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}]}]],
    TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "503491e9-2c28-4d0b-8419-3576270b50c6"],
 "."
}], "Text",
 CellChangeTimes->{{3.8217130061595144`*^9, 3.8217131063233557`*^9}, {
  3.8217141870183043`*^9, 3.821714261707636*^9}, {3.8217143130111046`*^9, 
  3.8217143673720117`*^9}, {3.8217144957913256`*^9, 3.821714662774965*^9}},
 TextJustification->1.,ExpressionUUID->"11330785-a01b-4735-a11b-eea0764cb94e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2e848e28-35f4-4c1f-9cb2-f73b63a37805"],

Cell[CellGroupData[{

Cell["Average Path Lengths", "Section",
 CellChangeTimes->{{3.8216875648353662`*^9, 3.821687572865981*^9}, {
   3.821711139057105*^9, 3.8217111419862256`*^9}, 3.821790187488216*^9, 
   3.8218691073842955`*^9},ExpressionUUID->"e43957fd-8c4f-4541-801e-\
4e298df7c7c3"],

Cell[TextData[{
 "In fact  Fronczak, Fronczak and Holyst [4] were able to find analytic \
formula for the average path length for many random graphs, including the \
Gilbert random graph in the  models limiting case \[ScriptN] \[Rule] \
\[Infinity]. To achieve this we let \[ScriptP] to vary with \[ScriptN]. More \
specifically, for fixed average degree \[LeftAngleBracket]\[ScriptK]\
\[RightAngleBracket], they defined \[ScriptP](\[ScriptN]) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}], 
     RowBox[{"n", "-", "1"}]], "."}], TraditionalForm]],ExpressionUUID->
  "ad855e26-4a66-43e1-b161-49b1d41c2ae6"],
 " This is similar to Fronczak et al. , as they defined \[ScriptP] as a \
function of hidden variables depending on the nodes it connects."
}], "Text",
 CellChangeTimes->{{3.821691849319017*^9, 3.8216918712051163`*^9}, {
   3.821711514201294*^9, 3.82171163656271*^9}, {3.821717473666255*^9, 
   3.821717654412797*^9}, {3.821717754658792*^9, 3.821717809251278*^9}, {
   3.821717914882157*^9, 3.8217179283311863`*^9}, {3.821718553969415*^9, 
   3.821718554683058*^9}, 3.8217202296618743`*^9, {3.8217203001645813`*^9, 
   3.8217203002608113`*^9}, {3.821948535549096*^9, 3.8219485430849447`*^9}, 
   3.8219487854706492`*^9},
 TextJustification->1.,ExpressionUUID->"22daf5c4-8ca1-457e-805a-bb6f274afd3a"],

Cell[CellGroupData[{

Cell["Lemma: Probability of Mutually Independent Events", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691089563808*^9, 3.8216910929232016`*^9}, 
   3.8216913278704133`*^9, {3.821691808130834*^9, 3.821691811653452*^9}, {
   3.8217112640105133`*^9, 3.821711265394549*^9}, {3.821711691938119*^9, 
   3.821711706489653*^9}, {3.821717872603985*^9, 
   3.8217178896674*^9}},ExpressionUUID->"edbe3a17-9bef-4777-9677-\
b96d60334daa"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalA]", "1"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "46b9f50d-7600-46f0-b5b5-1906a5f4e555"],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalA]", "2"], ",", "...", ",", " ", 
     SubscriptBox["\[ScriptCapitalA]", "\[ScriptN]"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "49e4791f-f33d-4d18-a10b-f20a74166cac"],
 " are ",
 "mutually independent events ",
 "and their probabilities fulfill \[ScriptCapitalP](",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalA]", "\[ScriptI]"], TraditionalForm]],
  ExpressionUUID->"a79c326b-7d6b-49c0-a17e-2422dc48099e"],
 ") \[LessEqual] \[ScriptCapitalE] for every \[ScriptI], then for",
 " 0 \[LessEqual] \[ScriptCapitalQ] \[LessEqual] ",
 Cell[BoxData[
  FormBox[
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"\[ScriptJ]", "=", "0"}], 
    RowBox[{" ", 
     RowBox[{"\[ScriptN]", "+", "1"}]}]], TraditionalForm]],ExpressionUUID->
  "dcd103a0-4e38-41c8-a1d1-3605b94efc52"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", "\[ScriptN]\[ScriptCapitalE]", ")"}], "\[ScriptJ]"], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b75b4564-2d1b-4779-a26f-ceea02e1ef10"],
 "/ \[ScriptJ]! - ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ScriptCapitalE]"}], ")"}], "\[ScriptN]"], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "40c7f0aa-ba54-45eb-b19a-36c331456aed"],
 " we have that:"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691097513618*^9, 3.8216912903310385`*^9}, 
   3.8216913278704133`*^9, {3.8216914235156507`*^9, 3.821691485530877*^9}, {
   3.8216915190593624`*^9, 3.821691563243918*^9}, {3.821691933835805*^9, 
   3.8216919367063804`*^9}, {3.821691995026724*^9, 3.8216920849873323`*^9}, {
   3.821692138571723*^9, 3.821692141379663*^9}, {3.821692176111305*^9, 
   3.8216922260579433`*^9}, {3.821693361954747*^9, 3.821693438947259*^9}, {
   3.821706984803341*^9, 3.821706987090865*^9}, {3.8217112775389805`*^9, 
   3.8217114424586287`*^9}, {3.8217117296909604`*^9, 
   3.8217118649475594`*^9}, {3.821711911268256*^9, 3.8217119372833242`*^9}, {
   3.8217119714959903`*^9, 3.8217120754999866`*^9}, {3.8217122410589905`*^9, 
   3.821712246563029*^9}, {3.8217187939865227`*^9, 3.8217189226425166`*^9}, {
   3.8217190723969593`*^9, 3.8217190785456133`*^9}, {3.8217191108992796`*^9, 
   3.8217193631314306`*^9}, {3.8217197854528527`*^9, 3.8217197935873747`*^9}},
 TextJustification->1.,ExpressionUUID->"8906aa81-e2df-422f-b06a-096ec8ddcfda"],

Cell[TextData[{
 StyleBox["\[ScriptCapitalP](",
  FontSize->36],
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Union]", 
    RowBox[{" ", 
     RowBox[{"\[ScriptI]", " ", "=", " ", "1"}]}], 
    RowBox[{" ", "\[ScriptN]"}]], TraditionalForm]],
  FormatType->TraditionalForm,
  FontSize->36,ExpressionUUID->"5f0581fc-b251-4394-ab96-ddf2ed311468"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalA]", "\[ScriptI]"], TraditionalForm]],
  FontSize->36,ExpressionUUID->"1fff1f23-4315-423a-b889-8a7a66de35b7"],
 StyleBox[") = 1 - ",
  FontSize->36],
 StyleBox["exp",
  FontSize->36,
  FontSlant->"Italic"],
 StyleBox["(- ",
  FontSize->36],
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{"\[ScriptI]", "=", "1"}], "\[ScriptN]"], 
    RowBox[{"\[ScriptCapitalP]", "(", 
     SubscriptBox["\[ScriptCapitalA]", "\[ScriptI]"], ")"}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,
  FontSize->36,ExpressionUUID->"0c468432-307c-418a-a693-13f2aeb2a09d"],
 StyleBox[") - \[ScriptCapitalQ]",
  FontSize->36]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.821719754652305*^9},
 TextAlignment->Center,
 TextJustification->1.,ExpressionUUID->"98340334-1aa9-4f13-b449-62578925b852"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proof", "Subsubsection",
 CellChangeTimes->{{3.8217198368025913`*^9, 
  3.821719837554278*^9}},ExpressionUUID->"cc75b609-b24e-49ae-a987-\
96f941ca7589"],

Cell["See Project Report.", "Text",
 CellChangeTimes->{{3.821790227138558*^9, 
  3.8217902302581377`*^9}},ExpressionUUID->"b64b6b85-e17b-423d-8ce3-\
81ddd33658a7"],

Cell[CellGroupData[{

Cell["Formula: APL", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691089563808*^9, 3.8216910929232016`*^9}, 
   3.8216913278704133`*^9, {3.821691808130834*^9, 3.821691811653452*^9}, {
   3.8217112640105133`*^9, 3.821711265394549*^9}, {3.821719485803096*^9, 
   3.821719528194862*^9}, {3.821720135882745*^9, 
   3.8217201364919205`*^9}},ExpressionUUID->"5cd5225f-0608-485a-9826-\
1196dde480c2"],

Cell["\<\
Using the Lemma above, the Poisson Summation Formula and the Generalized Mean \
Value Theorem Fronzcak et al. was able to derive an exact formula for the \
average path length of a binomial random graph. The formula states that for \
\[Gamma] \[TildeTilde] 0.5772 (Euler\[CloseCurlyQuote]s constant) the APL is:\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691097513618*^9, 3.8216912903310385`*^9}, 
   3.8216913278704133`*^9, {3.8216914235156507`*^9, 3.821691485530877*^9}, {
   3.8216915190593624`*^9, 3.821691563243918*^9}, {3.821691933835805*^9, 
   3.8216919367063804`*^9}, {3.821691995026724*^9, 3.8216920849873323`*^9}, {
   3.821692138571723*^9, 3.821692141379663*^9}, {3.821692176111305*^9, 
   3.8216922260579433`*^9}, {3.821693361954747*^9, 3.821693438947259*^9}, {
   3.821706984803341*^9, 3.821706987090865*^9}, {3.8217112775389805`*^9, 
   3.8217114424586287`*^9}, 3.8217117213725038`*^9, {3.821712357802864*^9, 
   3.8217124367248163`*^9}, {3.8217195361311913`*^9, 
   3.8217196188668556`*^9}, {3.8217901267467947`*^9, 3.8217901607947583`*^9}},
 TextJustification->1.,ExpressionUUID->"cfbe503d-065b-4825-84a3-f65733dfb6b8"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["\[ScriptL]",
     FontSlant->"Italic"], "G"], TraditionalForm]],
  FontSize->36,ExpressionUUID->"486c1089-38ef-41cd-a882-741dc258b7a3"],
 StyleBox[" = ",
  FontSize->36],
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FontSize->36,ExpressionUUID->"72ce3f9f-60cf-430a-84e3-bdd98816f435"],
 StyleBox[" + ",
  FontSize->36],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{
      StyleBox["ln",
       FontSlant->"Italic"], "(", "\[ScriptN]", ")"}], " ", "-", " ", 
     "\[Gamma]"}], 
    RowBox[{"ln", 
     RowBox[{"\[LeftAngleBracket]", "\[ScriptK]", "\[RightAngleBracket]"}]}]],
    TraditionalForm]],
  FontSize->36,ExpressionUUID->"befb0249-0ce9-4519-b455-7d91082915c3"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8217196418589087`*^9, 3.8217197040537953`*^9}},
 TextAlignment->Center,
 TextJustification->1.,ExpressionUUID->"039b39b2-75ef-487a-ad3e-7ac28a94d959"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"908d56a9-d330-492e-b66b-602f1584f7a9"],

Cell[CellGroupData[{

Cell["Average Path Lengths", "Section",
 CellChangeTimes->{{3.8216875648353662`*^9, 3.821687572865981*^9}, {
  3.821711139057105*^9, 
  3.8217111419862256`*^9}},ExpressionUUID->"535da1f9-4e2a-48b0-bab0-\
5feb3b32294c"],

Cell["\<\
Deriving the formula would be too long to be contained in this presentation. \
There are, however, significant assumptions Fronczak et al. make in order to \
arrive at the result. Although by consulting with the authors most steps \
became clear, some will have to be considered with criticism. \
\>", "Text",
 CellChangeTimes->{{3.821691849319017*^9, 3.8216918712051163`*^9}, {
  3.821711514201294*^9, 3.82171163656271*^9}, {3.821717473666255*^9, 
  3.821717654412797*^9}, {3.821717754658792*^9, 3.821717809251278*^9}, {
  3.821717914882157*^9, 3.8217179283311863`*^9}, {3.821718553969415*^9, 
  3.821718554683058*^9}, {3.8217202626437006`*^9, 3.821720263453043*^9}, {
  3.8217902454429035`*^9, 3.8217903444020557`*^9}, {3.8217904061624804`*^9, 
  3.821790449058978*^9}},
 TextJustification->1.,ExpressionUUID->"5b642911-d7df-4067-a206-651aa596a5d1"],

Cell["Assumptions and Criticism:", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.821691089563808*^9, 3.8216910929232016`*^9}, 
   3.8216913278704133`*^9, {3.821691808130834*^9, 3.821691811653452*^9}, {
   3.8217112640105133`*^9, 3.821711265394549*^9}, {3.821711691938119*^9, 
   3.821711706489653*^9}, {3.821717872603985*^9, 3.8217178896674*^9}, {
   3.82172021827496*^9, 
   3.821720223539831*^9}},ExpressionUUID->"daf452fb-a2e5-42f5-9860-\
a8aca19b1833"],

Cell[TextData[{
 "The proof starts by considering a walk of length \[ScriptK] in \
\[ScriptCapitalG](\[ScriptN], \[ScriptP]). Now by the definition of a walk, \
the vertices do not have to be distinct, only adjacent. In case an edge \
appears in this walk twice however, it is guaranteed to be present in the \
graph for the second time, and hence it exists with probability \[ScriptP] \
and not ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ScriptP]", "2"], TraditionalForm]],ExpressionUUID->
  "18d9a747-e43c-4f3c-9189-e44088e01a4e"],
 ". Fronczak et al. assumes that the probability of the existence of such a \
walk is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ScriptP]", "\[ScriptK]"], TraditionalForm]],
  ExpressionUUID->"da6d76b5-c023-4514-af66-a8bb2f00d067"],
 ", whereas really we only know is that it lies in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    SuperscriptBox["\[ScriptP]", "\[ScriptK]"]}], TraditionalForm]],
  ExpressionUUID->"7177cd93-61ab-4137-90ab-5967b4c90ce0"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ScriptP]", "1"], "]"}], TraditionalForm]],
  ExpressionUUID->"2e2c33bd-1186-4844-9bf4-fe3679b82ce7"],
 "."
}], "Item",
 CellChangeTimes->{{3.8217905398344717`*^9, 3.821790549354354*^9}, {
   3.821790585243045*^9, 3.8217906008205423`*^9}, {3.8217906344104786`*^9, 
   3.8217906621246424`*^9}, {3.821790693235119*^9, 3.821791044844101*^9}, {
   3.8217915169404774`*^9, 3.82179153668369*^9}, 3.82194871811138*^9},
 TextJustification->1.,ExpressionUUID->"512270cc-e7b7-4adc-b734-2cbb429edf91"],

Cell[TextData[{
 "Now fix vertices \[ScriptU] and \[ScriptV], and let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalA]", 
    RowBox[{
     SubscriptBox["\[ScriptW]", "1"], ",", " ", "...", ",", " ", 
     SubscriptBox["\[ScriptW]", 
      RowBox[{"\[ScriptK]", "-", "1"}]]}]], TraditionalForm]],ExpressionUUID->
  "550aa9e4-d93e-4160-9221-33a66ae9301c"],
 "denote the event that there is a walk of length \[ScriptK] between them \
through vertices",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["\[ScriptW]", "1"], ",", " ", "...", ",", " ", 
     RowBox[{
      SubscriptBox["\[ScriptW]", 
       RowBox[{"\[ScriptK]", "-", "1"}]], ".", " "}]}]}], TraditionalForm]],
  ExpressionUUID->"ecac6df1-ffc8-46fb-88f2-fe869c599a5c"],
 "Fronczak et al. requires these events to be mutually independent to apply \
the lemma from before, but we may see that as an edge may appear in more than \
one walk, these events are not mutually independent."
}], "Item",
 CellChangeTimes->{{3.821791623755228*^9, 3.821791783301156*^9}, {
  3.8217918220193057`*^9, 3.8217918368056855`*^9}, {3.82179190081958*^9, 
  3.821791974259283*^9}, {3.82194872344611*^9, 3.821948724302292*^9}},
 TextJustification->1.,ExpressionUUID->"afd0e00c-75e3-4ef4-be3e-722567952e17"],

Cell["\<\
Not specifying the theorem used in showing the convergence of the series in \
the Poisson Summation Formula.\
\>", "Item",
 CellChangeTimes->{{3.8218621048061066`*^9, 3.8218621066780863`*^9}, {
  3.8218621455597076`*^9, 
  3.821862207008158*^9}},ExpressionUUID->"9eb8d01e-d23d-4aa2-8187-\
7f0b44c4619c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b222d199-4c18-4bef-8b9d-4d81aa95fe0f"],

Cell[CellGroupData[{

Cell["Average Path Lengths", "Section",
 CellChangeTimes->{{3.8216875648353662`*^9, 3.821687572865981*^9}, {
  3.821711139057105*^9, 
  3.8217111419862256`*^9}},ExpressionUUID->"28f861e0-fe73-488e-b4c8-\
c9e14f578d1c"],

Cell[CellGroupData[{

Cell["Experimental Outcomes", "Subsection",
 CellChangeTimes->{{3.8218620318954487`*^9, 
  3.8218620424631352`*^9}},ExpressionUUID->"f41eda55-f05f-4ce9-86e1-\
3d1a27a40586"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"MeanGraphDistance", "[", 
        RowBox[{"RandomGraph", "[", 
         RowBox[{"BernoulliGraphDistribution", "[", 
          RowBox[{"n", ",", 
           RowBox[{"k", "/", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}]}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "10", ",", " ", "100"}], "}"}], ",", " ", 
       RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<n\>\"", ",", " ", "\"\<APL\>\""}], "}"}]}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"{", "\"\<Data Points\>\"", "}"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Plot", "[", " ", 
      RowBox[{
       RowBox[{"0.5", "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", "n", "]"}], "-", "EulerGamma"}], ")"}], " ", 
          "/", " ", 
          RowBox[{"(", 
           RowBox[{"Log", "[", "k", "]"}], ")"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "10", ",", " ", "100"}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{"{", "\"\<Formula\>\"", "}"}], "]"}]}]}], "]"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10", ",", "1000", ",", " ", "10"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"k", ",", " ", "5", ",", " ", "100", ",", " ", "5"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8217922354684963`*^9, 3.821792259614525*^9}, {
   3.821792318175744*^9, 3.8217923800309258`*^9}, 3.821792412685622*^9, {
   3.8218606902879906`*^9, 3.8218606973755665`*^9}, {3.8218607314729476`*^9, 
   3.821860751959976*^9}, {3.8218608386562643`*^9, 3.821860878632696*^9}, {
   3.8218609570093927`*^9, 3.8218609675356827`*^9}, {3.821861031953607*^9, 
   3.8218610373515964`*^9}, {3.82186107624113*^9, 3.821861168681011*^9}, {
   3.8218616101832314`*^9, 3.821861652728084*^9}, {3.821861711608652*^9, 
   3.821861896905528*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"685218f5-19a2-4167-bde6-88bb4acdf224"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 5, $CellContext`n$$ = 10, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 10, 1000, 10}, {
      Hold[$CellContext`k$$], 5, 100, 5}}, Typeset`size$$ = {
    464., {113., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`k$$ = 5, $CellContext`n$$ = 10}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        DiscretePlot[
         MeanGraphDistance[
          RandomGraph[
           
           BernoulliGraphDistribution[$CellContext`n$$, \
$CellContext`k$$/($CellContext`n$$ - 1)]]], {$CellContext`n$$, 10, 100}, 
         PlotMarkers -> Automatic, AxesLabel -> {"n", "APL"}, PlotLegends -> 
         LineLegend[{"Data Points"}]], 
        Plot[
        0.5 + (Log[$CellContext`n$$] - EulerGamma)/
          Log[$CellContext`k$$], {$CellContext`n$$, 10, 100}, PlotStyle -> 
         Red, PlotLegends -> LineLegend[{"Formula"}]]], 
      "Specifications" :> {{$CellContext`n$$, 10, 1000, 
         10}, {$CellContext`k$$, 5, 100, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{515., {174., 180.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.821861769212945*^9, {3.8218618305066433`*^9, 3.821861856902635*^9}, 
   3.8218618973630495`*^9, 3.8218619798671865`*^9, {3.8218620900662746`*^9, 
   3.8218620918327165`*^9}},
 TextAlignment->Center,
 CellLabel->"Out[5]=",ExpressionUUID->"acc8bb04-2379-459f-b6c0-a603c22fa84b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.821861759870858*^9, 
  3.821861760943697*^9}},ExpressionUUID->"5d02a153-2721-4b92-b061-\
ff642f5bd61a"],

Cell["\<\
Experiments show that the formula converges to the expected APL, but as the \
average degree increases, the larger we require \[ScriptN] to be to get a \
good approximation.\
\>", "Text",
 CellChangeTimes->{{3.821862425606883*^9, 
  3.8218624941427536`*^9}},ExpressionUUID->"8e472be1-8d5c-4175-91f9-\
f4db127c7d99"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"999834f0-1595-45e6-aee1-c61ca66630c5"],

Cell[CellGroupData[{

Cell["The Small-World Property", "Section",
 CellChangeTimes->{{3.8216875648353662`*^9, 3.821687572865981*^9}, {
  3.821711139057105*^9, 3.8217111419862256`*^9}, {3.8218625340152264`*^9, 
  3.8218625444237733`*^9}},ExpressionUUID->"83257c01-2174-4dfc-be49-\
9669790246f0"],

Cell["\<\
The small-world phenomenon, also known as six degrees of separation, has long \
fascinated the general public for its surprising statement that if you choose \
two individuals anywhere on Earth, you will find a path of at most six \
acquaintances between them [6].  But how does this translate to the study of \
random graphs?\
\>", "Text",
 CellChangeTimes->{{3.8218626037342377`*^9, 3.8218626297456317`*^9}, {
  3.8219485544527025`*^9, 3.8219485620689898`*^9}},
 TextJustification->1.,ExpressionUUID->"03bc2419-68bb-48f8-b7b9-390cbfbae915"],

Cell[TextData[{
 "Although small-world networks do not have a word-by-word definition, more \
specifically, ",
 "a small-world network is a graph, whose ",
 StyleBox["average path length grows proportional to the logarithm of the \
number of nodes",
  FontWeight->"Bold"],
 ", while the ",
 StyleBox["average clustering coefficient is not low. ",
  FontWeight->"Bold"],
 "To summarise Small-World network ",
 StyleBox["G, ",
  FontSlant->"Italic"],
 "with \[ScriptN] nodes, we have:"
}], "Text",
 CellChangeTimes->{{3.8218626884809165`*^9, 3.8218627659752913`*^9}, {
  3.8218628027431507`*^9, 3.8218628083107834`*^9}, {3.821862852366768*^9, 
  3.821862870975007*^9}},ExpressionUUID->"57f090f7-e3d7-467f-b986-\
24fd0f0377c3"],

Cell[TextData[{
 "\[ScriptCapitalO](",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     SubscriptBox["\[ScriptL]", "G"], "(", "\[ScriptN]", ")"}],
    FontSize->24], TraditionalForm]],
  FontSize->16,ExpressionUUID->"ebf2d169-3b6e-440c-a074-e363089fae1a"],
 ") = \[ScriptCapitalO](",
 StyleBox["ln",
  FontSlant->"Italic"],
 "(",
 "\[ScriptN])). \t\t\t\t\t\t\[Checkmark]"
}], "Item",
 CellChangeTimes->{
  3.8218627997458363`*^9, {3.821862841623037*^9, 3.821862846239746*^9}, {
   3.821862878503128*^9, 3.821862914632381*^9}, {3.821862950800429*^9, 
   3.82186297715088*^9}, {3.8218633989113846`*^9, 3.821863411199086*^9}, {
   3.8218634649911947`*^9, 3.8218634658318596`*^9}, 
   3.821863566696083*^9},ExpressionUUID->"1a244fe9-81d8-4de0-b3ba-\
c58ac8429809"],

Cell[TextData[{
 "0 \[LessLess] ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["\[ScriptCapitalC]", "G"], "_"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "351f46ba-63ae-4b71-b967-bb046562f1e6"],
 ". \t\t\t\t\t\t\t\[ScriptCapitalX]"
}], "Item",
 CellChangeTimes->{{3.82186312174384*^9, 3.8218631564396906`*^9}, {
  3.8218634471687737`*^9, 3.8218634635934997`*^9}, {3.821863564146077*^9, 
  3.8218635679592113`*^9}},ExpressionUUID->"efa8687a-c08e-411a-b281-\
c40f5ec51704"],

Cell[TextData[{
 "Presence of highly connected sub-networks, called cliques.\t",
 StyleBox["?",
  FontSize->24]
}], "Item",
 CellChangeTimes->{{3.8218631919989443`*^9, 3.821863207135935*^9}, {
  3.8218634581591473`*^9, 
  3.8218634602312193`*^9}},ExpressionUUID->"c0ef8408-14bf-4a0f-8ab0-\
621ca641645f"],

Cell["High number of hubs.\t\t\t\t\t\t\[ScriptCapitalX]", "Item",
 CellChangeTimes->{{3.821863218023201*^9, 3.8218632220959063`*^9}, {
  3.821863467006791*^9, 
  3.8218634683996162`*^9}},ExpressionUUID->"30048c13-2181-4ac6-bb9e-\
e7b5c408068b"],

Cell["Smoother degree distribution (tail).\t\t\t\t\[ScriptCapitalX]", "Item",
 CellChangeTimes->{{3.821863548798885*^9, 
  3.8218635705272975`*^9}},ExpressionUUID->"f0a80f1d-4f78-4459-a706-\
4d19a9ee9af0"],

Cell[CellGroupData[{

Cell["Real-World Networks", "Subsection",
 CellChangeTimes->{{3.8218620318954487`*^9, 3.8218620424631352`*^9}, {
   3.821863622455995*^9, 3.821863626991237*^9}, 
   3.821863746527115*^9},ExpressionUUID->"306d8ebc-0317-47d6-99e4-\
e06ef582c2ba"],

Cell["\<\
Many real-world networks posses the small-world property, which our random \
graph model fails to create. Comparing the relevant metrics of some \
real-world networks we see that the APL is similar, but the clustering in \
random networks is higher.\
\>", "Text",
 CellChangeTimes->{{3.821863686479213*^9, 3.821863783839134*^9}, 
   3.821948710577753*^9},ExpressionUUID->"8b0fa19b-bfae-4f5b-bcdd-\
70f575a0fcce"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
kDRQRoppbIPQxa298XMowX0FkygPMZZm0EgUH62kVjMkIfbA3UvwqikpSCHG
Xs1LVP7S+0as7/rmCax1MY48a19sE+peAr6Ods/u9KWe4oq7zwqrWSjGRYO7
XQRVuTmEiLG5ubmDBw9iA7QtLmlt1OAYxFXfHkX19PTgc6OOq+dZencjOX9k
9VX1dfTO58+fx+eoNQjyCxcuyONIbIMtN27caMwpks/Xr1//7Nkzn1Pyz5Fa
jJ8+fYp2ZuvWre/fv8+yJfqgw4cP68u+RCsJker+zoIr81eNDEvykrgMBbgM
bAru7QMC6cCBAydOnFCDRbKSI/p6e1BXvUxnvGeEr0CTjMmlkroBhateWK0F
ab/iKrg/mfUSY/zu8PAwWld99+SO2D6r8gC97u91jaGFOKXldluvy3LU5bZ0
n3/rJcZekSMPweusid8IGFws/ViilWR6ly5d0q8LGijcODQ2Nuq3A7Kei0tW
Z0V2MY6Whzrr6+v1BlxSTMMo8Cd9y3IH7liCV01JQbo5xu7NS1TmDKSIWIqx
jlfti21CvUrAXQw21hNgqmXyfJNe1iYU44LAmcFNMdpt1QWvW7euqanpP41t
27bp1d/lPuvKlSv6tyTNFEIaQmt8fvPmTdkHWWWvbjlzPvYHn0fLo0wPHjzA
f1tbW3FZJycnUcLU1BQs+uzZs9jV5ubme/fuff/+XS8Bn+/du/fdu3dGyXJo
5dJhEV8xxlW2wwP/xYdy+VJsiUasu7sbLeHs7OyPHz9wv9/Z2Ym++Pr160Y7
hnDq6+vbv38/rAzfQiva29sL64aZOA6lCl7tA+7acPs2PT2NX/z48WN/f//2
7dsRovbEQuwtQhSF4wCNDhGyhBOyadOm8fFxlIMyEa6nT5/Wh6FUp1AOx/vT
yFOMo+VeBoXv2LEDJx8/8eXLF+xbR0eH/ez4+fPnUB3cL6s9V0m9yqH7vPLq
WAyZTMA3K4V75MzPz0sb+OrVK6MQyC0iAe0SbsPhS6Ojo4gEO0rl59BqYcuF
hQWcT5QJo4bXud+7RTmJcbSckQ8SC7/CVcCuwml37twJZTViKeHAHUtwrykp
SJ2Vwr15iT0DKSJWiTFijGIc+dS+ck2oV8v/8uXLlpYWVE9U0s+fP8OHGxoa
YuvpWoRi/C+DJhcBL8vc/Pr1S32+tLQURnjXCKlHjPMFlxvWcefOnYGBgcHB
wfv37yfUX/wJG2AzbIyv4Iu+Wfp924efP39KSpahoSHcZKWOwMXFRZxtlFMq
lXATl4swxOIrxsK3b9/QH2H3RkZG0LlkH+UrjnTp2rJHDi4ZrBjnR0pIeG8L
JaPPwoVOfbnzEuNo2TempqYGl8EZqLgKeeoS8qopNlnStXk1L7kwNzeHG+Hs
73mFIcZC9trnXgKc4cmTJypcQ7JBijEhRVMjYrzKBN8+pBPjNUQueYxrnBzF
OADyzWO8VghJjEkuUIwJKRqKcZBQjAOAYqxDMSYkohgTUjwU4yChGAcAxViH
YkxIRDEmpHgoxkFCMQ4AirEOxZiQiGJMSPFQjIOEYhwAFGMdijEhEcWYkOKh
GAcJxTgAKMY6FGNCIooxIcVDMQ4SinEAUIx1KMaERBRjQoqHYhwkFOMAoBjr
UIwJiSjGhBQPxThIKMYBQDHWoRgTElGMCSkeinGQUIwDgGKsQzEmJKIYE1I8
FOMgoRgHAMVYh2JMSOQjxs3NzaVSaUZj8+bNjx49miGEJLJv377Lly9Xey9W
m+Dbh87OzmPHjlV7LwpkcnISF7Hae1EsLS0tfX191d6LWuHkyZPt7e3V3ovV
prW1dWhoqNp7QWoIo/OamJjYsmVLrBi3tbXtIoQQQggh5F+ikLFpQgghhBBC
CCGEEEIIIWuZ/wFAmnQi
    "], {{0, 190.}, {947., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->72],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{947., 190.},
  PlotRange->{{0, 947.}, {0, 190.}}]], "Input",
 CellChangeTimes->{{3.821861759870858*^9, 3.821861760943697*^9}, 
   3.8218636544205933`*^9},
 TextAlignment->Center,ExpressionUUID->"c3196574-e321-4555-8a71-9c47dc3552fa"],

Cell["Real-world networks", "Text",
 CellChangeTimes->{{3.821862425606883*^9, 3.8218624941427536`*^9}, 
   3.821863634590145*^9, {3.821863791864176*^9, 3.8218638131600122`*^9}, {
   3.8219485709090724`*^9, 3.8219485710058355`*^9}, {3.8219486103245115`*^9, 
   3.8219486109879336`*^9}},
 TextAlignment->Center,ExpressionUUID->"32647e93-029d-4cd1-84af-bf53ec73ebbe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"58a089f6-d7d3-4419-9147-7c2fd14c908e"],

Cell[CellGroupData[{

Cell["The Small-World Property", "Section",
 CellChangeTimes->{{3.8216875648353662`*^9, 3.821687572865981*^9}, {
  3.821711139057105*^9, 3.8217111419862256`*^9}, {3.8218625340152264`*^9, 
  3.8218625444237733`*^9}, {3.821863914847212*^9, 
  3.8218639219573836`*^9}},ExpressionUUID->"f762b401-47c7-4ca2-825d-\
48f6f631b1cc"],

Cell["\<\
Although the simplicity of Gilbert random graphs has made the model an \
attractive choice for many applications, their degree distributions and \
clustering coefficients do not resemble networks observed in the real world. \
To address these differences an alternative model was proposed in [9], called \
the Watts-Strogatz model.\
\>", "Text",
 CellChangeTimes->{{3.8218639910516634`*^9, 3.8218640738557234`*^9}, {
  3.8219486211891255`*^9, 3.8219486225489955`*^9}},
 TextJustification->1.,ExpressionUUID->"efad7fb7-b1c6-43f8-bf84-00d018bda585"],

Cell[CellGroupData[{

Cell["Definition: Watts-Strogatz Random Graph", "Subsection",
 CellChangeTimes->{{3.8218620318954487`*^9, 3.8218620424631352`*^9}, {
   3.821863622455995*^9, 3.821863626991237*^9}, 3.821863746527115*^9, {
   3.8218639395670404`*^9, 
   3.8218639550076513`*^9}},ExpressionUUID->"2e7177a6-7cab-4da0-9def-\
c162c75c12dc"],

Cell[TextData[{
 "Let \[ScriptN] denote the number of vertices and let \[ScriptK] be an even \
integer, denoting the average degree of a vertex. Furthermore, assume that \
\[ScriptN] \[GreaterGreater] \[ScriptK] \[GreaterGreater] ",
 StyleBox["ln",
  FontSlant->"Italic"],
 "(\[ScriptN]) \[GreaterGreater] 1, and let 0 \[LessEqual] \[ScriptP] \
\[LessEqual] 1. Then constructing a ",
 StyleBox["Watts-Strogatz Random Graph",
  FontWeight->"Bold"],
 " consists of two steps (more formally see the Project Report):"
}], "Text",
 CellChangeTimes->{{3.821863686479213*^9, 3.821863783839134*^9}, 
   3.8218664484000316`*^9, {3.8218665488874645`*^9, 3.8218666638492813`*^9}, {
   3.821866767576414*^9, 
   3.821866779136632*^9}},ExpressionUUID->"92fa4299-7514-41f2-8f73-\
2a8328197167"],

Cell["\<\
Arrange the \[ScriptN] vertices in a ring lattice, then connect each vertex \
with \[ScriptK]/2 of its neighbours (on the lattice) on either side.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.821866685176337*^9, 
  3.82186675130422*^9}},ExpressionUUID->"6537f3ed-94d9-4209-9546-\
006af676c1ca"],

Cell[CellGroupData[{

Cell["\<\
For each vertex rewire every edge by choosing uniformly between the remaining \
vertices, while disallowing multiple edges.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.821866685176337*^9, 3.8218667607364264`*^9}, {
  3.8218668037041264`*^9, 3.821866860223349*^9}, {3.8219486977976007`*^9, 
  3.8219487007495947`*^9}},ExpressionUUID->"8bca3452-78af-455a-8a3d-\
dd19263700f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"RandomGraph", "[", 
      RowBox[{"WattsStrogatzGraphDistribution", "[", 
       RowBox[{"n", ",", "p", ",", "k"}], "]"}], "]"}], ",", " ", 
     RowBox[{"GraphLayout", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<CircularEmbedding\>\"", ",", 
        RowBox[{"\"\<OptimalOrder\>\"", "\[Rule]", "False"}]}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10", ",", "100", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", " ", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", " ", 
     RowBox[{"n", "/", "2"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218669702974696`*^9, 3.8218671937537518`*^9}, {
  3.8218672386992188`*^9, 3.8218672491325684`*^9}, {3.821867339914156*^9, 
  3.8218673403614964`*^9}, {3.8218679375943985`*^9, 3.82186794686978*^9}, {
  3.8218700884535856`*^9, 3.821870103538317*^9}, {3.8218702047098703`*^9, 
  3.821870248228096*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"9dec4b89-5c88-42f7-85fc-d34b1d7d1e25"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 2, $CellContext`n$$ = 
    10, $CellContext`p$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 10, 100, 10}, {
      Hold[$CellContext`p$$], 0, 1}, {
      Hold[$CellContext`k$$], 1, 
      Dynamic[$CellContext`n$$/2], 1}}, Typeset`size$$ = {317., {163., 169.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`k$$ = 1, $CellContext`n$$ = 
        10, $CellContext`p$$ = 0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graph[
        RandomGraph[
         WattsStrogatzGraphDistribution[$CellContext`n$$, $CellContext`p$$, \
$CellContext`k$$]], 
        GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}], 
      "Specifications" :> {{$CellContext`n$$, 10, 100, 10}, {$CellContext`p$$,
          0, 1}, {$CellContext`k$$, 1, 
         Dynamic[$CellContext`n$$/2], 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{368., {238., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.821866977392095*^9, 3.821867042311535*^9}, {
   3.821867078585203*^9, 3.821867133939266*^9}, {3.821867177342481*^9, 
   3.8218671794626513`*^9}, 3.8218673452369924`*^9, {3.821867942025961*^9, 
   3.8218679474142647`*^9}, {3.821870158068779*^9, 3.8218701633399825`*^9}, {
   3.8218702051228714`*^9, 3.8218702489439087`*^9}},
 TextAlignment->Center,
 CellLabel->"Out[53]=",ExpressionUUID->"ea11cb98-9fd1-42ed-8f23-9a6c6f21388c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"033f5d0e-9ed9-4f33-a462-df1672dee6a1"],

Cell[CellGroupData[{

Cell["The Small-World Property", "Section",
 CellChangeTimes->{{3.8216875648353662`*^9, 3.821687572865981*^9}, {
  3.821711139057105*^9, 3.8217111419862256`*^9}, {3.8218625340152264`*^9, 
  3.8218625444237733`*^9}, {3.821863914847212*^9, 
  3.8218639219573836`*^9}},ExpressionUUID->"15b2532d-575f-4ab9-b9e3-\
7380317fca53"],

Cell[TextData[{
 "The condition \[ScriptN] \[GreaterGreater] \[ScriptK] will yield large \
sparse graphs, while \[ScriptK] \[GreaterGreater] ",
 StyleBox["ln",
  FontSlant->"Italic"],
 "(\[ScriptN]) \[GreaterGreater] 1 guarantees that the graph does not become \
disconnected. Moreover as \[ScriptP] \[Rule] 0 we have seen that the \
Watts-Strogatz Model generates a regular ring lattice, in which case the \
Average Clustering Coefficient is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"3", 
      RowBox[{"(", 
       RowBox[{"\[ScriptK]", "-", "2"}], ")"}]}], 
     RowBox[{"4", 
      RowBox[{"(", 
       RowBox[{"\[ScriptK]", "-", "1"}], ")"}]}]], "\[TildeTilde]", 
    FractionBox["3", "4"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "327d35b1-8e56-457a-8732-58843eec9cb5"],
 ", and the Average Path Length is approximately ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[ScriptN]", 
    RowBox[{"2", "\[ScriptK]"}]], TraditionalForm]],ExpressionUUID->
  "cc9db872-b783-4b7d-b8f3-96d8aa3f62e9"],
 ", where \[ScriptK] is the average degree of a vertex, and \[ScriptN] is the \
number of nodes [9]."
}], "Text",
 CellChangeTimes->{{3.8218639910516634`*^9, 3.8218640738557234`*^9}, {
  3.8218691349690504`*^9, 3.8218692145064974`*^9}, {3.8219428707035513`*^9, 
  3.8219428750323305`*^9}, {3.821942923145333*^9, 3.821943156695232*^9}, {
  3.821943190077448*^9, 3.821943201649599*^9}, {3.8219488056622653`*^9, 
  3.821948808925793*^9}},
 TextJustification->1.,ExpressionUUID->"0f7daef1-5c2d-4975-9313-50cf988ddf8c"],

Cell[TextData[{
 "As \[ScriptP] \[Rule] 1, however, the model starts to resemble a binomial \
random graph with \[ScriptP] = ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[ScriptK]", 
    RowBox[{"\[ScriptN]", "-", "1"}]], TraditionalForm]],ExpressionUUID->
  "383cf91c-09f7-40f4-b44c-81b61d7887a7"],
 ", while not exactly converging to it, as the minimum number of edges in the \
Watts-Stogatz model is set to ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[ScriptN]\[ScriptK]", "2"], TraditionalForm]],ExpressionUUID->
  "29337404-3e8a-4e81-8b17-b78f71c25daa"],
 ". Therefore at the other end of the spectrum the APL is approximately ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       StyleBox["ln",
        FontSlant->"Italic"], "(", "\[ScriptN]", ")"}], " "}], 
     RowBox[{"ln", "(", "\[ScriptK]", ")"}]], ",", " "}], TraditionalForm]],
  FontSize->24,ExpressionUUID->"47aeecd5-60f7-41d3-a336-933ff1dd65a9"],
 "and the Average Clustering is approximately ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[ScriptK]", "\[ScriptN]"], TraditionalForm]],ExpressionUUID->
  "803856c9-4a6a-45ae-a8b9-d5c283165c2c"],
 " [9]. This leaves an interval of possibility for Small-World networks to \
emerge between the two extremes."
}], "Text",
 CellChangeTimes->{{3.821943215877681*^9, 3.8219433451577387`*^9}, {
   3.8219437709211483`*^9, 3.8219437728084707`*^9}, {3.8219438037425785`*^9, 
   3.8219439118235235`*^9}, {3.8219439791758723`*^9, 3.8219440073986187`*^9}, 
   3.821948688741001*^9, {3.8219488127184935`*^9, 3.821948814630397*^9}},
 TextJustification->1.,ExpressionUUID->"2f741f5b-2a7a-4c3c-b841-56be5bf8f352"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MeanGraphDistance", "[", 
       RowBox[{"RandomGraph", "[", 
        RowBox[{"WattsStrogatzGraphDistribution", "[", 
         RowBox[{"200", ",", "p", ",", "10"}], "]"}], "]"}], "]"}], "/", " ", 
      RowBox[{"(", 
       RowBox[{"200", "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "10"}], ")"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", " ", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"{", "\"\<Average Path Length\>\"", "}"}], "]"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MeanClusteringCoefficient", "[", 
       RowBox[{"RandomGraph", "[", 
        RowBox[{"WattsStrogatzGraphDistribution", "[", 
         RowBox[{"200", ",", "p", ",", " ", "10"}], "]"}], "]"}], "]"}], "/", 
      " ", 
      RowBox[{"(", "0.75", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", " ", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"{", "\"\<Average Clustering Coefficient\>\"", "}"}], "]"}]}], 
     ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.821869784610833*^9, {3.82186981471583*^9, 3.821869965739068*^9}, {
   3.821870024834837*^9, 3.821870072875578*^9}, {3.8218702759233503`*^9, 
   3.8218703080039654`*^9}, {3.8218703398535852`*^9, 
   3.8218703574438176`*^9}, {3.82187039985804*^9, 3.8218705565012445`*^9}, {
   3.8218705968849616`*^9, 3.821870615691451*^9}, {3.8218706556741514`*^9, 
   3.8218707610026383`*^9}, {3.8218708453127747`*^9, 
   3.8218709016618605`*^9}, {3.821870942508795*^9, 3.8218709432085447`*^9}, {
   3.821871097132258*^9, 3.8218711196581025`*^9}, {3.821939534691733*^9, 
   3.8219395559536915`*^9}, {3.821939590820408*^9, 3.8219396131691914`*^9}, {
   3.8219398577855916`*^9, 3.821939889035059*^9}, {3.8219399798748355`*^9, 
   3.8219399838169937`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"f7a34639-9dbb-4da8-84ec-8709dc9d202f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxEfHk81e3zfomSRM6+RBItKmmh0jKWUBGKVkWJECqSkEophCREEQlJpAVJ
JUZZUto4+zmOpV2FlFKU393z+3yf569e9+u8l7lnrrnmmvs9mui2e42HwrBh
w+arDhv299/2GJNbzXe4qFjvFvlrURvUGPJ9825z0WG8Bf3xaynkCXbrhtzi
4je3Zlul/WKIDlOR2ZRwUenEr3IXXTns1LmUpHWTi4uzl23cdEEGto/A5ss1
Lo51evIzwUcGs3ZJFGqucrFvlP+TDa9lQKHtu5tSwMXDDeojz5nJ4dsd9QDv
fC4GW761oUa1g8C1YNrivP/W5UqW7Wq5/63TClvPtl/8b31wdahD6QUu6sYm
fIidJYOtP2jKURlcXPDMoJTXKAXzjOtVG9PJ734Lz4/3bQFdi5X7Z5zj4umL
UeoveyUw8sNrg6EULj6PK2jcS/bzPv7w25fJXBzxWWvFkttieDyPk5mb+N/7
rkpK1+5PIPd/DgMjFwmcCrcfuzKeizYZr69JDrZDwOTOmvFxXNw/PoUiuC8H
p8ZjYd0nuLidntfhc1kGxgET5j2I4mLPVDcTJdU2YLHufkw+zkWjm7fXvpG1
wa/7TjmeEVzcYlr2M5/ZCrLt3ZtMjnBx+gbulgOjpFA5OoYy9vB/9ly8rvu4
NYyL/hcLNbYFt8CxtVVHikO5uMqm+u3SrW2wY2DjwuPBXIz58t2+94wEll/8
1rM+iIusM/feXcwVg771qXz9QC76jBjPqU1oBdXP07b+9ufih0cm45QWt0FX
Yg3zxW4uzvs+Zahvezu8WOD6PNuPi3ojj5yxiJVBifxn5D4fLj49pLmz8IUM
Uo4lL13uzUWz2O7FmkYtEKw/6zvHk4uhSjU2d+US2PSioeizOxeLqGfXjm5t
g8VB7h7oRvCS5+M75o8YtMYPjU/aysX5a/tNJMPbYNiDczwPFy5Oc1i4pEHS
Ch2e8+IWbP5v/7Vjn1uM2cTF/EG7U6svtkJ+ifdAy3ouhpnb6gt0WiBmo2LJ
jbVcLFxe7Z18RAq+Q5k7Ixy5WNX/4GDjZAnYXVqos241F9+UB73I6hCDoQ1P
PNWei8XqF9P85rQB5cuu0wO2XFyRfauo5J0EvqWMXvFsJRcvxjOLPAl+hItz
h11czsUZ67bpVwZJ4G7H0vK9VlxUX2FfflEig/PR4t1Wy7iYccPjVoCbHA4Z
BE5hm3OxNOxI/KLrQtjKU2v9CFy8ENT1Y1Z7C5iHXkmpXMLFG8FU3ojcFtDT
XmZ3ehEXTT7sMppK8KhcJ1dyX8jF9NezDS9UiKDTJ+S+8Xwu0lbm5d1XlUOj
Bm3faCMulisnUcuuyuHa7WszZHO4uIPjb6wwIIeELSteXzPkYkf6kP/NXjns
HfE6/YgBF60vSr2D9OUQ7b5ur94MLi5NDN1VMqsVztc+WtkwjfCBivmqqN1i
uDF5kY7fFC7mWs7NlK1ogZqoop/j9LhYYiQZdUpHDqL3E16W6nDx7faq0yr7
pfB5RWL+Bm0SH7vu4Y1zW0ChUDF8UJPg76rKxvP9YmCo7l+fxSX2/4WDshz0
/T4YLGNzsezqOrvGzS0Az5xHvmdw8dLS6Q88JSSfZj1riaVx8ZzV+ZNYKQWv
BNNbsyhcnPi7ZrbTRRmEfSmOa1bn4peyG9YuelI4vUbPff9YLm76vMjiS70M
8kpSF3HHcHFSwbIXGxdJ4S5NhVql/B+enu0L63QbycWQYUHZCsNa4JWgq3qk
Ihfj0111ZOvaoH/+tnMFw7n4ck/M5qwdMlA917zHboiDe3IftIStloP2L8vl
vYOcf59n5Fw+IeUXB3Ua1SMstKWwskL/x8J+DqqsLXw/DkTgopnxrKWPg2v4
rIWDjXIIOKSed+QrB4/GHQkzeSeDqNYjB/W+cPCk9u4g3QEhnDf95tTQxUGr
VGCO8pPAjYs7Zvh94qDjRDXvrQvkUKMgHqHRSe73lh2nWraBeLuNtPTdf/Z0
1dwv3vCGg3qrpo7vYcpBYbJhzGAHB4vrz4e6bZEAIyp7W1YbuX6X8XEHBxlM
f09buEzOwZ+chiO3Y9vAdEXUuPfS/57nVPDzXayYg5fd3WedeCwCrzG+VbOE
//1+0Fee0swj68iOU1c+ySDxqcOu/U0cnF9q09hK8JZn8NCS+4KDi7USM/dY
tMPdU0aaVU85mLR45Nskwn/Pey5/c3vCwUVRiqKRt+TwejWncWQDBw2uSNv2
1cmgvzgup6COg+snPeiRFAtBlTYUalfDwRFXdZQuk3hM3Oe/preag+p3czQ6
g9vBWPBqWkoVB1c5Tt5MYbXCyvnrhpvc5+A6BeEM/4tScDn7SNRyl4M3LPzo
aXEkP36a3DhS/t9+ojcVRemVcTDgau5vg0PtcP7eBNeGEg5ePLj3UEStCG6M
TzT2u8nBv+zrNVkGtQcV1TSuc1Dr5pr1GtVtIJEHvSm9ysEvbwof3qQTfoUP
FRsKOLgx5sfFRGWSHxedkwcvc/B9Q+qV7cdEwFR45pN1iYN0c7PZnU6tMGO7
qcWyHA4WiaycTmRJwbSmmPM+i4M3C4dcb+jLwElPrzc2k4PPtlx30J7XAl6R
qQ2zznPQ9nWsUZSKFMLejb7YfI6D0fZ7Mu4Sfj29PCx4f+p/++uxWbnR4gzB
0+odhyj+reBgzzJRT+JgZsnP6X43pHB9zVuONIGDqc8nWEcck4HautKBvHgS
T+qFLW8cReC38agsII6DvC/ZfbYurdC42eH+0hgODs2oybzdKYXpW7UyVaI5
qGhDN3udKoWY7Z8OCY5zMGbKr8t3+8TwYcdd1+wI8rwltoZHPKSwfGe06a4j
HFw41r+26KIcLvutm2hymMT/7VtaCalnI/11FUYe5KBGfbPE8ZgEPAJ7O16G
clBe7BTftZnkw358mBHMwTM3um4JRohh0oH4XO8gDlbczLQ105PB0UObjxsF
clDXM37jSEshtB/R3zE8gIOvVy60CNSUg+nxfqunuzn/q38tcCG6bso5Pw7W
Cu3u/NkrhT+xycoePhyExl0CHnnellNuHwy9if8WbJFsIvipSDR8PLiDg5R0
X/6vdjlwU/4UPHLn4BS5SpbFYTmEnmuMTXYj+Oatu9jgJQfx+TTfrVs5KOF8
jrDWkMKCLK9VM1yIf6auN2MvlUBqjrFBvzMH3dPmtCdiG3zPU1Sv2cjBnGz7
NVaED9YWNHWfWk/waL1n8j0PMZQWZb1wXsvB7yc3bZdbioF2c9fNKY4cDP+9
YXruuBbYW7o48asDiU+ChziwVwpNt1X2Vtlx8MHkvwa2wpx7IsdYWw6GxZtt
MokneKnMm7d+JQf3fnyrpuwog57qQPqk5RwsLZjgb7i+Dexrzb93WXJwgbdh
W3mYFK49Gie8a8HBlg+lh+lKchjbKL8dacZBjx9PQLpBAr7Pr55dA//h70lT
aIjWEsInKq7Wi8LbQF+wfFOnCQcDg0VHFXRb4YSYsahsAfHP4Blj0SoZvJe9
5h415uCnmWXxQ4SvrduKB1fN+y8/816Ft7DnkPxau/rV1C8toPTOrvLNLA5m
LeE12+S3gHvn+As3Z5L8dz58YGtOKzz83Hn44HQObrq94ONUrxbQ+VK+dcU0
wu9ir/NvyfrIt0gz+hQOft7/JTZPKoW2H0467bocvLPm2bgtUaReDeiMKNLh
4A/jD19iVkgg80/Pq2BtDi6fy42aSurX7+FVNcu0OOh8vXnf2hsC2Kx08tK4
8RzczQh8MWmBFO4pO0fK2GS/ATNNPw22AUd1mmc+k4MfFp7yXkX0RIj6D+tA
Otnvayf+mVcSEFFqp5pSyX4l5m2TiJ6Zz0gararBQf8Ip5ovpXJIYW/rFKr9
59/v42c9yVHlYJyt4MDBDCms1f5duFuFg033dL5eOiGF78GXMqyUOSgqUk0I
SW6Fsy9XndIcycHZnkNFridbwET/e/i3EYRvrz5wCvssA9nRzIAnwzkofRzR
5UXy75DUyj17iI2bi9gWZyfIYcK87rUhv9n4ROldzw2ldsC4VGuHATaKp2Rl
N10WgtsbWDjlJ/tf+xSXvtf/852NPterA0/6ieFSSsJ4/jc2auZt9LG4JwOr
7gVqV3vJmnmtJnajGN5btw8d7WHjslF3Z1DsJBCTdeLLxi42sjMyRjm9JPXr
5+xXhp+IPQkTTkXlEj5aLeGN6mSjsUPBaZ1JcthVcLRO/o6N3is+bJ63VQbj
Rkwvv/WGjboJ8kQLNQncdG6+EveKjQd8fw76zxPBmtID6dvb2RgTVdCk5SmD
b6q6J01a2Zg8bIPNrQQxpHg0HtJoYePzcCdra4EY5lcG7nkvYWP7eK2yrGHt
IGJoulWJ2BhaWLndN1kAobtrHVMEbHSZ/60ziCmC8Y/8LP14bJz7e5Z0Z7MU
7msz5i9rYuO2TYy4MAMxDGvawel9ysaHj7V6kr0kkK2vrtrwhI3ZU1zz4jUk
YBFx+/eFBjba2Rd/T/3eAq+lrt1B9cTfFd9jswzFEDlPuX1VLRs9I7Zy9rfL
YOrJG026D9m4/MCEy3Ovi6DhzYaaAWTj4uMrL634298tHV7WVEniNyZxbv0M
KaimXrl8pYKNrKBRw3lnJXCte/W58Lts7Du6bf840xawX/4rZn05sef42kwj
wic9WdlhBmVsVPdbvXxKrRgSf67cpVTKxoOMN7oHw8Uwb81XV9lNNm5Ju9f+
fZsU+AXpq0uuk3gt0Ym41iCGoBHLLGKK2DjBM1lxhbMcWJs/zdtWyEb35Ym7
WAZEv5UmT15whY0GR96bplpKwHnsEpb6ZTbaJH58oEr6oUGPN6Pf5rJx3hzB
OV4nycfKkwMV2WzMD/hyerWWBEyZxp+TstjYdkdMMzcTQ/tuuXxnJhuPeXhp
n5vUCkcfRb4wO8/G8XqVYfuIvtKdOOsBK43E7xJ14jo/EdSFCEu6U//zl2fT
4Ut1Z9h4xnn+flPiH+XpU1Mzktgo4B89HpLVAgURL6IDT7Pxxa93G7M+iMFW
Fhxqc4rgefHYrt2kXnyeN9FX5yQbc3r+lHp6SyD+ZMOWnzFs7LTTzY/JkIHh
W3/7F9EEX89GFHg1iaFpKcfsciQbJ/6Z+KT4gwwCUx/MOXSMjV+Zi8qGHIme
69mpu/YoG1dvM/S+0yaD28upjBnhbJzdlF9zWlEGMZuTpvAOsrGLF9PZtbcF
XPZQF4YdIP6p7crQ/ymEOceSVuqGsNGPa/l8kOjrkWepmxuD2Fh3auW5r5li
kBQm+QUGsvH7iN8e8gdSKKqiHh4fwMZ+rSXvZheJIbw5KaFmN8H/vXG9LVZE
v7+jZvv6sXHto44a+0I5TB1IKqH5sHHEu70jpyRIYVCNVlvhxcYNlip2Oaoy
eKGTLHDfwcbt3NV6R59JIMeY9l7VnY1Hyt8fSTohgqCVyT9Lt7FRr0qslvpH
AitdaGO2uLJxTDs8vFovAa2A5PFKW9jYPedIxxmin3qP0wyKNrFx3Sg9wVSC
v7pzybB2A8HztFvzNd5IIK2Itvr3WjZGNE8lJhF+qE52u+TIxsv3VQ8FN8rA
jE8LXLWa5N/Gxym2j1uA9iH5eJ8dGz++/9swk3o0SEvNsCX51N9wPD9dDBXj
zuRbrmTjxpZvRT6ErxN06Xc/W7NxpOJHd0a4HNwXnHlyxpKNP9ZmiDasFcMC
W3rLEgs2Dom8fx6ubwHVrWe63piS/fnKFContUDrXvqw+KVsTDPoOeqpI4Xi
qDMaxovZWK2xotEtvBUi0+mT5AvZaPiw8tFOwg+brp+ZFzmfjScoHt4H50jA
4CHdysCIjafTDs/dHCEDBeGZ9YI5bGzI8gkoMxWBoJPufciQjf/QbY0MCv6c
CZ1swEZexaDxK6s2OEhhxD2bTvgj7XqsP+nvHSanZARNI/mjofe46ZcMdE0Y
17WmsFFumpNuHSSG/lUpWKfLxtzbrxMiDCXQuI3RtEuH5OPryfNLuiSQtS/l
FUObjdQx7mdez5dC4AlGX6UmG+One7n1DpPB8oyUkZ5cki95J0u96qTAvclg
qbP/j8+FpJ9JmXabwcaAhsybQPD6QMRY5Epj4+22C3uF02WQ8inFdhSFjU+p
gY4hGwWwcxjT5bo6wd/NJMe16+WwlJa6e/1Ywid9yW7g2AKUqcwjQypsvPA8
xWrCKzG8XZSaeFmZjb11P2SvRrfAHXtmrv1INu5/b/v5cVcrxG1PvfVjBBvP
Lcq52FtO+vn9zPoLw0n9aIybqXNGCPNiU0XWQyy0jYlctRDloHyB2dk9yELr
90d7dG63gqw4dSD1Fwvjye6SFonheh1zrGk/CwFZq/OFQjgqSdV638fCf9qX
lxJY18U0TPjKwu8qSuaOJJ76CmfNFnxh4ROzM7Gn4iTwh85ybOti4cdLlJoK
NRE0TTvrHv2JhXFn5hu9u9sCl5awggw7WchZ/vbRfQ8B1Hz9mjDsPQtj2q/f
9b0pgo4rzwtfvGHhP+lxWgLDthbWZb1i4eGNLKvrH8WgxYhq39POwodVeor1
bnJY3Og2aNrKwtfyOUmvtgjB+ehSpkYLC2/JvVIWTW6F0AWcOe0SFnZYlFZo
L5TC2a4+25siFoYHbqhXEAihLPel5xEBC2/nJEMa0eu8TUVHV/NYmN7Hd4n4
IIHecScyJjaxUG29657YO2LQqHcv//KchVbytxklP6VgeNC0ufopC7PmTztt
dEQIdnPHd51+wsL9EXbs65lC8P3wQ9mtgYVnchal2vgRvrvQPGlOPQvVl/yc
sy9OBPlrry9VqGXhsLTcxOOerVA3JnZj0wMW/hk35ZhSOamf1TsCs5GFmcsd
6IsWtsCIYPNTAZUs7DEO6O3qbAMdA60C8woS3+w5GxI3C8H09c8ayl0W6ty5
OTHbjfT3afzWjtssXGzxpd4pSAJhDjd/Fd8i/l3a2jg/SAppI0/SI0pYGFG3
77VzixjuVHgZOt5kYWzpR+4t0t+KApbZTLrOQsdHHhx/Ywl8n6q94+tVFnp3
vwp8S/pHWutA+MMCFj56qT2xvloMc84I05PyWZjfZ1Uimy0GB5uSsu15LDT9
p0GUwO7hp17OzWXhmEWWhb80hBB/e+enEdks/OQ1KuEwSOCqn9Uo3gUWlqq8
SE9+JIHHk3R0cjNY+KJjkb31qnZ4L/69ODCdPK9/TaTqElIPEsTrl51j4Sar
16fbGkSgZ3UrgJbKwpSAyPcmnySwbDDh5OtkFp64U8GJN5SDW7FvfmkiCwtf
Vj81qhBBuNfyh8cSWCjrDYq3VmqBTC1duVM8Cz22TCla+0UCFbyhft04Fq4q
9NfIIfiXxkipfSdYON/X+ipvbRv8Mr1tUBvFQn29WS+fhcuA9SNxxZnjLOz+
MGHajPktYFy0y90jgoWtmeeSutZJwWn7ysNGR1iY8Ld8EbwEsCenKR1m4SmG
w7OkYhEkPB9+ix/GwgUPjR6NrG+Fa8dbnl8KZeHs01fDBzJF8HTRnc59wSxc
dnm0wjWZED59SVayCmKhUXrtwRUvRaCSv0ebEchCw/eavXbprTDVxXbRW38W
zjQxu9tZLgIr2tR1ZbtZ2Fd8J+5BsADcH4/wj/RjoVL6QPjFcyKICG+NXefD
wnvDlTsmFMsg2/he3mRvFp4zLzzoOVUO+Cml+vsOFjbMYrJ3ZUtBnh0gq3Mn
+RlVNjU3SQKDG+x+pLgRfAZpZExWFgFHXZ/iuZX1L58trFWaOd+FhVvPSYnH
hRBjfMdT5MzC8UvrtWdqCkFy2Tc7ZCML97XtfMp6IAN9tnYLZz25P7M9VY3g
+UBMM7PCicT/6I0IVRRD40Dkmi1rWKjnvv9kp48AxvuZnPxjT/yR5vW6M1oE
vvLP9RdWsdDs+1lH+6tEz9pfVDCzYeH7ru9N1rdbQK3aaUnHcpIv/wRYDC5z
lIMjrEj8Ug+X3ST8fi3nXrHuMhbe32Z02+2sFIZouz/XmhE+4N7kX53TBg6R
OlM9gYWzFgenRla2QNYPvpvyEhZqdxy7Mey2HHq8TmRcMSF84XA2YVObCMwk
i0UrFxA85C4TKB4ietSmh/LJiIX2k2y+LHWSQEdFzqqTc0l8trIJRYpgjsH6
aIPZhC+6V7xwTCDxuaDy8LkB4ZNdZ0Tta1uAN67y954ZLCx5tfAMjfyue9R/
AUWfhdes20Np14QQ+FV3b8kUFk73rop1ndcCte6iIic9Frrs/auQW4AhiH3f
p8PCdYHRE1jEXzusYVKqNgvXq+493OZC+LG8d8sCLRbmOOc/OUfsH6Wfd1bM
ZSF9ZFLKmGdi2JC+sTmUTfgr4GZv3lsZ5KuOVRvPJGv9oqZ0DSn0H8Tl92mE
j9WqCz+7iGBF994IFwoLa3UvHq2eQvhn65TKIXWC/3OXurXqhND5UtKfNZaF
NZtdxlqzpGBiET/XfAwLnZqG+7V9bYHYUrNdr5RZGJj1RKc9Vwwyvb78YyNZ
+DhgpUnWWBnMSM1/padI+E45q45H8i9MebNW/XAW9gdFn3+wox2ehqhv9Bpi
Isz2K+jZJwOtjw+SRv9mYszOG1pqn/iwa3PQs4JfTNz2/z8QQOXTaaNt+5ko
UJKmTRcLQB1aLD73MTF0vXvlPH8RbL2RcCj+K3menafLcMIXNyYuuzPrCxND
DJ/dLiV6fVjSj68vuphorLa6dOY+CaxWLDQI+MRE8cQ+1wqi/7L3uXhTO5n4
qclxrOMuEfS+1cgtfcfE+dkrFTNuScF8Q6187Rvmv+cnSQ3B7B8d/z3vtckM
p7NtTPzoGLDaPEwC8662xi+UM/HMlbfibckSOKaZ1CCRMtGRd+9CxjE58OOt
FMPETFw+4qF/0MUWmDzs11JNIdnv3bqytgtSCPIvCqnkMfGzcZ/1uCDSX3Rs
LXVtYuIzo4obZiUSYDrRuoe9YOK4J9amzy5Jwau2flr2UyZaPr7Wzzskg3Lj
A+4WT5i44kv1lbmkX1PON7jw+hG5viTdaN9oKWxkd4iP1zHRxTftSpsB4a/W
3Xpzapi4dMrL9UcIPx3K+71HXs3ElhOKRCJJQcMvtiKmiomk2Qm3yBFB7ly2
8vz7TFwyZt6S58clMP9XnuOru0xs3jNq1GGpCB7jvAunypk4c6i7fGeoFLZE
PehcVMbEQOaTStjZBj2rHIzflzBxiHQ3v2RtEEGTH0m+yUScsPGYrasMGFKf
p6bXmVgX8Y1a79ACVy7+ZH2+ykTFiV67lkeKYLFXlPu5AhIPF9d3MWtF8NyA
fsMyn8RvV3HTmR0icOvLHvhyiYkp5gbN0SVi6LtnaJ2Zw8QFKi12JY5iiD5a
mbjyIvk9Zs7XpGiiJ1fYyr9nMtF5s8A7jC+Ca+qSaTnnmVj92WpxyxkJmAk8
99mnMbGozjLOaroYeOf7cCCVidrlwhZ34n/P7RGq+WeY+G1wf2uMXAS/pmls
cEpiYtmkdZ36OiI42ZOZM+w0E7+Wv9P9pS8C7dszuq/GM/Gfz22XJVBy8K7J
xjgm8iM6KENjSX1YtjxSKYY8r2xm7+I0IYhVBC9vRpH38V+e3qctAd+X2zVd
jhN7SDXqfyuEodQvXioRTHxjNPE6/bkEEl0Ol5aFM9Fr3fkDVd9JPdYbO2z7
ISb6zhr2ePCyEMo/ptmohzGxb5a7z3wPIdgUT029F8LEx432Ol3rRSAPLuvw
3M9EhRDjkF+PheAPywxo+wi+TWk9WZVCUBzZFIIBTBT2PBj5NEYKqY2utb57
yH4ucabN6RCCftLncexdTBy/a4JxK4nP/Y0HNtf6EHx8u1PtNV8EDtqj8/29
mXjshcb8J2l8ePU25aumJxMvZ25ILcAWCCrShcfuTJRx6+uPPRPC6MDimCA3
JrLf/sH7XXI4b2Iq0NlK8Lj+MTv7owhmDX828fkWJtaoVKY1Hm+BB/XOfgec
mfhgaQz9Z6sQ1sZ/KJ+ykYnu1kb8O6S/e++0X5G3jolaJx3qYwVSOMBVcgh3
YmLi7ZB3vqR/VOtITJ+xhonl7PnmaWIRXMzXfieyZ6JKziabOYtEMG/3tTnH
VzHx4s2KnPhkIdQbLT4024b4m9PV1rZbCpsGGxpaljOx8casYk6aAD4/WE+P
sWLi6TtzOfqnpBB+4s1W42VMjGb7WfZeFAHVYe/VDjMm2txKIFdIII8xvD8e
CD+MC0oYvkACC1viLRYtYeKr8p96D/xaoDFn/Kl3Jsx/+wPXnQWSpAUkH/8e
l3/kQ6/hgsmmxky03hHj9Z3459iPWv9PcwmeroQ23xwhBWal4/2zs5k4PVG9
9vxvIXybvITiN4usv44/4XpbAk2nJnuazST++lvOtWRwo1+9gj6diWqm4/4e
EUP8tp/jOqeS/Yq/nF+pQur74w6PyslknWsjb+sl9WVu491EXRLP34VTb3wQ
wuTzt9Q9dZjIe7SmQv2MDBSVLrgv0mbi+m91gVEPBNDhF31HXYuJGY808Mkf
AVQJ/NVec5nY6rkwu/6aFM6D8/ZyNhNp03uruocJITR/WXkck4k+Kx9m+WuS
+qdhMHYbnYlmt86r37ESgVEo082ISuL58LnvOVshUF4Nuz1ag4m/+94qFD8V
Qo9N5xi5GuHjeuUjlC4xPCtt3lqsysRRcoPsZkUxFGrevxWpQvC0we/35yMt
EB2Zp+KsTPjZfOeRSYmkPnefcp01komLN5kutH9M9O2GkNIRikxUdW7mK0kl
MLHabbRoOPPf88Q/02xdrg4xcMZmVT9ehghkiUYl4b8Z2Lg+avv0sxK4O6Cl
vHaAgWrxVduKt4kh1V15y7SfDOycfvjm9gGiH55+ufn7OwNvStfvc9veAmuM
pSObvjEwOejXqltj28DwQo1zXi8Da6dfcTFOFYOa8rUboT0M7BWmj3lkTPh9
T6qSfRcDf71QmdWtJ4AGcfimSZ8YSPlnIEIGeeY7r//4wMA8I+8SI0krHCt0
VGx8x8CaxG0e6sEScKMt2Zj1hoEmx/ZsU/UUg+nBydcCXzFw6t/jW08RaL1V
H7GinYFx32LqPr0SwoDdz/WarWRdOG1sRF0LiG53XP0iY+D91zGiz4USKNNu
HF4nYWCK3bENt4YLIPnErXVpIgamjTtn1O8iA//ezMJdAgYmJu1f/44qADvn
6GEWPAba/dY4pukughk1/muZTQx85BRkvobwtcpM54KPzxk48OBXkJK1GN6d
WTZU9ZSBxZ6f7P98FELNn5lOyU/+b39CyPZkXvFqYOClJl2KkEP6jxfD/iyu
Z+CLiPf3zXSFsGVh5xqNWgayT1sfnRIhApPs5stvHjD+7e9ZY+4P3kEGdvht
O1WxUgDf9+atjq9k4Keyst6sRRJolp3Kc6tgoOudTwE5HQK4YRkyYHyXgSXF
x96OUCf91jU3hzHlDGwNN7c6nMQDX6btpdZbDDxfuc9vs5kUVoQb/SopYfw7
fzH5g5Z99E0GNg1qzV/cLQDFNcq5m68Tf/1J9bv1QQwdd7/0GxYxMDpxMk2t
Xwo4SbpKqZDgyXvrgmcGMsiMq8kW55N4nGyqoo4QwoG+oh9FeeT+I5/jTX+L
IIa929cxl4HO8mdf8rOEkLbEsL3/IgPHV483LzcUQMG2L2szLzAw7GDG9HXb
CF6PFz+2yGBgQ1K54/QCKTy+shc+pDHwsNXd12OJnpA8nVcaf5bs11r6/GWq
CDq/9E2dl0Ls36vVnFYqhp/02xniJAZGacTqme5rAWWTYMrh0ww8bSZ87XtE
BCyXhVG6pxjY/FeObZXA1KO/BhriGLiEGfNgoFkAC/Lu7dkdw8Bgm9Px04i+
Xv447A0tmoGR/oscckk93NC1ZNPd4wTf0/fRNeIk4EUZeuYawcBA/Wna7VOE
sN8YLZSOMNBjYghl/04+RG46Ul5wiIHcrwYxU34JIeWQ+UyHMAaSi5nZu+SQ
lz0iuy+EgZB+Z0pNLsFvXQ0jfT+J//y/J/YCqOs8Hmu6j4HMpjpu614hCNSs
h70NIHjrqp5xYpUA3s5R3he7h4ETDpuqZ/8QQN+6hg+GuxjIG20/LI+8T/FA
jIvAh4H9Y1qPJ5D40i7YNB/wJvm845drGV8Aug9Vl0/0JL+7R/EOE307793T
ijp3xv/mNQSwbMyp2b5uDPxz+5ARo0wMTrMc8jS2Ejw01VZa0oXg7qjBvb2F
gQqx882WmEpg7/6mU5udGXgoZVLop7tCOJqepKiwkYE6iwquPJsphMQqp5DL
6xi4v3jFGYVTIsh+Re+ydWJgu05DfxnxX/EooVvvasJf443dCjeSejv9rDDV
nuDtn4EDPjTZb7Rdsorc/67b0TdPCB17OdUdKxloz1qj5G8ngC+pUqPo5Yx/
z3eGVZwvmGnFQNuDzQbXpklgXNuWCc0WDHwXfseS2ysGbcUJycFmJN7/CJxW
MJzapqwFDHz6khN0jPCJqe3Fgw8XM/AsFveZbBGCwx63Xi8TBv5z/MkRwNbk
SZ5qCxhYnj7rcR3pJ3eXv5aWGDHQL/TsVoUnAjgku+SwcS7Jx9NvA7ejAOKH
edb+MST5kfnOfHWwEDJ1p5rkGhD+q3RvmLlFANeWf7i2YgYDH5//obp4ghAq
fQsmdU9joFmq5YMVEaSeJPicTZ5C8KahHTbNQgDy0hljTfQYOIodnuNI1p9F
n4+06jBQ3p95YPFFIQwOXvt+TJvgazj9zNIlUlCduMdHX4vkv0HKwcM8EYy3
nN32nMvAvVTJtbcE/zO8e532sRmYNKPKQW0uHxafLGngMEk8nzQsWNckANub
gUuRxsA75/aljqYJYTPfqMSDwsDbu7rCDS2F4PPz+5Qx4xj4I6FLLEoi+K2i
5onGEr5/WrzjVJkQtCMNdfPGED67p3h+A+HHUNtV2XtHk/0vUs/PXiEEHmWn
ttko4u+/4zqkPzYQR2aqKTHQ13fMn4X7+XDiQs54mQID2zZFRixmCeG1B6Zd
GcbAf8qttxiWzmhh7f9Dx5775ZOak8VwtvdnyrJBOvYNcKxmpJD+q5xBp/yi
45bn27K2hkjA9vDcpNYfdHzTd0RRflMIly0dNIr66MjbXeCnnSQCBVW/U6Ff
6bhoxBpNzY1kv00nxi7/Qp7XoZEdSK4vO5sXS++mY1F9tt6lvWIY5/pw9KtP
dCTiqdvDTwA79dqibnTSsYmoa5VgEdR+HFQ69J6OB8cneCYRvaxdzD5m85aO
f6efjmgS/RFsrMB+TUf95bz6Ph3SDyx1DH/bTuzrFlTXx4jBQGnPn5JWOrYc
GuP96qQQop/EhR1poePoNo/Du1Xk8Or0lV92Ujou+OeDugCWbqgLHi+mY+Sp
xAxqgQDOar36/kFAxz105vzabgn0vh4KvM2j46tzlvBtG4lv4fivx5roeNKv
Gt4R/svzX+i/5gUdxT+sT2rvFsDwBeu6Jzyj47oZx4ZUSwSw+U+A3+cndFTc
q9z+gCWAsppTH+820DHqwaFpaMiHcbFXvaPr6ThjyYbIkYli8Fnd8G5tLR07
T0u05MS/dcy3HpMeEn8q3T6b7igDbbnC6x6ko2T24j4zDymE5k5wq6yk42lh
jOe5NRLg7VzcFltBR3uNldMG5UIwmL3RZeNdOm4q7jTzPyGEEz/2ySaX01G+
Z+DGz2ukf76fuOnbLTqOOHFQLfw6wcex66LqEjpWaupcvkHieXZl47pTN+n4
yIzVfoMpgN5xH3ibr9PxuuWU5etJPGyFSo76ReT5O99O3FHKh8sZOi9/FNAx
6NCwPT+qxKDgDva1+XR8fu/S8vq/+aC/+WliHonfL10P3mQxlPUE22zNpf97
Pj3u9pmGmdl0zFtFr4wn/ffOg8XWAxfo6KT6nTe8UwK1Fs9rH2XQMeXD8WPn
bvJBW+WTRUo6HXuX/Ag2f07w8UL5wfZzdKxLWnTF1ojkS4qe6exUOl64sHS2
XwHJly3mlX+S6ci1PjHLVVMA0ZNcFzcmkvdPKJ6Rbkfw8eHA3XMJJL5T9q85
t5Pg48bZBZ7xdEwY/JBw8DjxR9CtsnlxxD8RB4kkFkLv4qZ5CjF03D8y18Sk
mOBjRHfx8yg6UoY/Mt8XSvDRMGZ2xnGC99PRh3zYBB8JU6/vjKAjX7i43Hi2
ADILJyy1OEJHrxnd+ZPe8MGknvGUe5iObyWVM70XC0DYMXbztzCCx38AJILA
P4ofG0PpKKVEqwVulIEGZzDkUjAdn1o0ek1PFMI1o6/Kh4LoOHeqibUHqSc2
qztT1wXS0XaTwYKoKD68922fPCuAjtPfeu/kaQvgeLTo1qg9dPQvuSrO+SwE
ndzny9r86PhPez29HSqr6prLfehomtvfxiP2O0vvu532Jvbuc3A7qSCC/u+l
X7w9SX5VbO/+MEEMyZSr4eYedPwoKT86ebIQZhvkqHO3E3+R7lCP9AfPVqRl
ft1Kx68687KfbhSAj8fpmY0u5Pl7rt9rWCkE5SPRFbmb6ThzjNXS1EdCyD1/
2ObgJjq6HEr3n5QrBrPyIMnaDXTcF+iuGa1A+L3Zz9tgHR3rR8sLbYvFENrt
3j/SiY4OB1Lyno8VAHPM5qjW1XRc+nvS8Td5fCid7Mgotyd4OfEpP89ECKvN
V15KWEXHafKolTrfJNC1xWyetw3hx5tumXlWfIgNWfDQbAXxbxGLdMB8mHpm
1hqONR3j71JHF7gJofbG5PbeZXRcy+zG50Q/uDVq7nliTuIz6W9GC+DPO9pQ
jikdJ+ifeDEmTgTpI1Tjw5bSscarNHHvDiEsmDBCc+1igofXfwmM5K/Jr8KZ
JgSP1M2Xdw2TgP+6LyYjF9Bx7zWp5HGEANQC3jfIjehop7B1Jt9cAIUnWzfc
nkv4Z9zq2SJHoseuCN6dmk34Ry9s0lkLEbypeRrkNYuOv3z+dkh8ONpWo2Q2
k47B4fNXJdUKYMLgvWT2dDpqDx1y15jDhwpmyaTeqXRUttaKXP5RABvmFhQ/
nkzidUFOFLMQ+uwumuXo0nGrQ+jCsf58SNx59sUBHTp67lG4w58kAYPIU65O
2nR0c3U3mjdWCE8uRnbN0KLju2MFawOjheB1/+BBpfF0vNquvP1elgSUxIGq
cjYdRx7tlX0oJf3BN5/0MibhC+V+jZhHJP/Gbdc/Radj9qMx9BPvhSCdvumO
J5WOajajP7r48CHYevVyUw3CD31520elSIC2fbmQpU5Hk6yxYZXnhHDzEOz4
okrHhaPqjqaGisAuzbivQYWOZl4rrb6TfvLjrZnHspX/i0f0S13qgZEED3/H
vUh/ofeZm+2oSMchtb8DFERvKVNnz1Cg44ocijXFUAquuiqoOIyOY5f/RaQI
BmG4fctv2r/n/2ed+1tuDdBwz96xs3xf8MBof7dv/E8aztzYl1VeQ/SnXSV3
wQ8aUrZyeaE5YmjWPfm4/RsN1/8zwM6H7AHnkNheGtY9Tk/b2yIA/yb9qUY9
NPxnfIzUN9MrPwXyzzTc8Xdcguhb9fBHx6M/0vCf4wx9IcjXpc6b84GGe+ui
3kzSFkLRzB2vpG9piMMV5rek8yFM0Sjx+GsaWmtOux73TAA20hFmszpoqPOr
yGPBIylwipu6Ra00DPizbM+VcUL4EH0x82gLDZMs1B4oEz4pd92zaoaUvO/N
noAbZ/gQZQyDfBENp9nLcnYSPlo3Vq3wsICGhq6a8UWkn9B7Lds4jUfDZ0nF
+e9J//XtbqFy80saFh1fsfxGLR8eng69HfachmBWCkGbBJDotWLH5Kc0zHPE
YZcyBLANWPQXj4l/ZJydBpMFYMh49zDkEQ1da837n5N4DH26FTCpjoZ/vzZE
6wrg2cNjE58+pOGLv+OS44WQkeb4Iqia9r/5AgH4+usc1q4i/gw6+uWwgwAW
Lf8y83EF7X/z3AJQmYCyvXdp+M/44DU+iPviYzXLafjwHSv30isR5DduMam/
RcOlllMv9Rwg/U3OjA97Smj4dLq2S1OfAKxCB1I5N2kYFXTipzPZH331Y6ua
azT0GKFTO+qyAF5POdfnd5X4b/o91z9iAZT88cxlFhB7Nr0RPCV4Oso3dqy+
TEPLkzk1qdcFsPqqkoLPJRq2xGzrUpc1g3YE7wYth4bXNOQ6tnYi6N6Y41qZ
RUPZPUaG9hY+VBoGqHll0lB/4MifObvFcHKU2X2N8zT0mbjXc54T0Sdydd97
58h+Rj6N2dsthOm35ByPVIJPih1HdYEAfsUWNaidoeGCtllhTMI3DW5hweWJ
xP+VD8dXEf47u9BmilsCDfW0Zmadn8IHz3EcwZh4Gr4XXt62ajsfjN+9P3Yr
loZHR89wvt7MB6XK23NdT9AwX+HXS89HfOAlR3YoR9EwTJhNzS0UQI7P2tPF
x2h4YPrvcukzHgSY65puPkrD5KMOze3OIjBjf+1SCif4/Xv81k30U091xvWD
NDz8dvTdKxU8aK1LsN14gEba8J+HdpL1tQzXAYUQGt7Qd/fvuMyHg4EGBVeD
aDj/ffKXzp88sLX5vWFdIA3/cYeWELg6jaOGBdDQ0W/EuZocPnT2p5Vd2U3D
80b7Rt8bKYA7z709HP1oyE2W9k98yYfovAW03ztpWOr+9wRZCOsPjnqY50Xw
Pt6TuYnoh8lOAn+HHTQc67tfsXMUH/r0L2n/2k7DQbeVthdJf6mW+1z0ZBsN
uzl/FYEApmr+SshwpaFa4g3/Mf0CME/RXbF7Cw33m3x2tTzCh83q9sPNnGn4
4GPcaG0lCQRFh9yhbKThwLyr3ldnCuDU8Fz/1+sIX7ywajmhyIf80GfTypwI
HzErx0xs5cODr/3tUWtoaKTKEZ7ezQeZ76S0jQ401NTd9orRQ+x7s2rNdDsa
qq5oGvvQQwRqrsEqv21ouDNIP+9xFQ+mirIfPFtBw3C39UNVW/lgvvppaJY1
DaXR+hqBAqIPHv+YE2BJQ0/3q3OvkHoTaKHz0cKChrtNJ+ZUrSD9XYVtDt2M
8JXfLnMpnwf5Rvud3y2lYcxch5nvSH9Wfe0i9c5iGpr8Hbf05YNkSuOTGBPC
D+fP3ikg+uNb1veIzQtoeP3P4eqCBD6ocSYuNjCm4T/mrBXB1CSbb0Nzaf+e
b5mrBl19OZv4d8fjURcnEfuOZ7nnzKJhDqvXyaqTR/TU4/H7ZtJQ9HecmNST
+P19PKvpNOSt/+NW/10I+T0TTrKm0bBXnvNuMdEPD7xXWnZOJv486qnjuI4H
so7A3/d0afgW7g8/HieAPucLt07qEP/KqqtbjXmgxm/wc9Wm4T3mrzv37hP/
2X3Tm61FQ75/+8qKs8R/9VpyhfE0LBT6jrN9RewzXZHCY9NwmK5CwvG/9t3Z
a5fHpKHGiKP75owRQfyczJHBdBp6BX59ZHCX2Ff4qHIFlYZ3I5nGXsSeB7pf
g7gaNLxfNf366BAS3wzNWZ/VaEiKUXlAqwj6GMvfVaoS/IVfPDfuHPFfQsCF
BBUSz8TrtIBzBH+jM9a7KZP9DWkQBUvsO1qvPm8kDafUuZzp7CD4G/hSr6RI
Q/b2KxfmSIUQFDg+XDichseMxo1518mHU5+tFlwZomJ5TGx6B+lH83f494T+
pqLTyL8TgcS+1vR82wEqvtWYMCHhNbFvQ91WrZ9U1Nqe8627htj3sofV852K
aeIFy16WEf/ZcF9Wf6OidSVfM+oS8V+N5YmkXioGVQ2WnNQj9i3ZY+bRQ8WV
sy5PvFbOB+eytJ/GXVQ8VBpa73xIAIGzam8qf6Li5hXBylLSv8Tnd3tLPlBR
07zcMLKE4G8iR+fqOyqeL3+sb8XhQ3XaMsnBN1TsLNq/MKFOABLq7kT7V1QM
6/pyLHOI4C/u3MqJ7VT0aX6oSN1A8ndkjcJXORW5GpHClPvEf4e77tbIqJg+
MvSkJ4PY18/amyKh4hvDZiWXHh44+1tM9xJR8f2m30dFQTzIu2Q5YoyAihMT
uVwdfdJfia2lRc1UjKuM2qV7TARL1VaWOLykomrPtKrm7TyIMbeN/fqMipN/
V0ZqxPJBEGS3PaWRin430skOBKBT6LBo4WMqKrb56Bdr82FX6xqqrJ6KG3pV
zR+TfuMude3HQ7VUrB/UP1nN5cPI5esfTnxIxSnfywrOc4WwJmxjeg1ScZen
ydDWsTzIvOG817OS+m8/+OH1FhuVChLPfwbOhTCPvXVS0R0qHn7B7Bh7kwfh
q9wG7G9TsWmb5pgNIITGI+7NvaVUfL50wHvNVAGwynYUnimm4uwRf7/A88G9
0ytiwQ0q/q22h4J5cEPLx1laREU77duhy0byYXCN39xDhVR0Tp3iM0gVgHXU
7jETr5D4vgw84Ev4O/Ge/6uHeVTcqaL7feEw0g907723I5eKJqq0Gfakv9DX
DUoanU3FHcu0RmeqEr7cEOxz9QIVgye+vnfyPMFjXKiFfQYVE+59tn03geCt
Oozbm0ZF48OXxgZRhbCp79DX5LNUrDBYMb1Mgw+Xph15Mj+FiiXzk01sSX/f
syUiR5JExWrbtKcdlTxYnHj8wMHTVGR1bTc+Tfgiui7KUfsUFRf7Zab1EL3E
+3Vi+sM4KmbtFU6nKZP+dVbciB0x/93vuz1eqhxNxeVR+2Zs/c2D8tSEksLj
VDQ9eWW3hOiHEY2JsXYRVBRvt1ty04APdsPObP8STsWQfwYA+JA2L3VR8iES
/813dj+q4cNbr3PU+WFU3M/vip02mw9zMtI/ikOo+Lt9unJxPQ8Ovcx4GLaf
itPECy/upPPhsVJW+oR9VNROCi4NDxAAwyR774MAKqrfWus1J60Ztu3KtfHY
Q8Wh8/dcLpqK4Gp23iTlXVQcVjWiwjuNB/2C/IECH4KXv+OaM/iwbExh8ypv
glfGI/2G3QJIgKLCnh1UXBoekrfnLuHPvdcjktypeIvDnM0pIvmdf9PZ2I2K
qYk0qtUtkr+ykrliVyoqRzRqTwngQdW4sjFhW6g4SO8/Kp8oBBXL8ldaziSf
JmWcvkn0wrqQu/eqN1Cx4b7H5Pp7AsguqkhyX0fFjx2a/T9b+NDVXukzyomK
Z5RNfDwJH5swqi0KVhM+cXLMcL4mgMiVD7mr7Kl4ueL6a/YxHjQdqv3abUvF
+UUWPTvvCUGrpP5J4kqS37En2q8T+3e+a8gxWk7Fv9NxC2t5UMZtPCCyJPH9
PmPVBS4PFByeOR6wIHicptbmyuPBqmMvpmuZUXFf4r2dP8j1srFFtMalJH/f
Zo5LiuHDztQTv0MWU1H6tXlK3io+9GvveDvFhIpH0k7P060TQ2SB+XP+fCr+
oF1MfkD0D23ehPIIIyrafo/73XCY9Av3B7JmzyV4nffNr3FBMxhai060GlJx
TVDt5e85xH8vSgNOGlDRXt/xaclD0g9tOu28aAb13/MQ2Su/ZR+mEb6tmnP7
zWeyP7+VM1OnULFAHvgJ1xB7vk9mWOpRcb3hPvUdK3gQGT5iqFeHiq11cXOf
Cok9Km3vsrSpmJ3pYv5ZwIPspIoXdlpUTHliMF+/SwCzNc/dGeRS0WiS9/K4
h3zAvH3ZBWwq8r/3ZCouIXg2XBO7gUnFwH8ORIk9dwwCR9KpeJoVVTiL8PtO
izFbSikE33Eax0N/C6C/8Z2l2zgqWnwKKawk/Bi5rsZgnBoV265OJozGA1pb
FlE+VFxW4hol0edBjvfBYb6jqfj3abUyHsz5uvEDexTJZ02D30aRxJ4w46Z6
RSruPjXzAsQLwG4k9d4+BYL3JV5P00n9kJ3qzpk0jIpWm7voUST/drIb417+
pqDWp5wNp4eIf7Lz9x0eoGB0a3DLi8JmiJxx3GXmTwp+WzA51NtDAPSybdbS
7xR03j3viWZSM+TCUsMT3yiYY9d3VW0lsaeBw57fS8H3a86OVaoi9qz5MfxN
NwV/xoUGugQQ/8iaOxM/U/BkLOvkOpKfMo8bzaYfKVjN/KYWQvTtzu64iq73
FNyrYByucJnkY7D3pfNvKfhJfiXxMNHDUQpW8StfU3DprQkekpfNwIjT2d/f
TsGYifYeuc+IPfQh17xWCipQpWPC5whhzgXpcqcWCp67+uOXyXoe4NTy2QpS
Ckrj+Y4xhJ/sipM5N0QUHPPw/b4ligTPi/xHuAgoOPENa8oAWe+sXfVpDI+C
mvtdursfN8NPO33+nZcU5C3LGj55IeFH0chKz+eUf+PPcHuVR39KwU2Kfycw
+ZD7serUw8cU1E5vmeakT/hr3/lg/0cUdDd/N12B6Gn8E7xtQh0FE38/5N01
J/ZEr1359CEFs6oanYP3Ens05sw9UE3BrsyoxMk0Afikq42fVkX5398H8uCX
7kdFYQUFwb7mh+vCZoi+Vv/52F0KOq4rnfLYntizIFcwp5yCpg/sDZa18CC3
Oryq7RYFr/m8Ukk7S+JlsyU/voSC7IrVXRNbmgF5C08vvknBf8bru5rBzoUR
2nmNxHNP96bAozxoedfrdvYqBcs6NuYlk3iUUaev3VVAQW9X6bwXPjyIh+3W
y/IpOBB1Zd9xZR54+qQv5ORRUFIVo5BO9IxpavP0nhyy/vvnRol8YD8co1V3
kcTvs5LpuSEe9HZZjDt/gYKhb9U9PjU1wxNOmEJABgUteE+zPOpJfK1Kv1mn
U3DC0mVPxiQ2w8GAT281zxF8TtYrntzTDOsydcVfUygYWDLt2FE3Hhg83vyk
IZmCShY3noxr48Go78n3LyRSMHvh1l0vI3nQNvHp9X0JFAzS/WsxH8pXKWXb
xFOw5iGDpv2zGU6HLEmeGEfBgDJTh8xFBJ+X9kX+OEHBDl/F71sUBGDxsij4
aRQFR+Z98919gQfjf7/ZmXOc5EPn34EuHvRN1doSEkHB56FXFGdfb4ZnTuvs
7Y9QMMz17wRyM1wOjzfTO0zB8LOb1kcj0R9X6+YOhFGw1vdSduMgDzaI/ui9
DKVgZrKl5YVcHsxWnM+6HEz59/uMiuFulYNBFLxR65FRt54PHc6XB9cEUnCP
mrqzQzgP7kW1dk0NoCDVexNJOT4klzDb/+z+b/9+rfbNPD8KRs3qCLi+gAdW
Y6JrC3wo6C8aMyKa6K8J8/F2uDd536Un443dmqHfrf/KOk8KFid+v9dv2Qwv
4w3Pz/Ag+VUyJLhe1wQFd73iFbZTsPF+x4tLhs0Q8TYrXLSVgqWRmu0Fvs2w
mSIOuOZC8LQx60OIAQ+Mlmp4HNtMwWXBapGbPhE9unPF+k2bCL7aB1WNA3nw
9syRFYYbKHhqvS1Fn0X4v/rOopHrKGik7687fC4Pzn7+MlPmSEE1TR/lnQ95
sIetr128moKzTu3LcT3XDCss3SjR9hRMeSkOMSX6QMc/TdFlFQWbS+4fbHrJ
g4HzTd/n2hA+ex0yr6qe6JtHKh9Gr6D87/+D4EHRN3NpqxUFx4ewdIqcCT9r
H3h6axkFP08zn3a8tRlcbUuqYs0pGCFkU01VeLAg+OPNbaYUPBSrH691qxnG
5U7Knb+UgqdHRr76ZN4MH547p4xdTPhv0JdUzGZ4MJAU/WohBf/+9Q6juRnS
pjSG3plPQdleykF6dDPsdVT0O2VEwbx4DQU9WTPYHl7s6jGXgiz+pkRxNQ/0
CgNXL5pNwQq3RIfqtmb4I7hqoTGLguuta8K3ZvBAqPDG6N0Mkk+Jt6pKr/Ph
hoHm1Pv6FJz+2d9qRQIPTmxay0maSvDT6BeyiOSXW+RJVe/JxJ5/Bsr5YFJc
+2epLuHHk2809xH8UeW/e2g6FIzV7n1iGdkMWrVjR1RMoODmYw2jndc1g/5V
Tfp2TZIPl1KbxxG+NUqaOUWFS8GjiX8/ODaDaeiShTdZJN9Vhv0dKQKbbats
NjAI3rp+SyYRvbVu+ZYtQ1RiX6bHygYbHmyb5bc7T4OCc9I+LlSlEX3JOHhk
lToF/bxSz1at5cH+33FJ31QJ/7GrL6SKm+Ho6/OX0lUIXiQX596a3gwnn1y9
ba5MQddKk/HOxF9niysaPihR0Jyvb1KjTurpuUZpwgjCR6/iErW9m+FauOzz
/OEUrFKpsVQn+vqO56ch+R8NzB16fyNeiQc1doMakYMaOHD/6tNVXs3w3EhV
d+YvDZxz54K2ZEIzSMaPN+b90ECbt5Zey9Kb4c2IGcsP9Gmgq2rnoTCi13o6
F23S+aqBfek7uY90BTDw0sa3oUfjXzyNvON8aE+XBopKbjeduscHjSyfBOYn
Dcx3SlvWsakZxkcdyK78oIHTCpbqMfV4MGVXbKnHOw18MyvId4jUyzlr0+tU
32igvc/fL2g8WLK4UFTSoYF/q79WRTMsn3Svc1ObBkaWJM88l9wMjipPBofL
Nf71l8sXidoVqQY+CJEyQrT44C3q1HYQa6CST45P91YhBFb9mvNDoIFnvTxN
C3Ka4XCeimUmT+N/82vNEHOSs96ySQMnhnMcW0ub4Uygvven5xp4Ju6T3mo2
D7KcTQ4kPdXAC+6fZ332aYZC85UnTZ5ooIP3GXnc2WYo+39EXXk8Vd/XdufR
HUQDJSKpNFMkdklFkagkJKFQ0aBBUqlU5jRJijQYMjWYK+6SlMgdEZVKIaGB
ZCjDu69fb98/78dxzt5rPc+z1jpn77WnOl5vLOeDo0PzRi0kQyW87fdDnvFh
qdfzH9U4Xr7sPVQ66ykfdi7Kbj1jivH9LrSmtoQPtiML2GXoY9mVz0cEfDDf
plg85mA1+ppxp1+7iA/LV638fJOA9etCIevlQz64BKRtqcD1Ienwiwl+BXzw
8e6eo56A6ye3+lmqeXx4f/lc/qHP1Wic5ZclJdl8OOk81TMkS4a0Z/ev9brP
B1X58j6sl7PGMLZx7/IB/WYXvqjC+fjQWP+8DD60/jQPHL4kQ8uadcM2pfFh
Q3bF7E5nGVrz0vAaOZX/dz8qrqezLbLSk/gwUv4bVKNtcQ5gd4sP93XlDq5B
e457SfsT+bD/wliyPacGBXr5NyUm8CFKSY5oGTpjE9Kz4hofdJfHt22cgOvJ
+bH071f4cPjuXb8ynC/GT0hVjbnMh/i5LibXZ9SgVHKBnsklPui154+KGJah
7Pbnpk3nMR53KFFHd1SjYumrNeHReLzb/D1n3pGhisLPbnOj+MD/8PYoC/Oj
JrF3X304H0RLLUcxadVo2jT36NRQPmiNCE4NCsoWph88wwfFVxpq44/JUO2i
hc+Xn8Lz2cycbSWoRnrPkj6qnOSDysiGo2p0woY/1BTEh9kjCRj2Z13guJyj
fLDm7W4u1pQhPbdW/ZOBfKhuttqtgfXyRPvaNXYB2H5vnUtZuD6p2yfYoenP
BzPHhVFsjLcZQ9PO/NjPBxxsSvsx3k6cibkp8ONDZrh8gZkM1fGIxVF7+LC3
pnv+zhU4P4jzqd+0iw/15D/p6RQZCtaq79bzwXwsS/z2/BXmc4Y5b2A7H+TV
eXGyFM2af296pRfGpzx8KdegYIHairhtfLipmePu34avtzjj5u3Bh5+zPoPD
DymaLe06YujGhzidcMWL23H8cHK5QnPlg+uumRpvAnF+1/Qip3YTH543HT3h
dQzHd18DcZITH5iut6vfmePrexPb923E47NL41Rh/L4NYtPMN2D+zIg0fVYq
Q3OZ/pNGrcf+Ndo2ThnnE2cufDL5aMeH8hwdn7zl+PrxNhvvr+HD4v67E3ec
wvqQ/HBf0Go+mKqqG/VoVqOQWTrRNlZ8WB1RNK2mTIbeFZxLV1/Jh8Kig1PO
DsmQvtngs68r+DCv5YP3buzP0Eqvj4+XYXtOvjLBah2+fl31YPhSPhA6z2fl
10mR/js0zmkJ5rPtF9m8ASkK80zXn4b44PmNMeeOgwx9+DF6Tf8ijB9nu/yS
9mo0P+DEjvKFfGg3UCPLCmQonPTt9GVDPggPUxPO9uLrIzbe3DafD2MOqVd9
3yND80eXFRnoY/+fZf628KxGEddn15PnYv6P07PMYslQo+61btksPrBmno/Y
dViK5j+g8W7NwP5ssOrXwPlEhLHf9L3T+VBmkqZziF2NPj59t3zJVHz/kQQE
x+/VK914UzCeI1eOt8T5WNSr3CPvtbFeXL6t8iZEij65al7JmoTHq1+8fd9u
GTJsi8g5osGHt3dUaho+S1GUX5/ISp0PHtOMNe9gfzcNuLerjeeDH8PU+eBo
GVp4WkRtH4fH86uPFMCrQdFc40kPx/BBf0C6hB2O40VsskmoCh8M89+bvfbH
109S2ugwCvvL9ui0Cbj+iE4/sm8Knw/hPuaX6AtlqEX/y9keDh8W9SQMnXsi
RcbF69LL2Fh/5+74UYTtGb0Cnl1kYvyOvKDG14unf3Sn84FB9uL+6paiRY6X
B+dS+TA0NPnxE5yfnP9EHEckYz3Kmho2I0mKWnf66ksIOJ7csPNWCpUhk556
m8RhHiy48XW7qY8MPV04IXzxIA829CuroxvVOD9xffbhNw+8gixXO+H8v7r0
FuF4Hw8Wj06THVbA+R/98yLNHh5YWYYxbuF41mQ1zb/kJw+G3u/BjMTx/ZxP
9pZOHsx+s11WSpah7pp73wjfeUBfNDkuoFmKAlW7p97s4MEB1zuTQjC+yJsX
bDVr40GuVInPxfiLuBWQ+PEzDygptlQh1m/l1qI3J5p5UL0qtSEuVYau6hHG
aH3iQaTKgTD7XzKcD5rblX7AvwdfHBvE+EzLPRPp/o4HO3rLLsZie8z9XVFO
esuDdfLtGSdk6KEph3y7ngd39EOf5lKrkdlJW2T+igday5YPmLRLUcXziwFN
1TxotjnTMX1AhuzYdbnBUh4sPa2OKxYZql+j1qkt5kHA9icTa2fKkOslF72y
Kh68K04bpZaO7V1/w3NrJQ8eSe7ijEyGdqs336S84IGaOPSCgoM8/9Z9l/SM
B2YOQU42WjIUlLJj3PKnPHiiGnLK75cU0Tuy1rWU8KA+Qb5gRIqiZ3edPS3g
wcRFYbGrsX6M3W9QqVPEA1VqZHt5vhQlFvpTnz/kgXL8rQcxGB+6Q4+WeBbw
4KP89do1KbpnNhxIy+PBfG6WdUSRFC04Y1aQks2DjstEtmyWDBVXnvq54j4P
kmJnp+Vqy9By3ouZrVk8EA45CVRZ8nqHvT0kg/fvfZX9FZsk3TQevF/TNrsK
+/9dw/kP5Sk8iDHW6R1lLkPbJtWqeSfxoMGEO9latxp92zZuA+MWD64qyhcI
ytCBdOfzdxJ5IP515V4rzreHvl+vskzgAXNkw7QMndb/RG+7yoNz26eop62U
Ic4hHfOwKzy40hhfeNsX5yNF3semXebBvFXvTSJEOJ8iZj6suMiD1Xfy3zUv
luL68sev7ed54FmjENnpJ0V64fPmsKJ5oNuYMNq0SoZyRAd2pkfyIPPOqjqD
e5g/yg9TVoVj/8wT6m8eg/ngMPixPQTjs8mpYY+DFFnFL1aPOM2DvgfzMWWk
SNZ4cqNeMA96vjKjzPJlyFHn+cWXxzGednzJfYvzi4/bmeKdx3gQ5JmUehDn
P9vvWrMUj/AgdpyT+bTNMtT1M3p5ZgC2V2roYpKVFAUYVh+39udB0+M2uYIi
4pExRV/38+DzKPuB6W1Yf0sc+yL98N+J8jdW1UiJmjBv5h4ePDSSV5jVKG5l
o6/QlweMkQV7UjTprHaa704emBpJJz6dgfkg82zmbMf4mvOqx8dShuaMTde4
68mDEHjaQ0ysRgP3y3c6buWB0ZopiwixUvRsVUsBxZ0H8rcR08sx/ppJlPuu
eD6GaXraNlLkeEzT1tmFB8ct5BuMqpH2OBRPc+ZB+erKYeMsKfr+wPnLg408
GFk+g+350CrAwGUDD/weRfWvV8XxueXyccZ6HrTbqRR8midFq4Nyq3LseLBi
VKTzBD7Gt6psnOsaHlxLfuFGwvr1MfvHVtZq3t/+QBKUac15kLeKBxJUk3kW
64n/5+lDWyx5cOHYY+fPijJkdtxypeIKHny7EJXswJEitppnTIE5xv8UeUaK
85mc4I/uZjwYaeeQh/mz+uZM7mIeGCznoOytUrS9VRDw0ATz45g9IeACjocn
Gp5tNebBJiGZRpwjRcNqf5T4RtjflCgLNxwPKnLHbn48nwdrl/H6myfJ0EWb
+eme+jwYWU60QYpcvqztVZqL+ZO21A/eSpHuyT1Li2fxwLDjFME8Woq6xp89
6z2DB2esjUAd6+HjvIw3ytN58Guv6scwJ8yHNRVTQBf/dvR9NUcgRbZtn/12
6GA8jq7b44L1YnwwBUZr84C4aPqyoj8S1DJBi/1Ek/e3/44M3ctf7OAzEduj
/8soGc5/Amxdbo+dwINZ3X4HD3+RIfP2wz9KVXmQPHXUTEYE5tupK4t2jf3P
H3Xq+SGqo3lQcW5Iw3ecDN0qqK4uG8WDcaYrD6xOlSJfuy6NPXyMv1ynUfsx
nww7uD7juTygcZvWNJ2SIuLpGYXP2VhfL9r1FWG9eTlxFcWPyQNt8y9u729K
UUyhl606nQfk3C3F+c8kyHXt6fgXFIz/y/R8leVSNO3rrS/7SJhvZ+5qlKvL
0K/TJQYaBB7otTkGzMD8O7qkmHR5kAuHvkv81GVSNGp//9WvfVwwNl+9JbtY
ilJT9fXNu7kwT97+AT9/0dtdL+O+c+Gjv+PhsDVSJOame3S2ceFJTE1F6BUZ
2rq0ZWBFCxe416yeBuRK0e8DmpcSGrmgmTchPUVZhqLSnGf8esuFhTibnMTC
fHt3uWxVHReumuniFF6K8vmyTTdl3H/x2WoZp6dPyIWpzw3rpyRK0Qd/yyib
Ci6MLNfB+ci+jGCd5DIuaP96u22zixQxPgiKB4ALgctNFs4qlKKEUX/s1z7m
wikN+Q5KKZq7Yv73O/lcOApiq5CXUvQ8YM8ZhWwuPCjvH1WC+eKclTFxQxae
/3ubyMu+UvSj8XN+5h0urAbqmg8XpeiUitYachIXlq/8am2O758VqfInLZEL
KuvM+vUqJKiOQk+2vcaFX7WPxlu4Yz06+ntN32UuxLCnH4a1WE97Ov4kXOD+
7RcnRfa+75OXneVCltb7tqhSKTrWIrHtCOPCgtAlrs1ibH+XpwPnT2N7BbI6
DO9KkbQ2L8XoBBdwcRm+I0yKBlbfsftwhAvKD+O3pbhJkc7zq4OnD3FBd/iX
eybmxxoUlTpjPxc65m2RqOjK0KH8oLXVu7E/v7Yua/4mQTdn+Q0F7OSC/qcX
8eswvl+mbL2j6cWF9MrR4RMvSVHPRId15e5cuOLx8/WsE1KkEbty2HczF/ZM
y9hPzJailTyTNBUn7r/3H/tCZq1/bM/9F88TFCYpuNtxgVKWutYkXYae+yun
M1ZzwUe2+G4ntv+PH1T7e5YYT2UZ5tZkKVL17lfYsIwLlpNZIlPMR/PG9vTB
xVwQxSrYJe7FfNn4zv72Ii6cKJdv4JaiWImYsMqQCxN15CvYpeiJZWlG5zwu
tE6VLzCWoo6S3A2xs7gQnFIyGCmRIpWFqUQ0nQv141PyyDdlyPRBXGazDhcM
Lqkaz0uTIq9pkQ4Rk7ggf/th9VSKzt88RpqnzoXKn826vtiej1X3ZtWP40JJ
iIVXyTIpajnvsTFIhQs5USfsj2pLEY+1gTyFz4Xj2XF1b/D9Fp60vFvF5kK0
s7xBjwS5/zF23EfnwnfnmblztuF8zW8mRY2M55+yvrdhMa7/2zXulQxzQMeQ
F3LuBca7+ygnrz8caDCTK6gUMd9SqNxeDqwcaUAnQfrr+u7ldnEgNl5xeNQj
rJcv25ycv3FAWZbM3LxChkLMG6ikNg6ULV3vfRbHi/uPRffvNHPAbJqcwVL0
Wv+J85pGDhgl1CZMwvgmZ+bQet9yIIch/wIhRTMnpzyIr+PAvKBTA79apMgh
/som82oOTFUOv9mG8XxCJYLeLuJA0Ur5Cx8Zyog8mn2ukgMV7zNPnlXB8YKy
x8XwOQccRnOlNrheHz7iznj/hAMjn3Oxfun2rM85VcyBaEX5Bi4JsvO12Kz3
kPN3f7UMBbYsZMpyORCaue3Slo8SlOwyI/fQfQ4832U07vlKrD+1E101MjmQ
RHoNn69K0O/VSqznqRzI6v7kayyTIO3n5Dyf2xz4xRbs42F+WaNeV+VEzt9+
fjifyv/CenSV889fibPe5m25zIHb5AWOy5skqCJFuIV+gQOVb4zUVbolqHti
CftuFL7+gQk6gvl2guPe2xvKgT+vk4+7fJIg3iD54+JTHPAsvq/WOxHjvz35
ZWgQB377Cw657MT8f22RLz3MgWe7Yx5MxvHxYXnbDbWDHEiYb2Pdh8dnkR8R
4bGXA/c9HOpJCVJUmzTzYKYPBwR38o5b4flvvSje0uOF7VGmlPjwqBR1n9hr
hTzw/OWvG3F8PLFHeUHIZg5sCa9cGIn1gueapylx5MB3vyM6eg/xeFY7sFXt
ObBvwgGC/Tk8HpPfPW62HOBoOo8t3YjHM/1aY7oVB94Hz7Ovm4rHo2r6snsF
B5ZvWSQwxflBLf1DnslSbN+aWSE+z6XIo/f4jdOmHFgrT0faJKirWStCZMSB
ud9v+t88JkVB1WUHxhpw4BvP6FTVbynilHpu2TIb//+eKOt7OB5fu8+wSpvO
gQOXbBo7R+F4lZg+/6cOBzyOGM44gflVEGWtuWgSB2xzwzidJBlaceQ769QE
DnxJX+zcjbOY2h3neqrGciD77ZzC6xp4PI7zGkcrc2BFzMcjqZiPXRY1lZu5
HNjcHz7hzbAEBS04mJfK5ADXN6vxlCIej864G50UDpicbektaJSga8qPwhcS
OJC2Rue9pxEeD2nTgZMDitC5Zv3rTxF4PJ1Dri97FWFwwuub0aulaPmHxFUq
PxVBwd/ZoAjbp1poNt/lmyIU/D7h9LJKgtyKmjRSvijC0kgd1cKFWO/ST7N+
NCnCDNHlWwVLpOhonG6P4QdFyHJEb3N34HwrtOLD8TeK0GT6qWiFSILiDu6s
rKhVhPD1sWF3cXycuo2TN0qqCM/bppYdxXpdsO5eonOVIkxrmHa/FOvt8qV2
4UnlijASbrF+Vs/p3v+tVBHOyD8/lOLxaMS4LhAowr1Tz7qi5OPhGK4KeqgI
vLjz54qwvY4O1hu8yFUEwpPLcz1aJYjdcVhD6b4ijCxHwPVU3OsJLKcMRdjs
Iu+IjPn7QvDrVooibF+lsVC8VYLy8rd86LipCDqaJaMv75ci82RSpUECng/D
ZLgB11vSi0m5R68oQvBbz8e9+P6uJ1ckPr+oCKa3D8/vuS1B3/Z8CeNFK8Kk
a/k+5z5LUKBr+P6N4Yowsjw2RoJYNjNcb57+z75xJqKV7ccVYd8OeQcNPB69
PQb6RxT/rq+TojzVURpH/BXh7q5q1Z8z8XgYucxnfoow0m4F40Xaa/+Ls0sR
chbLfjrrSpFrS9/7DdsVoZp0u+gs1o9v1XEViVsVYXzCwVXnovB4ShflfnFV
hNkZuzbsVpai6z2XHpxwVoS+k8aPrAcl6MnU73fVHBRhrrblAvZlnE86W2Tm
rFWEwrfTOZuw3jCib6RZ22D78lZcOoX1Ra/0d0rLSkUIS89wu20rQWt61iYd
W64IZgdepRa3SJDf1MybY80UQTp51+5DBRIU40xNvG+iCI8Sf0/Y1CdBD89u
jl9ppPgv/jc8KYj7pK8IJw9pqV3B/FXo4ccGzlYE+dtptSdYD6fuuKSipwj+
TnVad89L0Arnp+ezpijC57nMT/24Pth+dkL0Ci1F+OiatXtOjgRFPTkQ+UEd
42+dMaYAjh+/RGGHVBVh+FL2CT0Jxpfu1BCl0Yp/+39IUZ/TiVPpfEXQ3zZR
8L5QgtTOvjlhrqgIZy/8zqBflyDTJ/pBDXTFv/2XpMjtV+SRA2RFaF/onRmG
7XVK93MAV0ERWFu7jsRo4fzHabF/6h823DKRvwDC+UnUlf1LetngdmZDjRL2
x/eSrr2vu9j/3tco/Vq12+8bGxQbKjfNTZag+bpJPuw2NmwcSL1o9F2CNjoN
bU9qZsN+tcfCWAUpCoza4GXayP7b30+CEkvubX31lg0j7T/8JKi0m+G+u44N
AXJz3sT+nOLuyqhmQ03O5RLuWQliOD3edFPE/ru+A/szSsXJuJINLp5WClPX
YH+W+DpUP2PDxwYHm2Scv/p1P1/v84QNxu5Ei+M4X4yZormWWsyGyd3HqhRG
Y/11DFhzvZANrjpV2/Zsxv6MlFkb5rLhPb2F9+SUBCmU6K2S3GNDxHXZGXt/
CdLqPmWxPYMNjYPeIimOT8unvF9GSmXDI215h1vsT0fDpddusWG56iXD80ES
FBl5brHBdTbM//BAYoj5cw/aTIRxbOgOOLbBBetv9c+lxp4xbLCyMbAqPC5B
vTrxhgrn2ZBldkHijPVI1bHH4EokGxKbpp9yxvY1ibSZNzeUDdQZxglrLTGf
IXV2ZTAbdsjbkeRKUPBPwkyPIDZkfEh/4Yzr6xQdp+mDh9nw/NT0Tjd7KarY
mKMbc5ANOov3D3rg532LUNSZ5ceG1U70wKfmUsSHbVrlvmzINZV/4ML5zk+B
xpbtbPhy4aLtVW0JctAZp/57Kxuqbddq3MfjO7xxr9qFLWxYaWc1tsYRx7uI
yrF6m9h/+11ifgq0R5c5sOFxXsevPpIUNXcdGeWyjg1Hpwe4P1wqQXSdV7xe
Gza8i7Ib8tqL/blxNid6FRtCLMscb7+WIJuIUNbUFWyI1XDXuC6UoD7vy9Pq
zNhgsmTBpcvNGD8rkizPmLLBqK1SeBrHG4vJ2V7zF+LnyZcXZEvQD2LJmWYD
Nnzd+qPUfZsExX4QJl+cw4bT8naP+O+Li9+WLZ3BBrpxucJ4rPetV9uaunTZ
0DTlopX1YQmKPtRHuqnNhuRZxbsn4usNN1C1bDXYoC9ffpslQR/0lc0UxrNB
/f0PI6q3BIUoTdpydwy+38aJq8NdJWjOj1lBLqPYcEX9ztdGEwl6XWVyXZHL
hsOe6WsfYn6fSF9V/JjJhpizQddWeUrQtNCNDTuobJAZb7FQeSpB0m2eA6pE
NqQRD+ISC9fD5vvVKgZZcPVsQCfdFtdzk04uPNTPgqU6vqM+YHtXDEdv1P3F
ggmBGbEpd7CeNST4v/rBgl7pivwqHP/GP8q4fLqDBRsK9/vRgiXoaezDPINW
1r94sPNAeU3TJxZ0zf9+rWqzBCmvq+2+8J4Fp026pl0ZI0GP5zSNWvqGBRym
Yko51nsPbtfcrloWPBi8Lp1WhOPX12HbG1IWiFT761/i+eZWKO5ZI2TBgqW9
ey9HSJBLqlr08AsWpC+YYHwP84V6eurdrDIWtNipueuslKAs9wXCTSUsGKXr
YvkL56f2S5Z9ZRfh5++QZ6wSNKS+lv24gAUnB/wXaeP7Jw+4Tt+Rw4KR5TR6
ErT6te9K1XsssAT2n0npmE/5gd4v0ln/9CTxUliIfwoLnl7xXhL8WYws/GJT
ptzCfx9p2Izxsib5WW0CC64f//xpEMeD2Jk5zafiWNAk/1xbifHCfkI2iPnv
d+sXkVbTORZU53Y7+r7CeHneYHYhEtv74dWMfUkSZJTUvsUslAVO9UEWnSUS
9PFEf1BnMAsYmm6llN0SFOZKS0wMYkHIsfIHOxdK0FxTFYFNIAv+RK4ruDoL
1wtqWu+GDrLgYV1+6kccv0/0zx7M9GNB9p/m6z54vtNemY7ftIv1jz/SHCtj
9g4WPHt7zS3PDvPzvKPjo20smPzmwFTLOTge7fY6tN2NBa/jzZKkOP94aX0g
dpwLC65I7LUnhknQvunB+eUbWRD+KlrprZcEjWecrz24ngXDs3OzeFgvnrZc
/6Vjy4I9lq7O4mKMl6eZyrVWLOhY43RK5xbGy81H805ZsEBt0jTq4TYxenzs
hZ2+Oetf/eSx6dWeT4gF0UvPjZmmhPFi3Bx93pgFdif9nx3H888Z+/PukgUs
WP+0M6dHWYI29SiIfsxl/ePP9pXFM8xmsuDgkVu1sQcl6EDC4YgLU1kQNU7e
4VGCTnYZtjdpYzzKt6PhfDN6eY/lfA0W6OkwVNimON+My049o8aCs7M27l2F
9e3Ot920+tEsaNOWr/jE+ZTZzG3TlFjQqF8B/dewfsW0Pz2siPmUzQ4T4nxB
2JaqVUVnAXfizWbKCwl6Y7rthDqZBVtHB+nc8cB4OK/VuGuYCZHyz8/YP90t
H1DJbyaM8ZxAyRwQIwXjhASlHiYkJbzpqFwlQYpnnQbdO5lQx3bVPIb5o/pp
rHNuBxME8u3g38RIZ0HtQ2orE1oSK8pWLMf4CL8wzuETE1J4zDDbFClC79f4
33nHBFsN/claWK+s5nFe/a5ngs1Z2xuiUVivz1QaWNUw4c0VIXIg4XrmTcjF
eDETdL3NGoMEYrR31vKf3yqZMOypkrhgqgQdPUmyW/ycCavfbYq3cZCg8Fdw
79wT5t9+n5gP049yPxUxYcpDOq/4ogTdPmbsq1/IhBKHH3ZcRQm6L+t7eSqH
Cevexgts7ktQ8ZS86a/uMiGnVFel1Rjr02G/MN10fL+b32+oMSTolWj2l0PJ
TDh948JW+4kS1KT1bUXlDSY87N1x9l63GP04mJ48Pp75D38DlV4U31gmjON0
uV7bhfMBDR0PwQUmZAwRx7xUk6DR+z494Z3F9two38ArQZPKEzXdwphQ+fsr
+dOwGM0a7xKUfYoJh22GLbbgfGnRbrX35ONMKJYvf52J48fTOhP7QCYc+/m4
Tn+tBK0fG3Mt5SAT6hmW692bxMht59o/fXuZcI3vd8hgvAT5As9xpS8T/M8b
qtRi/B5WFhZc9Wb+w1uIV/iYrx5MyFu0OeojVYIuPrY4YOrKBHq3RsAungTd
4FFrzjoxgb3l6NjxRKx/HqXzGu2ZYL7Itf0wzu8fFgSdn2vHhMX59jhFFaNn
bNPOk9ZMkHdviZsuQTLXPzY1FkzYlJDRadMnRh9yCrJ0zJkQiNX8TrUYddAP
KPojJiy3/TW1UFeC+p3n7XyxkAlKTVVRHtge1Ps/KlTnM6Fi5Ya4EqzPSpSs
qTvnMCHKZnvXwXYxmrhxR0iRHhNCvA4t2dsiRnqZup85ukzQHmgyq64SI0NC
yzJXLexP2rf9C3D8Wbb+1u376kwYNJ7zY5gvQXZ3XEkkVSYwDO/rK+B45jI4
wW2dCrbX+7B3sRjfO2zfQBKPCW7F+c+M5kuQf1LsxF4WEzZs9z54BuF8pn/9
UQsaE5Z19GAEYj6cr/j+hYj/3zz0QQ62b/k0tCV8iAGLBiyXpH4Ro+2l2VK9
3wyQ7fFIbNDC9YuzrrnwFwNURhpuSlBG97XcXZ2Mf/q5OpI/hf+VAaVxz15/
nIX1f/Lp2AetDNifwP+hhfXnfPFvxromBqz4+CqTHY3zoQ27Dv96z4Cxs1wD
prBxPfz9U0fMG3x9u3thy3Mx8g9xcDF8xYBlteSjBGwfVc0qUb2UAafDzLud
KrEeFi5ZcljI+IcHF7u8B+MrGKBefqOcpYLzzfZp2sVlDOgerPb/ooPxcfL6
pc0lDFCVf47B8zEbr0wjFDEgmM85vEUB8yUnxP9mAQN0puzcmHlNjE5bD35Z
msMAXAzUK5tJkG7LHqfmuwwYH6/6YC7Wj4qjLS9PpzNAK25wYbU91u8xTqa6
KQyYaRs9vRnPh3NPdPfFTQa8O5D8k1srRvcszDV3JDD+8deuseA8O44B79cb
vg42wvp2aAY56xIDRo4jwPE0RunmfptzDJhjLu9IL0YL0kd//hHBgIqqjEdW
iWJUtzTc4XwIA66sy1iWFi9GAW+HX8wLZoBeWJrNi2U43uzfZ1xzjAEbbrzw
ysL3K1b8knHgMAPk2WRonBi5Jm9SH3uQAQVjX6canxMjIpKeLdzLgPzcS7QG
iRjdfrWc4OTLgPKCMUe4DWK0bPejvQPe/9m7hT67KX4rA+6PX1fYVy5GITdu
r0dbGLB+ynz79Zgv0xaOe/7BmQETG+bTLDHeXkojDU84YH+snGKW8VqMfHcQ
07TWMeC7Xu31YzMkiEc+qFZmw4AU+ecfVQl6cK09YtsqBnxWdalLxHxYa+A6
RFvBgI/H5DuuxKi7qnrXHTPsz70Xrm7E8Stmm2XjSlP8PH/DeTNCMJ+Gi+w6
jBgw6SHnkUK6GL2+PPdppAEDenG1pJkrRoGzUwxmzWGAMHHrc79pEqT+Qi1F
rMcAOmt3uzeOP7AleuxeXQbcwFcD5t+W3+SwUdoMMB5Mfk2dK0HEC4f+5Exk
APPhncd6Z7G9pn/baa+G8eK+8+IQ9sfyp27vekcz4NBG9c5OAo5nzq9srigx
gHx6m5kHxkPYr1UlCzkMiCmTN7zDehAFc98yGHDOQcfes0aMhDoGt49QGNBe
rOa176cY7RbcUZlI+M8+Sg7qZ2CADt/uN/98jv2V8+N835Y+Oli1Bi77gPFh
H0rbTuqmgxEjKHcdC+dvmoFvbn/H1wecIt7A8WlodmJEaxsdOu0VJvzOFiPy
4qcmei10SLqmiS0mRkyb1m+7GulQ0ezwLGkR9o8LOzH7LR3igqJ/NeaI0Wif
2ba9r+hg9jvUPRXzY3zgOqKxjA6q0W2t5QvFaFK4f/ZRIR0EM7wXzcf6oht3
zePJCzosz43xOIDr1Zl3QIVaRgdDeXeaP2KkX9D0zBLo4LN/Zf7KDjFa+Jzu
H/mIDoGfv6ROjRajJbV6UyV5dJjwhfsx5j7ON5vXvFZ+gJ/fr1dh+VuMVnfv
C3fIpINz6JhsJaxP60hXFl1LpcPIcqg3YuSoVPT1/S06FFsHPHY7j/Gv2Zig
dZ0ORKf308NpErRtNmWNZxwd5rvTf5Z+EKOdaCoh/RL9b78pMfJbbf3gWzQd
Prl0m+zD+hGwaY/73Ag67L3Y11XTKEZBOy8pHzhDB4r89Svm0+nDhWWFJ+jQ
0iH4lY7HGxHWcGDwCB1un4k4LOkVo/NXCLpLDtFBng3YfhKj2NTJ9cH76CB9
r31y+j4xSsi3DCvfRYfv/pWiT7EYX898cD5Khx1NnvN6g8UoreZch802Ohwc
OVAD60tTbvyFLXQYk7NLuOueGOX9rF/9yvk/fxYRh4ZVHbD9rroe24/x/5Q/
6b7LWjq8loRXNGB8VWgsd7u5mg5B6AH9SrEYiWdtH9ViSQdR/Oo/G2zFqNY0
6unUZXTYM06+Q1+M3lo/2O+zmA48+XFZF8Xoo3Otzn1jOojHohRuphi17vj9
qns+He5PkB+Ag+vjAPVQw7n0f3zpDjVbGDiDDm8vKyte3StGv2O3tQt08f9v
ky84wvldatg1kjYdDgcn0SrFYkTLz7JeMZEODrauMpGjGHGeSYfCVOkgXx1y
8pIYKdf03BWq0CGtS76AC8eLJtUtSnw63N1/bBPDXow0fpoq2bPpULLkRqNy
IY5/RPfSKzTsvw9fJy20xvzjn9nXQKQDa6ThlxjN1UifrDlEg/2ntzZXHBQj
o1miWo9+GqRL1T0vknH9YvrzTGo3DeZ2/9B0dMF8tx5j1PGdBt+sPk/MOC5G
Vs7GbbPaadBipCTw3SpGdjs2X/VrocHLvnnSybvEyCHgpFV+Iw2c9+xILcT+
dQlNGfz9lgbgT8Alqxh5xFZmmdbRwOW0wuceJxyPU75vPiGjQb39VXUdfP3u
vFH8Z0Ia+PCsPs3E8epA2YInjAra3360WN+qnfysy2gwo8asReglRic/HdM+
B/i3VpfFDw9sv3iH3rZHNDjrfvOy/TYxirOfU2GeTwO/1NmxOc5iNJnHjE94
QIMzxoZ9b7C/7734uKsvkwYj28eFYmR88pGZ3R0aKB3dq9mG///ZoosqGbdp
cGOm5wkSnr9tz85WSiINNoROcFm/CuPl7rJHm6/SYOO4WxYrt4uRp7d6VGEM
tqf8+JgCMeqa1Os66jwNfizmLHNJFaMjb0XzfCLx8xe+cTliKkb0mFTq8xAa
GJnq7CueJEYXbI7XawTT4MsMoyaNCDFSZzhmBBzD87lv+/ugmxjdeTL3WHUA
DVT2yk8Mw/oSyLKbeYAG7o8HLwQmiZHAoEk7ZA8N7iQ1TBi6LUYrvz/ubdxJ
A1FC+sW8K2JUk3qpwtgLj39R5cXzl7FeuPnGX3LH45s23ucJtne72ord311o
f/vTYfvXTFxq6UgDj9bGpTmPcTw926dyaz0NPs6WnzAjRpEWktaBNTTQ7PTN
mLJWjMYS0x7ZW9Egr5ak6eWL+f3oRNS9Ffj+8u2W63B+vd9pC3MpDRJCrTZK
EsTo4Ux9fQ9TGhi+aZRudsfxuJVNKzaiwaaRDQOYrzea68cY0KDOf5uEe0SM
nJyKM/bMpoG1HI6YDy3Kl49VTsf+CZQfwCFGe4S77CZPoUFNMMrYhPkxcMZi
8rFJNFg5smBfjM4s0eyrm0CDrSMNCsRI6U9/xdxxNFhncXvXh91iFJ8jjY9Q
poF8MWT4CjHS9U3f3cKlwcjrCW8cj6YEL13MosGbHbM3uWP8okbn0XFUGlRr
/mEOx2C9iTP48pNA+9sPHMerdZzH1oNUsAp+w9TC9m9U/ByV0kcFs8qoz+vs
sB4/F2whdFPBr+f97xo8n96gWH2n79R/enti4R5abhsVLhoMMSZi/Ch2W77m
tFDhuHy7sQHW18xJmV6NVLg6e4orSVeMtDz/HHvylgqadPkOUzHK0qi2G19H
Ba5OWkmAIeb764zJB2RUWCp/fYj5+PTCqT6RkAry7nYa2P421i6VUyuoUHx1
6sTgKJxfUBcknCyjAgot2Hx8lhhtA+6eBqD+Pc9LjDoPtS5d8JgKC7bIv8hj
fs4rGX0unwpJmnM4GzZjfH+98qXtARXIsgLWlDCM7+S9j82zqDBwp1NqjfGs
7rrqbMIdKhzRX7S3YynG9zhtt77bVDhwim61Ez9PXzagb5dIhe35Om2ukzG+
I2poGVepcHDkQEiM7+VZrymXqTDVNqZ2ihbWE3NTuHueCuJs+QcEnI+YCZM2
RlH/xZ+0xS7hpDAqjCzvNxGjStNvuzNPUUFWtFG8BOt3x6Kj9huOU6G3rqv/
E9YXtjFnEeEIFS7vV91sgOO/nlGCZro/Fd6XyBuyipDVgpm09fuwPeXtefnY
nwbFHUO7sH0U+uLC9HB8nLdamrqDCrrfbA1eYPtmzHmXb+dJhfJFFQv6sT+q
ZvnGD7hRYad8+9MiMfo2Y+hEsgsVOLyCL+/w/3P0orzWOFJhs3XLEyU8v5nT
1Ff/Xk8Ff3eTKydW4vxAN2vebVsqxEPGyr7lOP/UMR232poKb4PKriaqi1GU
tnCo14L6Tx+zJrk03TDH9x95IS5GIo1vL1YtpkK6fHnyTlxPqx+9+8uYCok2
NVejJogRbwLn0vUFVJibvERgiP01Wy0hwHIeFeDgbaOGsWK0ZtxM158zqaCC
o10QtufuMcXL4qdRIepk9piTD0XonMrq6St0qCBfzVNvKUYPRr3jdWpiPDz2
jtObL0ZSvm9P3AQqaAddHizC4+niDr0xH0eFo380V9NZmJ+cqJJvylQ4kR/e
qr8Exy+2ekosj/q3v5kYrWVmRZixqbDmgMXgGIyXfXTTvR00KigQNl1xsRCj
i1ThhhgSFU45J/M9sf1yyC4mi4cpf/fbilE18duktt8UyJ4d4fIK469b4Sj9
Yg8FHjNXYEqJkcqw4jeTLgpk/mlfec9MjOYPxss+f6VAXVlBnHQ25vefGYXn
vlD+nn+K9bK/KMG4mQKDu19leeP5xPRaBzd/oPztN4/zl18N3mffUkAwKD+Q
QYxe/fSxMaqjADc89VIMzu/7Ogf1P8kosNZbKXSHItbTH5GqkSIKrN9klDVB
H+f/3yYoLKik/O2XLEIOHZnNH55RYKQ9PfaHf5tJZdgTCuQqeiidHY31obXq
nn4xBUxL9rdRNcSooGVTzLtCCsxdsrR9vJIY1Td9PRySS4FdIZNLKzBefn88
smXufco/fqk2Kq54m0GBQnm5hO258H283ulUCqx5/WVBDfafY8MMpdm3KRAs
b/fMw/Xam6Le+usU2DRpc4YR1vu4euuGk1cpcL6rorUD4/vhq4YnMy5TIMUt
baDSSIze1PikvjpPAfnq6wgG1mvZYOTxKArsHzlATIzGSyP9podRYKam4eh5
1SK0SDxhY80pCvSf0atMviBCzsJM02PH8Xz3urWk4XjdaPbVvTKQAofpDk9y
MH+25euFjvHH9r675akbvn/b9J1Z7n4UKP6sbtOK+bsrMV1215cCx0o9Sk+o
Yv8rt/f98abAoQZx+ptN2J6h09QttlJA32fK1XXYn4OD3ksvulL+nleB9Xnv
Ha8PThSYM9121HGqGFE/t0bqbcDz15Tv+BSjcCfdbH87CrRUj2q3w9fzxJ51
T60pMGa18pZfYzA+zVMGeZYUmFEU82b/SxEaV9gyaZM5BUa6J2H+JMzQsbiD
KPC/8CNCk25u9fm1kALRz1oMc7EepoxOOr9kPuUf3vXCm/Ij51BA/vWU+V2E
7g1rNdTrUWCk3TZTjAz2uRN1dClQStndqZwiQg9bb07Zq0UBo4ia2vfY/6ab
PloVq1Ngw8iCSjEqlWjuZapS4A2l5nvrExGyWL7lsr0KBdTv/Sp6gPn38mHi
45s8CpSHjic87hAh21kfGr+xKDB+5AU2zq9vTaQZ0yjAM0YKBX9EyHHsZr0z
RApobU+aPAk/731Egq1skAxxeRes05Rxfkh4d2BiPxny22M3J83B+fb+Cdd2
dJPB1y86OBLHW58255L872SoyFW4/5OE9cLlWgupnQwb9uxZO5AlQgdkb1hr
Wsh/+/eI0Z8VanOuNZLh2seDg43TcT3z2NG+9S0ZTNJPKu3AzyPPiTusX0f+
259EhEKT6hODZGTwcV4y6gIN66/quGcvhWRYZW+iO7NThM5HObSPrSCDi6/8
DaYIjSHF8raWkcG77iKpo0SErh18ZXAfyDBv5AOJCGl0jHYafESG8lrfiqOJ
IpTkah9kmU+GCTTPWdT9IjSt5lLSpQdkmBt1Ked9mQhlWdZUNGaS4fHP3qnz
ZSI0r1j5x4w7ZKh76kTY1ypCBXPXqQTcJsPG+PUk/WeYDykXFj67ToaR4/UU
xKhETbZZ6SoZ3LoUOsyx/ZdHK51yiSH/w38F2S4t7RyeL71r24oHImRz6Jyo
J4IMX8VXXl9qEKHqr+JusxA8noYb9zZjvDi48VTPniRDyufCNcrvRKih1ga9
OUqGQJFJgvinCLmtOusxJYAMH23kB+qKUItAGOq3nwxbRu2iiG+I0A59zl3B
bjLE99y9Ccki9CPVupq18z9775sQ2b/BkwzK5n/cU5pFqP/cS/XbbmQwmvKK
+FQoQkepbPMfm8h/+1+KEPHwKu9FG8lQ1kSoC8XjO/M9LCpkHRna3+7N/ZQn
Qompx59pr8H2eGCzeFkSxvcW/yFYRYZZp+rX/HiD56e6a/6mFWRglO6odDkr
Qt9kW337zcgw8vmnXoTokc7Jl0zJEFSSFl0Wivm2fO27OQvJMG4orXJ0OLb3
sOVooQEZLO96vTQ9KkL2BYtXb5+D8bl3XvvMUTj+7VlwmjqD/C9+hU2bWXxT
l/y337wI3f6k3WOqTYYS+XJlzPeia2oz30wkw7v+P8pXv4hQ7XqlbQfVyH/7
1WN7cRgJo8aQ/+kfs3y45q4SGa4eOTT1GZ6P9vEeRSsOGSAz5VySvwiZLvy6
rJVBhqKJb+t92nB8+PnpSDCFDEtnHPi+7oUI7c14natBIMMRb3kGL0IRWyVf
Hw+QYOajt6kFxiKUrF4+eWMfCdLXyRvwiRC8Kt706ycJWIlLj412E6HX0bmX
zn0nQWaVtdejOBH6aZlRNaOdBJ4jC1BEiE26RaloIcGCzRcjLTE/dB5fMdn2
kQTeoSG0nUdEaPH+6P3EdyQwuXRuoYiO48fMM5kJ9SSYc5ck3I7vv+/zkeaF
NSQIiGAeSQgRoajEfRNeiUlQRI/08osRodSNO9b7vSQBZ6TBsAg9UXKL5JaT
YKSdk7UIva10KEsvJcFIO59jItQTbDO4QkCCJxFG/qpvRYhnutyg6SEJxOpt
XyZXC9G03kU+QXkkGM0MTvbwECHze/OSxj8gwcqng8zAJSLk4j2toSCTBPLT
e1Mei5D/JE2V9XdIsHG1JS3nOM5v3oyx7rxNgmhLeQd1EUq7yDkVmUiCkXCL
x4+1vmjqNRLIuwVnYT6+ow50l10mgeTeVFrdSRHqE3TpuV0gwbF+T7VVASKk
dOiLx1AUCZYlZ3jZXBQhvbkfrsWFkcBAxLm1DuvH8vba6vmnSXD41sZvsXg+
rrer2LLjJKA11Td9mS5CAZuemu86QoLx9n7TTxeK0MXRjwJZh0jQpPfxF9kR
64vofk7Kvv/mWx6S2rF0NwlmJK/Yfhjj5+OS69ofdpBg0ewL27ILRGjg9yXn
QE/sz0uXm/kTRWh0TsTFse4k6AqzNKPg8c/yOfkyx4UEeSn0JGXMBwudALKt
Iwl8lxruejMJ68P73Yu+rieB5kgDChEKjPXcF2pLAuWAoUe7lolQjK1LxmRr
ErQ89vzQj59/j7m+qcSCBHrPc09SVUSoonTVeBdzEuS+L5sV5ytCTYFm634j
EpxeGu9z11SEhgyMImKMSfCVKt9RKELxV5qaLRaQIHCdddfYWMzXwbPoz1wS
jGzHDsT4dTW+kjmTBGn75QWGCB162tK1eRrGU3qhSim251jd81ZKOiRYm0sr
FOHx5IWbJD/VJEFyoZrvxPkitP576/CBCSR4Wf7msR/+3W13cePUcaS//bqE
6EIeyn6jTIK5rr2StgkiNFe1nR3FI4H9+znzVw4LkfhIzLbFbBJYe4/Vz9LC
+UfjEuii4f83rltxH9uLs+zruCQS9l/EgZOrx4lQRmqs34ZhIoTL29O1C9Eq
tnkV4w8RRrYf64lQ267vOo97iED43ONkoYbjlywuyLeLCJNCN7J/TBUh3QXL
X2t8I4LCTuq9aIEQPYvrnCf7QgT3H8sLz+wToa1D1yJPNRPB48bCItpsESK7
WXxe0EiEmcwvtw2DROhm2c/FbW+JcI/z3H42jldLpl6Pu1ZHBMXZL7xZGP8f
IlZ2r64mAmttZ+5aHH+P/fhlTRATYWS5maoIqa+7kZJdSYSxn50cxy/Aepdv
Rdj2nAir6s9bFpJx/qbW5zi2lAhLRhIWEfpz9FZORTERjmudjy1TEKG4j6s5
Rx4SoecCJbkb+8tw+W/PWXlE6DB1LPo0Q4Re3UkqabxPhKvZ8gPocfxXtFW7
mEmEEIbOvZ1FQqS8Z2Df8jtEeKSUwSO/F6Ls6hRh320ieKX1aPRi+9oZrtVN
TyRCsAfrzMI3QtR5dej4pmtEyHOQL1ASoejhO2+4scR/ejnLfb3BkwtEaCvT
Mv+C9Ur4TOHsvrNEMJo8QUzFePSZltGqE04EcWvLuU3YvuyoDWb1p4mwKZKO
I44QpXUSr4WfIEKRaTQY9wiR5fqsXyZHiXC/lvEyLViEWgs22vw4RIRfgXn6
v8eK0OnxlDs39xNB3g2MUipEk4PuEdfvIcKuYl21C5hvTz85OdN8iED+8UCw
gCJC7itoeYVeRJhuJT/RWYiI6Q+4Oz2IMNK9BI8/kePire5KBM+P2emB2N5o
L6NU7ESEn8Ymy0/h8b+ryRl/cgOej3x7zEchCjRyPWCwlgjNDTX9wZiPavEs
8efVRJCfzrH/oRA9VMifGreSCNtHFsSL0EYPt5NWy4n/9KbvuWLD0BI8/8V5
/aljMN+nF86/b4KfF3KWa9ElRAZnPaLdjYgg373op4jjcxe3TcWA+LdfnxDt
tX+0tHw2EXQnXXWsnitC/Ifb4gP0iHArK+nV3kdCdG+CUq+eLhEOFNruOTiE
/du7M/q4FhGekvKKN4zG/JU8n1qrToSBZ+2nXRrweNMnlU5TJcJg1MyBug4h
Kjp1xPmYChE0eFoXfrngeLe57peMRwSqXdzzBYFC9NRo3lldNhH2GiRtERcI
0fNRUbpHaHi8VJlBHrZ3xdfWEgmRCFpffy/PnCNCVc+XOukMEWCkvcdbzPcb
Cd0B/QSQd3+cifEnO9wfKeomwMHjF1s6FeXxft0U7R8EED20wBmFENXPugv+
7YS//dGE6C2D6VjVQoDKOJPXR6OE6MMnj5+aHwkw0v6zTYg+FQkiDjQQgN7v
qzXluxC1XFbVqawjgLvOSv4aHN/a9uwXTKwmgGXzDm3aOyH6ukrssE9E+Oev
H5Ond5VX/Dfen8Onwic8I4B8N9+qTiHqqf+gvbeEAFnydr2YT/3ZxsXPHhNA
IP98Uy5EA5ExG9QKCGBm8MZD97gQDXt2/tiVTQDJiXDtT5hPRDOrsKdZBNBM
ez758DMhoo5P0RqXRoDCEzo6XBAiRg+hyCeJABFK8g69QsQWO9s/SSRAoqRK
61GrEPHS8r+PvkaABsKWMN8bQjQqGNfFlwl/+2cK0WgXn0lwngD16XabHpNw
/WRY/kg5igDEzGMJlDghGq+ktd47lAA+KnERLQFCNLHjyLei4P/sOelZ3Rml
IALMKpx04E8a5lfiPE3PwwS4IC+/sF7qBkQ9fHSAAHJ1Hv4jRHrrvqzl7SWA
NeVg/w+st7Nmmn/18CHAd6/ghS45QjSXfv10oRcBVEY+QAvR/I/9EzkeBJjZ
+V7h+FUhMnq8rtBtMwFutri59aUL0aKYu3b5jgSIyZEHOCFCu5kdLHvC3/OU
hchs5dZTrrYEmFH2Z41lsBAt0wb1XCsCbJJv/8d6YDGkWsCwIEBb06tp+b44
PtTtt3VZSoArG39/24Lxu/qBuO2BKQGUFshnLER2EdODaQsJQAnbYFe0U4jW
bzs9wdmAAPJqtMBViBwWN+bdm02ALpA3UBMiZ9VFayh6//3/5u6YLxunEODZ
C1OCyiUhchN2nsiaRPinb1tTrcaT1AmQri0/wFaIvE6k5G4YR4BHGWtuhS4X
oh3ORJsMZYy3FqFX6iIh8p2/qVWBRwDpn5L4hmQh2sMrOL6eRQBVy6Vu47OE
aF+bkloalQCt6+wWP7ERIv+nPjlDBAKM7gzALhaiwwnl1msHFf79Vi563d/b
h39H1j//flCIMt50JF3rVgCtM9fr514RIvPfQ7ZLfihAYctz15fPMb/G8oea
2/HftYYS9p/Dz1uglRb2WQGWBH92TS0TIkV7A/tZnxRgQ8NBUiS2r+mFjVn+
rxXgfvL9vL5VQlR7f4fjhFoFkO9+v1CM5yM+Qn0iUYBQnO3e1cN4/372wbYq
BSDGzJ7BwvO/rnjThfVCAcQ75A0jhMhQL4d576kCXICCxCN+WC9WPstbBwrw
Vr69AY/Hy7vOrf+RAiTaywcgRAohbZyEfAXw9wo3WzhViGKTBx6aZSvAr2C1
tCpxFZpTxvH8nKUAI8dNzhWiik8aoyLSFCD8z/mbW9ZifxHnCWYnK8BkhVq7
GR5C9Ftj2Y6aGwpQs8g4wg7z9zzaMCYgXgHSFXd7KS/F+bGLd6n6FQVYWMur
Pt0vRKWBh3eVXlQAL3N5xMX4uBqp5hWtADNvRy4o/ixE3YXXn7MjFEBN/nl7
jxBF1N33u39GATxfpNHKJguRdm/pRPuTCnDScKTAQ49Vait/H8W/pZXeIdMx
HvVbD14PUIC9LbFb1+wTom92v7XMDyhA7DvG0jQNITq9hy1u3aMAI5+fLYVI
PVo9MNJHAexVDKKUNgtRftZs3bneCnDnSNuRidpCtKbKrLrWA89HftzmSiFq
bV8XdNhVAbx/ReUPYPwFMT31NJwVYH4eZfgajidjpx6qe7pBAcraMlQT5+D4
siI82HutAuz7MwPPEMfrbfGzOTYKMDDw7Z2OiRB9DL779sFKBehy7NRbi+8f
cKskZMNyhb/9joVI6YlMf2CJAsT5yhug4fj/oflDookCvHuwLuqbM+b3cG/E
MiMFiNkqe3F3vRC9mcA0atNXgOyTodvvqWM8LhrfHDVbAXRUdpzbPgXro9PM
c/P08Pwf2uSbLxGi24cWm9RNwf5dKX/DKEQmsXZfArUUYGvInHFr5PjM87ik
ORHjd5r8RDSMz5oDS56pYnzTTE7Mq69C1O6Qr9tHK4DROa2gy4NVKEHp6hWu
Esbbj+PM0O4qNH9O5rIcRQUo/zXpvlWGEIlsBJ0ODAUwV8oe+wHjyctXEj9I
VoDarzOjpdieCpGfLG8qKMBV6Wwv5xVCNHtDe3tk37BA/rbn3q8q5HqRa/7q
+7BA+NRzQ7+yEJ2TzLum8XlY8O2rfIOrED3hOHR7vxsWzOPOuZVpIURdqwKt
smuGBTmrXr6fNlOItEITbw+8HBZ4BjqYEvdifc/WCgwrxb8fOMVUSKrQ6Ibk
tWMfDgumjywwrUI82rTpyfeGBf8777EKMeZkEvVThgX/6z+H45PT7Ncl8cMC
K+3pH4qxfQeCs+/bXBwWeOFqRHAIx7+s+aENYcOCqxNPzpn4pwp9ryt03XF8
WIBrm1v92P+tRBPD/oPDAq2im3P+9FWhj3rAPeM7LBjSlUW5rMP6Yr/0s/LW
YcHo19PPPcD4rgl6VnzTaViweg03usdUiIRpljGz7YYF6Y7yHc1VqLz6pU+x
xbDg//HyZMhmmRUaFoxd68bMxH9/pCsb/9pgWPBV/vn9XhXKsbPv9tQbFoxs
f3hYhbIC6yt/TRoWaGyVfwGvQqnJzrdOjhsWLEwuKK6GKnRD/D6AzxsW/L9/
43672V2nDgv+d967EF3Ubpk6Y3BIsHM+PXkPtk/Uam/Co59DAuuQl6qBs4To
jH9HnUXbkGDv+GtFY6urUNDNXfdqPwwJRtobYLwHvOw64/FqSBA9rsk8SgHj
t2f/5q6qIcHIcrYXVchHo39+0NMhgfLlvl1BeDzbVgZyOI+GBLcuXZv3qBbj
Y99w89X7QwLOyIYrIXJMOFE0NXVIUOg94cSGN1VobTnlUn7CkOBAHcVhGVOI
rLpCdi67NCQYaY+QXoWWj2eby8KHBIKEoktH31ahxcvPqm05MSQ4Pr1X8UpB
FTLarfTzm/+QQL77bwvGw9y4SxWBu4YEJyeqz1v1vgrpPR17k7kN/34U2Bf5
qgrpfLt6KNZ5SJB2Xr4huwpNHDvRVmftkMAk7v2n0/h3u6eh4iXakCCw+Mqu
jmdVqOnco6ZJQ4OCiP66XbefVKF3j0wf3+seFNygjLF8ll+F6ppLLpi2Dwqc
qqaVPvWrQhLush0vGwcFGY/vGL3yqUIVRuVmjnWDAlO3SRsJvVXoqfsq1Vbh
oIB38GtczIkqVBwp7NxfNihw2TesntNShfLzbV+QHg8K5h7pPPUntgrda6xO
PPdgUPC/fqVVKI3l4D/xzqBAed4Gg1I8/9sGb2wyrw8KaITq2N/JVSh+s8sU
45hBAX3rfll+VhWKCW0cKo8YFATHcd4TjYUoOtuj1v7koOBsws/Y2ttVKKzh
c2bTof9+n6TtOLV396BgZDtsQBVKfuh8ItFzUOBYcCn4DMZnhc/qY0KXQUHJ
4UuW8+9WoW8aiwMH1g8KVi270m+Jx6dUPefQNOtBQUt66X0VK6w3Z7QOOJgP
Ct4ZpN09tLsKOS5U8TttPCgwP1pYvntUFTr6lbo7Z+6gYJtcLn2r0M3Evp0f
pw4Kug4ljdK0r0LP1rZ58zQHBXVjNipal1ahNurbbaZjBwWr27InBeL5ch5W
ue/k4uc9UdLiJWL/+whc46j/2cte4/6m8sEBgc+q+Kas11UoQHbTsad7QPCV
Ld/hjPXx9MUN2h0DgtOulzWhsAqVGJ1eZ/dpQDCyXR4/r6njoG3Q6wGBSkZk
VtHJKkRP9F6dJRkQNDwsJD1Rxvha67TqbfmAYEXtcd0PS6rQGqq1BRMGBIfk
n7ex//YVmi4zzB8QfP6/oq48rKavC1MhTUJIkwZC+UkDUrIbVEJJKA3GqDRR
hhShMjUpZEiREqJBMpa00qDuOec2z/M8z93m5Nv39nzXn+c55+699lrvevc+
9+z9LtnPR+hv6eip4yZtm4Rp6FA3COdxoKPUVdIo5PU0/A5t6z5pRUcNRUu3
Z4RPQ2Og66LOF3TEdXvetoGH07COWW4FX6/bNrZZwn8a+LdciJOKoaO9PR1K
e72nYWDO2Wey/nR0LqJKwcN9GmbrcdBRiAm1IebcNOQtTpFMzaWj7/PS1pfZ
TsNn+xu/x7fRUc33D7Jcx6bZ/vzrECmjZDoNaxxrONJk6Eh61UPJ44bTwKLn
jTgfi26K39s5DQpr1ssG2NOR/a1LIqnq0+B8XEmm5zkd3VO1W9GlNA1M9Z+D
n+goqdtcSFhuGmT3OHcq3aGjshd7FutJ4fFkRZ/8z4SOJvdrCFwQnoalDkLp
u97RkcQ8Bd6oRdOQIsIUjKYj7e+S3AXzp+GEjePid1cxvzgsmTfzZwoiMprX
hmB8+UlwcWwYmYIVa7LWfjfCfFk4MmPeMwWvx5gHxuio6Gb71J3mKWD+21of
SUejWyvHv1RNQfv5+WuDLelIpJsYaS78d63xInVoMW0KWK/LuL3j+xP6UfoU
TOwgF2tcoqObXC97nL5NQWTEj+o9qzAff7vfGZYwBTLDr30zD9MRZe/TRns9
BZkMMmMTzp8B8YvNY+FToB49479iEx0JFdo0rAmZgqVi3Fm5GH9WW3dXeXlP
gXP8zZ6E/Zh/u9TLP7hPgc8hKf+lCOf38/9Kas9NQZewlHGGBp5PjFcV8trh
389LNskTpKMezsV5245NwQZFjrlVOnh+/MZB2ppOQd9PdXcGtk/FnpHzyHAK
Tl6Za9yG2zss3paVuXMKakyFaVz8dHSloPzXoPoUrNq6vf+xNB5PhRLHXuUp
mDzArGCC49UQqP1Gbgpm601iPHZ2eM+RngLusMvyNwRwvg3qZFqsnAJrnZ3Z
x/dhf0284PwiOMXOj8C5kzqLuKdAub4icGoRHaUsPHTzzN9JWHIw28joEB11
LE7MyhydhMaqrIpYjIflIrzzJPomIalqsppTlI52StvoXm6dBNGNN/zfqtKR
q9yvW0U1k+AeXmKrO06hCCWx3xtKJmH3J/OaJ7g/Ss1t/h1yEpjVyjIVML60
i/QaMyZB6GucqRFFoXV7/rujnjIJzN3Wg5KYHw7czXn0cRIMupfbis/D8bVs
XjAQMwmjyoeuBE9RKMl6x67dLyfBnLndcQ7OT4fQu9FPJiHl69k9IkF0xH+B
kTtzbxI+9QeJaNVRSO3qvoXmtyeh5D/mBlsK2d18b/DJcxKud2T22GA8Pg6Y
58d/cRK2yecuET+N54OQ44St4yTcOVrbx7GejobCf/BkWE/CY8y2nifoSPL1
8j1ilpPwzvCBnVM3hYziXfwvmUzCrJ4hjt8XiiwwmISlJrxi97MoFPNzLZ+8
1iQ8kmy7mG6O45ftvfeW6iTgwQSMSeD45dUG1Cv886dSmSp929pJkGYBAsev
7iF/iAS2h6X/S6F7bX2GfcsmYV/HRH/aMsxXfQb3dvFPgkOUgClHOYU6R6Pz
orgm4UMos2Ajjt/fvwJ/pibA8QCHhfcDCu1cYLnPbHgCHHY4iermU8h10deg
j10TEHeP16wpm0IvVywu4G2aALOjS/GSm0J5qxwFbSonwMhp4c4FKRSaWptj
nF4wAYKLH/wn1oXjt0n6vkjuBKgmltucXojjp+pZeAEm4GEtcwFOoZuaFYvz
v05AM1f/IdlKHL9dyibrE/4932B874HP6wlYPdhtOj+XQvzmnUW14ROQ2hCa
G4LHp3Zi51LVkAlgWjsdieN3JuLAA/8JKHpOvt7ym0KPXSYf9nhPAI/Qh2gP
3H6W+6ESPY8JqJZTWUkfodCQV6JQpMsEzNY7p9AqP95DU3YTMLX/jfjPGArt
fWDz6NDxCXY8PZ79Kv1gNgHoscM1Ptx+TJTYcp59ExC65IDdl34Klb13Mz2l
NwEhr0do3DMU4vpU9DhNYwJm9XUopPjjv3LhzRNgwiqYSqGjmXdXnN8wAcqs
DV4UCiCbzegyE7AmeSN1A8crpXjH07WiE5CfPjx4bZhCHdWhFV5LJiCwIZ/s
qaVQXcGBp5ILJ8C9U1aRO45Cpdn8h+HvOEh2KAwvx/imUnJWHB0dZ48n44NX
+XTPOPR4MD/QU+h7tPqTsOZxiFQXiby3go4+hI6YqlWNw77C99eyflHozb0P
yysLxkG7T7nuCoNC4T5nytxyxiGCuZ0N5/ODyzKPl6eNQ++bngWTJIV8nWoP
ffk8zs6nGyefLDsYOw4j30/lV0RQ6JLZ/tKhyHF4f3Lt2/cJFHLcy/vo/tNx
+Gtx0isO489aK/vgpqBx6P/hpbc1iEIWW64L5d8ah0emnfS7yRQylt9W4nR1
HFjlTcYopCc5/JDv/DgITmqnSj2mkMay+AOxZ8ZhVp+UQio8tkt3Hx8HVriu
Ukjur2Rxh+m//iQZVQ/uGI5DAb/eD623FFrRGWIiu3McFjhV7fK3oZBAndGS
bLVxMFVS0JapwvEs5i6yVhyHWXlGCk3mZNznWDcO1qwFAYUGU6/uj5QYB/vM
q2cDz+N4fdyyWHPZOKhXzW2px+OpezNQUMc7DrN66xQqCXsf7MkxDpXtzA1L
FCKCTxmLTYyBZuycnwa+FEq/JSH4o38McndJ/lxzh0LfPCryzdvGQFv99tsd
OJ4JZx8EjdeMwQJJ5gk1CkWf2rvvSfEY+G2bOvvHnkLPzOcv2kKMwayeHYWC
jdLzStLH4NqCy8Uq5hS6reNx7/y3MYBou4oQTgp5qqoYLUkYgzHFsF3F+PcX
/uvj/xg9BhHjbdetML7spWPo+8LGwFS0oWDdbQodX3EysO/+GAxNT6rEnaGQ
GZ+YYeDdMVDd3J4SH4/5b24Z34brY8B6nTuK+WU0iCIujsET5V9emgGYf7sN
As44joGh1pqQfGZ+NHDu5bYeg66tpVuCDTB/lP7kfWs+BiMHM0NEn1JIgnAj
dY3HYFZPj0JCoOjfojcG0xzPpDROUYj3c/duH40xEK9NtrK3phDHu9c80ipj
7HiPPz9GpMuNwbbdVye6zlGo78FKv2NSY9BqU3ZE1phCrXeKDWZWjIHkZu/U
yvsUqrkauPC5wBjM6stSqMhFn6Y+bwzqzgyX3EQUyrWZ61s1NQqrUu4LSm+h
EFj+2OU+NAr+XX3nPWUp9NX4Irdw5yi7vzhdhdyv9aNwm3peaOxOoSi1zjuH
ykZhwCfrx8cXFApVeKXPoEbhtUelld4JHK/VRxY8zBwF0jc09hm+vr1yRY5i
yigc4rp/bKMShd4+QXHnPo4CSz7EA9uzzO7+h5hR+JkTvLp2E+b7h8GX+iL+
Pc+zJNnyvyejUBqk+lTeikLywY2ajvdGYUrNLC7jIOY7AR7Z2FujsLyhrDjX
BOdngBJv19VRYFabnY/9EchjObDuwigIiH4sjcPtJdz1KbV1GIVZfTY8H8yP
S3lzchQuLnde0yhFof6bJRGt5qOwb0FCWQC+FuT8c3P1/lGY1ecmkaLXGnvr
XaOQHbnnxBYhCpn8NdwXhUZB1FDF9eJOCp33vKTSuGUUWPIAGA8hUy9WSm4c
hZCsd4llCyn0xT1n5uiaUWCV+1iE+Xesv/m52Cg7XqMXhWk1S7E/5enHf4vh
/GZoJojyjsKFJKpLRoRCqq5nHlpwjIJMpuGFxZIUOjxw/3LoxAhcNmMqppHI
3TnlSMXACHi0O87sFsX51NOkvaJjBPyfh79PcaXQD3vedab1IzBbL5lENR3K
/I/KRiCl+MxfOR4K/bGxGiqmj8DnF7RuTmyvROvN8iXZI7DhOfdHe5xvyDo+
dX/qCFS26mXXTpDoeGNpZPCnEZi5UvBsqwLmz2Mzt/Pfj8B+VsJQKLJW1lEg
6t91huW+/YahIxBrIME5TCNRU6XbloDgEeCayXCTaiER5+GXouSdf+2tLsud
w3N9BL7rtAht6SaR7sHB1l2XRqDOJNraD1/bFK0k7ziNgMza/oS8tRS6Y6yd
+PvUCBjnD+xZoIjnuzz7R/OsRuDWfqbiJ4Voex967DwwAhFXtke2A4m6iB/H
fHaPwLuCdt/xGRLxGLTszNAaAYdfGdsLmkgkn8MnN3fbCGz3H2k/tgfjTXfz
Is1NIzCrv4zxlnmEcW3tCBz/IWOMOkgUqHW78qfECHhPtGSv7ydRAiSkTS8b
gVNLez4kLKdQvkb5K3X+Eah6rEY78oVEAz/+3vXgGoFrrA2BFFqsts45eYoB
uddklvW1kUjpu/GB8SEGME+rrKwk0YEt7qpbuxhg+uWmdUIviS58jhS/1MgA
0We31VVxPEOUCI4vFQyI5M3wr6kj0ZfEofbhfAYbD2UbRelKOQzYxUMadgti
vMXpJLmkMcD4Rsu+Oz0kWiHv+CTxCwNu0OcsHyonkeq7kKv9cQx4G80U6CGR
+dqfJzZGM2D4aNP2uAYSebxu1XMKY4Du8uh127pIFCYjsCHuAQPcgqKZJ1JR
auSWxd2+DChgbF/hl0GiN3xpF51vMECGdcCSREFuulWDlxgwIH7GaOt8Cl1u
onZcdML2iOksIzAeThoefDVuzYBvV5hvRCTa+716wVULBuCXtcCWdBJtkbF2
/GvMAOeV/uFoMZ4f73UVeOsz4DpL0J9ECydcNs/fwYAXK8Js5L6TaMh6ItRX
hQGrBkLsuh5h/OfdmOGTZ4DXIx1/Rzy+39u4rYOlGOAgsGz+w8ckSowOylkq
zIAYR7196mMkerZoxYYnAgygum98elZBIh+PF8Ei8xgQzM1UCCWRY+uakedT
w7DbZ25OK7bX1DjeXGpoGF51hKKQjyTS/KGSFt0xDC/ra6ujc0i0XjZVel39
MDzvZhZQJ9GS+zp3YkuHoehmxtzrjSSaniK6N1LDECVpRqyMIlGbjYlxUsYw
PIxnCs6QqKCw8vPm5GFQ/zWO1sWSKGX7iZXJH4aBWW0q2JdEr952eG5/MwzV
zNednyQKWHKuCcKHQfGH+YEniSS65Dmmp/NwGGRZArQ4nzuuxf72HYYYppzV
KxLtPjBfcPeNYShMvR7AVUQilbTAC/RLw8C/psBT4wqJxNcvqzR2Gobp8B2f
M0gSzQ8J1yixHoa2U2LyZ3B+DczIRJlZDMOjyh39S+kkqjoTO7/aeBhcecfv
qbwlUWaJksNR/WGQOTI0/8kdEsWhlPxGjWFg/b0USKLH77VUTqtge5KfCs+8
J9GNZbSnHXK4/WWCCp0eJLK/YfzHQWoYWJ8X7pHoYHf5if4Vw7BN8fwh5QAS
aZge++0qgP1lkMy1Co9P9leb3CjXMKiK1S0fzSWR4AbnIPepIfiWO2x3LYhE
k49HhqcHhyA6NFBHyIlELXM9D9/oGILJmBVBgq9JlOfI9ZOzfghY22GPk+hb
ub/UndIhoEoUtV/eJNFL7aW3eagh2FL5fiTzCIn84p91BWYMwQOvSzgjcL4K
S+9bnDwEPC2mQbk43kd83n0K+TAEB8uGrm7zI5Fe3yZh4TdDMKsnTqJN5t+v
hoUPQaRWdnP0DhKJZKFGiYdDYP528NArHxJxKeToRvkOwQnuSys5wknUF2r0
fs2Nf/aUc5UJvLv0bzzpZ4+c3+D0r7/3VS3lH6yH4PKg/5tqa8wfuo7blS2G
oLacKeBOomuJwy+/Gg9BsTd3/i9jEtmJXpmnpj8EAaHrdDX3k2j/bQ77nxpD
MCco9s23EyRSG/TN01QZgr3x8juPnyTRaqvFyllyuL30U3oV6iQSFuOoPi/1
z37emiFvGeEhkD9rn3fRkkQzYc1yxQL/2h+yLCnynjcECwLuKZi7YvyLZnso
TQ8CUw2L4zSJKqu/SDcNDQKDuX11H4mosDfE/c5B2Kqxd5MXvp9u+cRVq2EQ
PsV0PAzB7X0WvSsyWPbv/tvqyxkv6YMwfrrFqW4bzu+wM/bGWYMQvbmH2wzf
v2dpsWTOj0G4CU7c7dh/3qJ7Uj58HISrk/qYQUl0sVr95LGYQXCfz6y4gv0T
toFnUcQgO15WluJJaY8G4QTrD2kSGYsKWDgHDIJk5F1He2yPTvXMXAmfQShm
HqcywHwW1v+O7j4Iz8aC7mtifMtZNuz3PPevPwnRwokNtv/Gv7j6V2TNkUGo
6D/t5KyN8RCWZBBw8F974xavBtX3DELjfxktN/8jUY9ISGi31iC8F70hOSNF
ovqqm1phqoPwtmq+kq8+iYqeXezcrTAIc4b3Nl44g/nQwub+5JpB0Mez/ZQQ
iZJFzLa9FxuEr4acP38r43yt0m80XzoIjxZp69dswPh/puq7kGcQZvX4SfTQ
Yr1i8pxBKF8rMz6sRKLbIiKVdmMDsKNb+meUIp4/qni8hPsGgLUdD5HI6dnU
utyWAZjVI8R8ZNFT4FY9AKM98YxmZ5zfIrWX1xYNwNjzyHFrORLpV9Ely3MH
QNWk0TltHcbfs7Tc2zAA3Q4SVmHCJNpo8eHclq8DoNzqU7B4K4mkRV4Kt8UN
gDVL4JdEy6qC0x+9GoBZPWAScT/zstN9NgDXWYSK+dfcVXAkeAC8G6qlXHkw
n620/h59ZwDWXdF5l6lCoubKA8cPXhuAi6GZeo6bSVQWupOb6+IAhOj/LTwh
TiLCfHPiJ4cB2M0SzCdR2krZw9YnBwB9Oq0krkWij5XL5yw1H4A65naZvwSK
Dl0Qk7FvAJ4zjyvOIdFT8/F9rnoDYOnk8fQ4B+bvlZ1jUhoDMKsvS6LrlZUR
hcoDsIb5+XyGQK6hhL6XHPbHV+93Vzbh9ZH5j/5NUgNw5yPzDy8SWayMe9Kw
YgC2sArYkciwMhwFCwzA0T9/vQ9hPGiGBrajeQPQ4qxePLEA4zlpWqJ+rB+S
Gl5LiGB87VOqc97R2g/DjVuPbmUQaEsSpD0v6gfZEmfDkl8EEleKFPgD/TBb
v51AXEneR63i+8Fa6eXjq9K4/Z1aE1Nh/XClefxpwQSBrpb9fRjm1w/fTj6d
4hwj0He7tI3q7v0gcii0fdc0gYYnr9KqbPth89EUAz48/o2B6qc8TPth4dfv
ccXjBLJfNTmzUrcfVo89DhXD/b35+D00WbkfNrAK8hGoScdNxVy6H2Kp86uv
1RJIomxz/rhgP/iZjsgItBHI3I5x5unfPjCI+hL/qZ1AIZNJXKp9fSD4KWzz
xYV4fg1wiSiv6YOE1dtv9vKSiG/VJjU3sg+Y1ZaVOgi062NfyfKUPpA4emiP
Km7vpk782a8xfTCsW/mUMUUgKHXgMX3SB2Ndw79k6wg0aSv3euRWH2wMDdkz
0Ij9N9mBHl3oY9vvGvC2SsW6D/xTHh8lewmUIGFzsWR/H0iaXD3XxYfXq4mr
BS9o9oGXMLMiFIHW6DS/X6rQx/bn8dJI3U/ifRC0ljHtVk+gcNvjDSZ8faBd
G/ThSQ6BKiYkrgxN9sKi7sPpk/h5oYDaZQ86e6E37sluwWECGUuEJypW9MJR
lgATgfwTLfYU/u5l2/Nbe2XbuS+9sNBkhevyQQJxlJbfEIzuBRPh/A/7Mgm0
w/axaOKDXmAdB64gkMfEwa/7vHph1fku34vvCPTVf+n+/rO97HgPihd13zva
C4P7k85r4/42JAbf3mjYC+vmHPjDW0kgO+19UnnqvfBdrvrctfkkii7hT3WS
64UfDgePDTcQqMGGMuVf2QuuQ31dVzMIJDbhNxi3oBdUI5RVvWoIZOZvELB3
tAdCTxtfuIfx8ECce21PSw/sUGWdaEV5H37/8i/ugRTEVCwmEI/2LSv5jB6Y
1Q8lkF6JzhiR2AOfeQrCQnIJ5G3D8cA+ogfunmQSCIF+jqdv4LnXAzy2cYkH
PhNo3O96zrurPfDuZdAFvd8EUhHfcdLAoQcyqAppE+zvcx+mpzvMe9jxidP6
8eTurh6g+zgstf5AoI5id6V1W3tge0x/2Dn8exkbVXrOmh6I2d63zTeNQEfH
R21thf71/8zvC8cCzh44vCxJdbCYQGViF56/GeyGLef33TXIJtCSD0qqeg3d
kCq2y/p8OIGMtAaLWvO6wVC/oKwVj9e3+IPTrZ/dwFTXbML+yTrtzL0mrhvO
zeRkE2EEmjO+4VXWs24oWDr4xyyPQNv9ujVO+XbD5li+pflfCHRZ7H0F5+Vu
mNVXJtDnBLvzr2y64encD9sKcTz6NdcK6Bzqhll9bQKlxr1666DdDY/57wqt
wvb4CUtqhSh0w/BGpsI1jtfN8KpUsW5I8tj9MQLjZfWA8IXWhd3AH7MmIvce
xovlI36BsS5oMes58fcTgdJyFr/d0tIF10tP+2cHYbwq39M8VtgFMypMhVMC
HY7gqbqT1gWTQQIY8ThfeO+cT4ztgtZVCuXuGK9Dlzj5K592Qd8Rf6PgBAKl
N11/M/d2F7v/QKNpJHe+C06F3HlxNZRAFimXK02Od4G5nL7bxicEWic74nrF
sAsac2zceB4RaOS+C1+0Whfoer+voOHfZ/zpfU2t7QJkyJMdFUOgoDP2aESo
C2Qa9NdJY/9albZViHN0wa/9HZeePSeQnJa1q15/JygsIbO64gg0FlfPe7am
E5KzrnNyOeP4CFu9fkLrhEQjm7l2DzCeb1bsSP/aCRW+zIJEBDo2cLCi41Un
LP7YyPH9Ms4nq0KXxfc7oTBgrZsJtn8ix5BX7VoncNrT1ia9wvmsTESfdOiE
WT1uzH8Rejv8D3eC8rfWXjHszxO8meWfdDvZ9m10Qy41Sp2wl7Whk0DTTT94
5kl2gsfLbLcXOD40I9Xo//g74cD9eet34+vHKZ81TCc7oOGvDEfwLQJZyyqW
X2vvgCXuqy8r3SXQpgfx596WdMCR/BMvj7sTaObPep6CXx2gM7S6r8SPQOSZ
N6/GEzpAkXlc9RyBnpZKa0iFd0CXBrOAJYFstCLKDHw7ICiOc3+6D4GU40XP
uV7qgH5XyUC6C8bvyqcLw6w74MWqOTV/zhKIflPoVaZxB7DKSTnh/BkI3t6j
0QFpj67VONlivrHiLxOS7wCT01LuS9wItDnX96yGcAd8kmdW7MN8pzJ/oc28
Dhh5m/6S4UqgggjvqHtD7eDJVJvA9jzn/av+rb4dZvWs8fzkdqW0nmqHVavr
AkdOEWhr85gzd0o7tDp6vdyO2+fad4Fb8W07aP3W3PH8PIGKUgYizUPaYVZv
lkARsk7q3l7t7P4dH3SWvHduB6b6OudVAqnNnHYutmyHSrUZzgv4/gL7pgXT
u9phVr+fQCWlRyNXb2mHALFrNiTuP1KrWs1Qph00n1ndO21FIOd4s5KLgu3Q
XDP1RR8/v31lidOLP23Aep3G9xfeMl6Q09XGHl/ZAPWyv7wNtFkHNvF6xcpA
TTi7DfhZB9oJ5JKbXayZ1AY7F6RsWGKE5wMVbaczEW0wqzeO56eksP1FgW0g
nGlOPN6L+XTTyGb1q/j62Pegyp24vQQjkWj7NljPPB6Jn/+9IWaGz7wNLJny
qhaYH9/Pbb6o3wZRAUeYFZAQz3rLnLrNbcDhv1VLQxPj/e3nWP3VbcCo95T3
sMZ8t0YgOHFJG1DRlRv69mD+fWV7YeXcNlgiJ3w1SQfnj9Svw979rXC6sdIW
GWL+ihDR6K5tBY/eFVontPF4xS9IHaRa4c1EirDZAczvYfR5P1NawT6pQvOd
HoFERNZ2rXnXCjrI7duTHdh/T2/k3XvSCo8tqmob92G+Xl6VNHarFYLXqBEp
2B83QpSfHL/QCvtcmF9ACRS1JPAK7STub3/yFQnsv6zgtmNK+1th8cnS+aoq
BGoT0NwZhlpBmYtZUYVA3IGh67g2tkK7gflBhgHmC95hPiexVjjT9YjcuJVA
e333DpbytMKPSLNvP7A/nBe8Kd0x0QLabira4goECr71N/ltews4r9pSf0iV
QEmc5i8Ey1qAo7/iyqQ+xotXkrd7Vgu8nC4P+oL7G/3La9uU1AIplULaWooE
Er52es+eyBaItRH+xqmL8TedpvA5qAVclh7h4j6G+cxDWEj8Wgvs9SzemLCe
QJ7jLuO3HFugTK+87hf2z4tLZE2fRQuwPo9tx3zLWP3LzKAF2ryW17ur4fWa
67XX6VtbYJfgpeC52D6uwXLf9bIt8Dn6wkaRTQSSPavo/ECoBZS2j2idVsbr
r14/kymOFgCmXLkczjeHli2nBpvZ8Qro1BCl1zeD+KZvdjq4/wTbJ3835zXD
fw6jdlPbcP62DjS/SG2G5flKr1vW4PnAenfugthmcDIbPlO9Dq+Pml7FnQtt
BknWgUi8Xjv+J7jyTjPUSzILRuP5pc70ovalZlBk/UGL1ztWieaxp5ph8Ywy
5bEBr7+qFu4QOtDM9m/aYWtpT61mKL0WckYfx6OhLHV+m0IzdDP/fsfPcxxa
3m0k0QzzQ4ajN+DxrC4+m/+Nrxk+XQ6+1iSM1yP7aZ8kp5rY47fLl37q29kE
oWEHKFP8vJ/h1atD5U3Qb1koWiyO1xdk6XHL301Q2T24gIHtzzNQ0M363ARm
Pq6iaDWBBnLurv/vVROIvlS8ZrQKrxf0mvgf32+CqMoPOk7L8PolS31o5noT
EEIsgXxkqv2ozNa5CSSZchXYnsvpfSkFVk0gxCqgivl0x66IbXv+3U9NjfSJ
2tYEYqyC6di/LfQ+63VNsJWfIZKP21vLP2m+ZkUTsLYrSmD8bJbNbpvXBDEC
xmYhy3F+HjHZFMNoZF/n3roWdqa5EVjHtRbh+SL+/Xz5okY4ZHbPYQE/tres
zKUnvRHeqaksoP4j0JkZjtr4D41weiNzBwPGn6zCrrMvGoGe7Owgj39fYmT5
aVNgI2SucEk2E8N84nZHYuhKI1xSTHijwkcgzYhPvp/sG0GWx/V1uBSBLuXU
My6YN4K450Kl+UM0FNvPe3zLrkaYrbeB47lClRzb0gjFfQLXTQQJtFzz1Jbk
NY0QXkOlkFw4P+2CIz2EGvEbqqtpMMabV3Aq33bORpjVM8Xr4+8dbn8GG0CN
9YGaQD0NQs1pDQ2wRlthk/QSAkkv1DK6kd8ARX7MAkoYf4pOyVppDTB54hz3
Kezve+ahqznjG2AVU95wIYEyvbKDssIa2P4afzc4ecuvAThfUtc9cH8bi8Rt
9N0b4CKdz9EN23dq0qCQ264B9uzvv3YJ9/dM+tJ2wrQBZvWYcb7sjnrrr9sA
5WNEk9YkDc07n7fEUKWB7Q+1sElPAZkGaH8cK/7tDw2dy5TtzF/cAB87eEJ6
J2joTbfJwftz/vX3de3Mtdd19dC83ug6D/a39GXTQ+tS68Hg15kQr2EaCsxN
kI8NrQddMWZFQGy/8AKOjW71kHszz4wL+/vUmWMViQfrgVUu9y8N5Sd/S1BW
qgfl/X43okaxPTyCt74uqodH9Z2Kcgzcv4Wd5bbeOmCV/52iocWx6YqpRB2k
muz5oT5NQ1enhLlRTB34azAroOD5Zo9L3a9bdcBXt24suI+GDoTTPu+0roNy
S0fxv/h+Wo+Uf45mHfhV7tYNxeOT0/A4sVuijj2eR4FFW+lTtZCT6t/kO0ND
c+rkBIwra+FZItMhNOS40ael6GstsI7fziFQ+bXqlEMhtaDAOhBDIO185fsV
LrXAKv/dTUMJqwJsLffVwrFHXU3i4zS08lyLRt2GWliylMbzvZ+GbqZvFzrB
UwsSrAJyNDQg+Kirub0GhsJ3M0sMIcsTvek22TWg8kX+xzFsz++Puk86o2rY
9ihxvHByvIGvhfx094/Q0HOTUZ3+IzVQmCGXL4Lb435lJOKqXgNNJ3h5grG/
Lgy/GWAI18Apwm90J75fr/P3t9toNfyS2c3cUoB2h5g9nyyuht+MXU6LsH0V
T+RdghKqYVD1Xb7fAA3Zhv3dudq3GrSzbvM2NNHQ6Iti4WTraqAG5UcTcTxv
Rr3tMdxRDUajC2NicPyWvLmS3iRcDUyxnaRmGnr5bl+I23AVsOQ+G2loY7yM
HV9eFez4QbwdwOP9mTimHhlTBe6uax+9a6OhvZ/JRVt8qth4rfoW0UwcqYLu
CFuvN+00ZPfj/LdjqlXAwVpQY3vS9P0ZS6rAmin/ie27mSF6zLe3EljlZipp
aOnvfiWJ3EqAMeYfiDQURcuc/ymqkh2vTfQnVfqelWC4MUdpYysNpRU4JNSY
VUK3+m+9znoaMixB3i5KlWDE3K7RQ0M15UtN5/NXgl2xnoUKHp99dfv6sPYK
mBP32iK3hobG6378UciogKOKBjHHsf/uNAUVZoVXsPG5vM36tblbBaiyBAto
KLpzq3vf/gp2e0q9vIY+GyrY/v41UC8pvKACxL78xgilIWPGJ0ZcYzk8/DTP
ewj3Vzd2J1crtZxtr+OUZXjZ43IYOGdjIYj9PTmjcM7BpRwUf3E9ji+nobsc
XDvn7C2HvTY3f34qpaEV8ytWPJIth8NPF1hcxf59szCue/3ccsjKPfWzHD+v
wn8D0qrLQOp29qORahrKEDz48MDXMjD5m837FPvTWGidbUdwGTu+dSum1Twd
ymBWf56GnEQLBJbolQGZra/njq+nJaKb3kiWsePhJ335q/pUKThF6yq/wOMR
lt3rV1BaCumWC1bJYzy8XS959HRiKQSKZCkLlNDQlv8YipN+pTDAl73qAI5v
1qbceUGnS0FSerWlKr5vohJeKaNZyh5v49Zz8d9FSuFkmXXhgyLMd+o7vQxH
SsCsIKtlbgUNzewQPtSUXwLax1sLpPH4ArR71rm9L2H3L6qXPs17qwSSj65+
7Iv99d4gpODlsRJ2PFUN7aI3q5WAHl37bD6F89V4+2VCqARKIjh8ikgaOnhQ
cO+x/mJIycgu0KuloSazllUMWjFUz7mjp9hCQy6W34fvRhcDY5mXj3Ym5p9j
ATni14thcskpvpZiGrp38nhYknkxlNrqju/F9onZqJzVVykGl/i5TwJ/Y3vO
cOvUCBTDedYHX2yPU81yl84itn9yziV2zcsqYueD6YWbac9eFLH92eJ2+IGC
exHbH2Iv26Z2mhbB/EZd537c3sHcC6ctlItAtNdHfzG2J2CAI/+sYBGwlv9V
2P/C91Vv9Ray8TStuSrqGVEID7oz+C7TMX7OxPMmvi2EPPuTZ2MJjM/76hez
bxaCfMAp79tlNPQqmVZXdaIQ4CHzAzzO90azXQM7CsGT9YcZ5hOeto/zxArh
nUzro0Js/26lC6KiEwUwqw9OQ94WHLc2lRUAj9ErvvB8GkrxDu7T/VQAtrxc
rcnY3qH3EoctgwuAJY+KxydXHPfrnFMB296TU2ryt3cXgJmjzPuduL9nMrSQ
sLUFkDlHeteRXBoq2mM2k8hVAEx1qAHcvlAHkR+QmQ93W2Uk2zGefFTbo755
5oNbU+T7zzm4v7ucl5q25rP7O1m5yoB/KA9EfJv4DmI8FK3fLqYalwcTu6We
nMmiIW2Pw/0nbfLgb/PJVkPsryTiQkagZB7YsgRVaEha9P6j71V0iLFkfmGk
oQcO8XbNIXSYrZ9AQ3NTaeoC++gwW88C45uvTWDbQjqkKcicHcb+abDiaLLO
pGBWDx/na7zEl3ueFGhN6zCPqKD0P2p3k7dS8MrvlX4vHv8mIzPLlkGSHZ+X
L85vXBRHgpueTqsLbl+wP2iumg0J+7f6PBbH19dRXMkpSRJcL+7k48bP9wXl
vg2qIqCyJOrxBM6How0tHikhBCSd0OLvwOPN2zTXqNWIgNn6IjS0w0tcSnAh
AbPlTfD8WbiNoZZJg9ny6jQkIW2ac9qTxsbTPVfXZ8FbaTCZkFEoi9v/k3HP
6cdgLkimeUtewdeOS2M122JzwZTb++wdHL8a65yli21yIT5YW+UayZxfmtvU
JXPhwR2popRsGkrlmpNiU5UD+Xmc7+1wPDccEgu8H5IDjpdP+Njg++GvVY+n
GuUAS84Rt8c3elC5nTsHPmU36b/G/V3Rc5m/JPM3O/5djwMrt3v+BkEfHclM
7E+L9ndxtlt/Q0uVlo8fvk9s/X39wWA2fH/cKLkI56/a3SaTn7HZbL54XzGz
puN0NtvfIutFJ5ZIZgNv0k59c8xnfu5bKY2qLLA7+3qVG+aDCdqBCLuQLDae
7ETOuT40ygIrDWmfBBqez+0DdNO4s6DeqaWlFuN9148Y4c6MTNjygPPsCuzv
77zZ3Us9M+GOl3frety/0fLSl6sUMmFWPgfzg2TrIfnGDJitB0JDHvIjPFsf
ZrDxLLhlXrq2bga8SI529sH2vdFcdtFo7BeYhK0urMJ42L5njZzFu1/sfCw6
tLn+tOUv8N7bVMiB8Wh3XDfEhf8XyGVJ8fNh/8zYHzLwhHSoPDfXajv2f8jF
0zN3XdKB9fqH+UbuxsVPITLp4Mo6/kVDXst4CzVjgZ0PCXLy6ocXAYzUZo6n
4nhWoT2vz55PY/tz/iGHRXfKf7LjrWTv7/5C/SfMyq9gvF6Pbf4SkcrmX78Q
0pDOmcr2z9d33d9abH+w87EpjVd6mkyBGVHJc8U/aUigRD5g6aYUWMg6UIDj
27lnVC4kmR0fmxmH49rj36HudeRZaxz/h0sDCHOr7+x8T18Xp+KS/o1tb48G
9eLu6m/AfJv0wOMXPtDD/fLuV9g08UtSGeNxpx3f+W89X6CrfDXfBsw35zw3
1OYZf2GPJ/zBXv22z59BU2WuVDeeX3LfOn78I/yZzeeM1ADRZZ6fwCoy86cD
xoNkUdytDY1JsHnjSRULjJ+97VS/jm4SPNx3Sn8zxs/l6R5zy3cf2fkYvZg/
y5X/I5sfC2T/2+jnkgim0Q0qBB7/hNuzTTqxH9j5aRJVxeV6PgH6Y5iEjvFO
iVS+VI9n8x/HmEV8Pmccm38tpMK8Zsj3bLwl7ak+9F/IO/Z6h/eSqJyVVQx7
/j310nLGb/Vb+By45ucqvJ5IJcKKknteg75iy7sAzCdCI9VvOj5Hs9cfjqvE
rqzwfAXy6zL1aRhPWQZW+/R0o4DhLp32F8dX7EK4zEX+SHZ+dm5P7tePjQD6
/F8qfRl4vri/7elr9eeg+TTKMgbf39OWrMlJPWOvF6bV1DqPWz1lz1dxQSn3
03oewfPBExPceHxHWtTUxDwfQj3rOCTGz7YfTe7899nz8VVRt+Uf1APZ8azL
crO1t7rL5l/kfPn7Gk8f6DrvU+iM81VTYWhJhronzNZTwP70Hv6s6nkepi7N
04/EfOH7rjP+qKc1m5/03DKXXpn2Tvt//P4Hp/bFBA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$10456#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
VyuwX9S8hk2vJLNA2vSrH99OgiyTnZYbX2DB2RqnWDZ+3g8Klr6Lwfefa715
hOuN+UNe7B+Fv9d8+A35qxjd1du+aPIUC5TXuTkNcMWowbNUP+sE7ke9danm
auz/JDm9JcdY0MhnSv9RliBF2Du3PogFM7d+KOkDMTL5Q2jvPMiCIa0O3xMl
YuShp6o5tocFp8+af7j9ToxOeR6dc3EnC4xcDLJ9CsQoN+ndbMMdLFgc4mTx
jydG1cQ8lVoPFux6ZDGfgfXLG4yc4ePKAoW2RaN/8X4urfdF4Z8TC7L2EU/6
v4uRoedSdpoDrv+8xTW7H2LklHSBabCBBe3zltF2x4jRyIHLC9utWRAi6JQZ
xnmdt+G2/XkrXI9TfUrFVTGym/9kv9lKFmy5IrTei/UxQKk6zzNlQXp66puX
fWKU3dV059IyFhh/DH5ojfW9pvJ77TojFlQ7TSUtGBEjwTURd1CfBRPEDtE8
YwlKCxuh5s9jwbL83WVPz4mR+Tb63K3aLDi+SGnl5W9i1GWibE1Sx/0um1Je
aS1G8Uq6Ox/OYsHJZSELH+Hnlw0sifKZwYIdc08ZHLsiRt/eW96Qk2eB4PnO
5wV/8f7wwKHypSwLFs6Y8FWuFKOFFzw7D9FZ4KmdeCcA8/tp774JNQoL9kdf
yFvpJUbhNsfnNEwyQZv27NiVDjHS1T23MmyUCbFHZ9/uwuc1TKd56v9lgtT7
U7DuPtZ/Z+7JLwNMSHtkcujCLvz//aLwcpyECfc3EGEWuWJUk11RZipgwm/D
FG0V7LeA0PrP3B4mePRZdbrj/wdl17ahiz+ZENrQQN56XYxeLuPOWNfBhB/c
rirt2Xj+yw8aD7YxYfanA/WaJDy/+qa3/veJCcviB64YNIvR0wa54C1NTOjX
vR5/qV2MfArmpE2/ZYL/vckV+Y/FiB5n8LC4lglKNXpcnYViVLx7RdOOKibU
3ah59gfnkfva9X2sV0xQDfTXtURiNKXpwnr5jAlbElW3L9sjRncm/BYdKsXf
y04dufBMjDZ/C9qoVsKEV6+5GtMV2E/lEQfePmCCbMHJ9EwZrJfMhPiTd5ng
/UGJvxX32+5Y9t0FN5lQcw4ah/E8H9hyp64tF9dfwrzdhudF9uJSXuxVjGfS
45jUCjFaw6qmmWYxIUxcvPIgzleB8MNcbjoTbq+9qLMjVYzS3nRaX0xmwuOi
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
2OpmnDdzL+TdmmicJmqd83j5y3lI/cnciITX08Qsn5dmMi1cpNJ5x2V2xTRR
OmVVuC8OzxPGwkV3SqYJpy17mR/+9CCZZUUUk7vThDZvYrXTVi6ibF/6rSpn
mthQm6ec78RFEzFPHjldmiYuLvrvaq2wBw0Xm13oTJgm7tTfvOmew0W/2p/7
HTo7TcxY9SJm3zqsJ4ql+eiJaSLEaNaLn4d6ULchyJ8PmiZU1m9SjVLFeeO+
rld5D8b7fXCO4ncu+hxVV5m/fZr4lPxB5iiDi5ru22ctdZ4mWv2ufcit7UH1
rY2BlXbTxOknvVZXMb7qKaf1jmiaePdP53WGBhe90G9R/2Y6TfTPobftMOtB
pc7uQ/sMpwlFDdvsC/9xUXHE13d/daeJsZ29CzRHelDBHe+b51SniYAzdil9
J7jov+af4YoK08Sudgb5YWkPujq2y/kGfZoYWaZ8//2sHnRpHt/AaHKK8Hb9
waqs60Epmw+QX/yZIoIZO/WfF/ag8ycl7XaiKcJHLjpe7Qv2T/7hkrauKWJQ
4/srmTk9KLxx8Lz/F/y+5rzMfKIHhQwf9x18P0U4HFz4iOTLRYHao2ZRNVME
37UuIMiUi/ZujGCzX0wRvRu1D1te70F+IdO8a4+miGlXlQWvF/Ygr9zoVwYF
U4ReXO3pw397kEu9VGZ57hSxcl5CZvXWHuQ4GB+wPhO/v3wue7W4B9mqs2xa
EqeITv16ffPUHrTGNnXOzmiMp439cECaiyyOKP3pP4nxU13SrAx6kPHVzIaI
w1PEuLG4deNeLjKsmZ0vu3eK2O9VeaX6Ww/S678Wlu2Nr4/J/Vua2IO0Zmtt
1XOZImyobnPHu3vQbOt8/VL7KSJ9zsuelwHdSClgPsl6zRSR7fR0GRvjZ2UV
fPlgNkVwcnLWC/t6kBQserjDaIpoLzi7apZeD5oSFseJ504RanW3e6aX9KCR
GcY+YWpTRAOldq7axW40aPnUlKE4RcjuX7PB61kPEu8zl8tk4Pr+MPr4OB+5
6S+4ulOTxGSPDw08e9CPF1YvS4YmienBOmXfDz2onVd10Uo8SZxn5xyV8+1B
H+XXH2rkTBJdHwOQrUoParCot/ZqnyTufJVzbsvpQTW7HdQETZNEUC6j9QCv
B1UmN/0+XjtJqLfpPtmJ6ykv3/qW+nKS4C7XPptW04NKOK156Y8niU+1Gmnq
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
ZbDK2Hf/A7AANcc=
           "]]}, Annotation[#, "Charting`Private`Tag$10523#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Automatic}, 
     AxesOrigin -> {-6.931471664140845, 0.20077386934673366`}, 
     FrameTicks -> {{Automatic, Automatic}, {Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "ClippingRange" -> {{{-6.931471664140845, -1.4145860827753985`*^-7}, {
        0.20077386934673366`, 
        0.5477386934673367}}, {{-6.931471664140845, \
-1.4145860827753985`*^-7}, {0.20077386934673366`, 0.5477386934673367}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.20077386934673366`}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Average Path Length\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Average Clustering Coefficient\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8219396833587217`*^9, 3.8219398492333255`*^9, 
  3.821939903481837*^9, 3.8219400610178823`*^9},
 TextAlignment->Center,
 CellLabel->"Out[25]=",ExpressionUUID->"7c260f6d-531b-45e5-b54c-7fda920d3f9a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c9e0439b-2fbc-45ec-8c03-ca92ad8474ac"],

Cell[CellGroupData[{

Cell["The Small-World Property", "Section",
 CellChangeTimes->{{3.8216875648353662`*^9, 3.821687572865981*^9}, {
   3.821711139057105*^9, 3.8217111419862256`*^9}, {3.8218625340152264`*^9, 
   3.8218625444237733`*^9}, {3.821863914847212*^9, 3.8218639219573836`*^9}, {
   3.821944080590269*^9, 3.821944083558071*^9}, 
   3.821944633040752*^9},ExpressionUUID->"58f5da79-203a-4549-a692-\
e792011ba7fe"],

Cell["\<\
Let\[CloseCurlyQuote]s see what kind of graphs we get with this model. Given \
400 people, all having 4 acquaintances, what is the average number of \
introductions needed to reach anyone in the network?\
\>", "Text",
 CellChangeTimes->{{3.8218639910516634`*^9, 3.8218640738557234`*^9}, {
   3.8218691349690504`*^9, 3.8218692145064974`*^9}, {3.8219428707035513`*^9, 
   3.8219428750323305`*^9}, {3.821942923145333*^9, 3.821943156695232*^9}, {
   3.821943190077448*^9, 3.821943201649599*^9}, {3.8219451436229877`*^9, 
   3.821945174413432*^9}, {3.82194527692583*^9, 3.8219452896239805`*^9}, {
   3.821945325462345*^9, 3.8219453462700043`*^9}, {3.821945420262123*^9, 
   3.821945440933035*^9}, {3.821945822542323*^9, 3.821945823117667*^9}, 
   3.8219486737544208`*^9},
 TextJustification->1.,ExpressionUUID->"555a5b64-8403-46f2-b348-1846a35cb735"],

Cell[BoxData[
 RowBox[{"<<", "\"\<IGraphM`\>\""}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"8d0b47ae-e44a-498d-925d-23ce0ce30018"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"IGMakeLattice", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "20"}], "}"}], ",", 
     RowBox[{"Radius", "\[Rule]", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", " ", "=", " ", 
   RowBox[{"Graph", "[", 
    RowBox[{"IGRewireEdges", "[", 
     RowBox[{"g1", ",", "0.03"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g2", ",", " ", 
   RowBox[{"GraphHub", "[", "g2", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before Rewiring: \>\"", ",", " ", 
   RowBox[{"N", "@", 
    RowBox[{"MeanClusteringCoefficient", "[", "g1", "]"}]}], ",", "\"\< \>\"",
    ",", 
   RowBox[{"IGAveragePathLength", "[", "g1", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After Rewiring: \>\"", ",", " ", 
   RowBox[{"N", "@", 
    RowBox[{"MeanClusteringCoefficient", "[", "g2", "]"}]}], ",", "\"\< \>\"",
    ",", 
   RowBox[{"IGAveragePathLength", "[", "g2", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8219442860244465`*^9, 3.8219442966759744`*^9}, {
   3.8219443378011217`*^9, 3.821944370904541*^9}, {3.821944425331608*^9, 
   3.821944469672733*^9}, {3.8219445575746107`*^9, 3.8219446628255253`*^9}, {
   3.8219447084138556`*^9, 3.8219448561430674`*^9}, {3.821944944809713*^9, 
   3.8219449499361844`*^9}, {3.821944988649536*^9, 3.821945024152525*^9}, {
   3.821945063233673*^9, 3.8219450793115544`*^9}, {3.821945182177147*^9, 
   3.8219451941606936`*^9}, 3.8219452742980213`*^9, {3.8219454652169633`*^9, 
   3.8219455773715506`*^9}, {3.821945614792406*^9, 3.821945672399849*^9}, {
   3.8219457416078973`*^9, 3.821945791118625*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"369e6753-8238-4b91-846c-360d2cc500c2"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[CompressedData["
1:eJwl1WVbEAYUBWBQ7G7FxG4UGzBQsRM7EEXFFhsLCzAx1qGbLuzcjE03Y2Eu
zM3cdDPWMxa6dC/PPrzn/oJzbkh8Ysz4wICAgFUi42YiM0FkISvZyE4OcpKL
3OQhL/nITwEKUojCFKEoxShOCYIpSSlKU4aylCOE8lSgIpWoTBWqUo3q1KAm
tahNKHWoSxj1qE8DGtKIxjQhnAgiaUozmtOCKFrSitZE04a2tKM9HehIJzrT
ha50ozsx9KAnvehNH/rSj/4MYCCxDCKOwQwhnqEMYzgJjGAkoxjNGMYyjvEk
MoGJTGIyU5jKNJKYzgxmMovZJDOHucxjPgtIIZU0FrKIxSxhKctIZzkrWMkq
nuBJnuJpnuFZnuN5XuBFVrOGl3iZtazjFV7lNV5nPRvYyCY2s4WtbGM7O9jJ
Lt7gTXazh73s4y3eZj8HeId3OcghDnOE93ifD/iQoxzjOCc4ySk+4mM+4VNO
c4aznOM8F/iMz7nIJS5zhatc4wu+5Do3+IqvucktbnOHb/iW7/ieH/iRn/iZ
u9zjPg/4hV/5jd95yCP+4E/+4m/+4V8ek1H+QDKRmSCykJVsZCcHOclFbvKQ
l3zkpwAFKURhilCUYhSnBMGUpBSlKUNZyhFCeSpQkUpUpgpVqUZ1alCTWtQm
lDrUJYx61KcBDWlEY5oQTgSRNKUZzWlBFC1pRWuiaUNb2tGeDnSkE53pQle6
0Z0YetCTXvSmD33pR38GMJBYBhHHYIYQz1CGMZwERjCSUYxmDGMZR8Z4JzKB
iUxiMlOYyjSSmM4MZjKL2SQzh7nMYz4LSCGVNBayiMUsYSnLSGc5K1gZ+P//
+A+Q3qse
      "], {Null, CompressedData["
1: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
Ttr3KMs6bJPlay3WzLnO67Kte+PfSswe7jOOYjtzdVmO9Xise/9jtjxj3cT7
7PhaXC7L91EqsD47mEn7KkewAf/+mTfL91kqsiE7+rtL+y6V2IidzMTX5orW
QdiY8Y68kOX7MlXYhF3MpH2aqmzKrmbSvk01NmM3M3F/rIHvnDdndzNpX6cG
W7CHubTPU5Mt2dNM2vepxVbsZSbtA7Vmb/em/aB4Rx9rqA7bMN7Vx9pJ+0N1
2ZZ9zaT9oqPYjv3MpP2jWAexZs503t9MOx7N9jxhl5mwPjvwxCxfa2EDHseT
zKT9p4bsyAFm0n5UI3biQPfG70Yx29hndOYg98bP/DHbxGd04WAzaf8q1kGs
mfidLM6HmEn7Wc3YjUN3mQmbszuHmUn7XS3Yg8PNpP2vluzJEWbSflgr9uJI
M2l/rDV7c5SZtF/Wh6Pdm/bNYi8j1lBb9mW86461k/bR2jF+1grHmkn7asey
P8eZSfts7bmF482kfbcOnMcJZk7gcYx1E3/3E82kfbmOHMBJZtI+XScO5GQz
ad+uMwdxipm0j9eFgznVve+a7cohnObvsYujG4dyupm079edwzjDTNzfw39H
nA/nTDNpX7AnR3CWubRP2IsjOdvMCPbmKM4xM5J9OJpzzaR9xTGc58+X9hdj
zyfWUD+OZez9xNpJ+439OY4LzKT9xxM4ngvNpP3IWAexZuJ3vjhfZCbtT57E
iTx1l5lwACdxsZm0fzmQk7nETNrPHMQpXGom7W8O5lQuMzOFQziNy82k/c+h
nM4VZqZxGGdwpZm0PzqcM7nKTNovHcFZXG0m7Z+O5GyuMZP2U0dxDteaSfur
ozmX68zE/bF24neNWDvvu77ezB2MdbRHlu/Fpn3Y2BuLNTSOCxh7ZLF20r7s
eC7kJjNpn3YCF3GzmbRvO5GncouZtI87iYt5unsfNzuZS3iGmbTPO4VLeaaZ
tO87lcu41cxSTuNynmVmGadzBc82k/aJZ3AlzzGzkTO5iueaSfvIs7ia57k3
3uHE7GyfsYbnm0n7zHO4lheYSfvOc7mOF5pJ+9DzuJ4XmUn70vO5gRebSfvU
G3mJe9N+9aVZcQ0t5Cb+MyuunbR/Hesg1ky8A43zy8yk/exTGesm9hmf22Um
XMzTeYWZtN+9hGfwSjNp/3spz+RVZs7gMm7l1WbS/vhynsVrzGzlCp7Na82k
/fOVPIfXmUn76bEWYs3Eu/Q4v95M2l9fzfN4wy4z4RqezxvNpP33tbyAN5lJ
+/HreCFvNpP259fzIsbv/xuzfL9+Ay/mrWbS/v1GXsLbzKT9/Et5u3vTvn58
fYs1tJmXMfZcY+38k1t4Oe80k/b9T+cVvCvL11p4BmPdxP7sdjOpF3Am491y
eI+Z1BPYyqt5r5nUGziL1/DfZlKP4Gxey/vMpF7BObyO95uJ++d7DxTn17v+
gJnUOziPNzD2hM/N8h7C+XyeD5lJvYQLeBMfNpN6ChfyZj5iJvUWLuItfNTM
zbyYt/IxM6nXcAlv4+NmUs/hUt7OJ8yk3sMdfNK9qf8Qe9Kxhi7nnYy96Vg7
qQ9xBe/i02ZSP+JK3s1nzKS+xFW8h89m+VoLr+a9fM5M6lNcw3/zeTOpX3Et
Y38lfMFM6ltcx/v5opnUv7ieD/AlM6mPcQMf5MtmUj/jRj7EV8ykvkasg1gz
8Q409tFjL+JG98fPOzf7jEf42i4z4S18lK+bSf2OW/kY3zCT+h638XG+aSb1
P27nE3zLzOO8g0/ybTOpH/IU33Fv6onE7z+xhuLfaPi083jvFGsn9Ubu5jOM
Pf27srxHcg+f5Xtm4h383dZBGOvm/ay4F3eNuXusg/B5fmDmOd7HF7jNTOqh
3M8X+aGZ1Et5gC/xIzMv8kG+zI/NpN7KQ3yFn5hJPZaH+So/NZN6LY/wNX5m
JvVcHuXr/NxM6r08xje43UzqwTzON/mFmdSLeYJv8UszqScT6yHWTOyxxflX
7v3Q7FN8h1/vMhO+y2/cm/o00XGINfQM/8voOsTaSf2aZ/kev8vyzk34HN/n
91newQmf5wf8IcvXWvgCt/FHMx8w1sEZchw/mUl9nZf4EX82k/o7L/Nj/mIm
9Xle4SfcYSb1e17lp/zVTOr7vMbP+JuZ1P95nZ/zdzOpD/QGt/MPM6kf9Ca/
4J9mUl/oLX7JnZ7jm463+RXj5e9bWd4neodfs+C9XuoXvctvGN2Pd7K8bxTr
aGuWd49S7yi6IP+xDsLvGJ2QWDuph/Q+v2d0RN7L8l7SB/yB8XPu+1neU9rG
Hxkdkg+yvLf0IX9ivF/fluU9po/4M6Nj8mGW95o+5i+MzslH7r/GOojzHYy9
6Y+zvPf0KX9lvAf9JMt7UJ/xN0ZH5dMs70V9zt8Z72U/y/Ke1Hb+weiwfJ7l
vakv+Cej07I9y3tUX3Ino+PyRZb3qr5i5np0Xr7M8p5VrIMSchzRgfnK/eE8
7sboxMRM6mF96zN2dx5dmW+yvJe1B+P7/rdZ3s+Kzsz/rIOwsvPYB4u1k/pa
P1hLJZzH75HfZ3l/60efUdJ5dGt+yPI+108+Yy/n0bX5Mcv7XT/7jL2dR/fm
pyzve/3iM0o5jy7Oz1ne/9rhM/ZxHt2cX7K8D/arz9jXeXR1dmR5P+w3n7Gf
83gOv7q/tHVQ2efEEV2e37K8P/aHzzjAeXR7fs/yPtmfPuNA5/He/48s75ft
9BmlPZ/UOUt9s4yxbuL9bHSBdmZ5/6zAgxndoJhJfbTdeAjj55OYOZi7M9bN
Qz5vN/fvsI7iKMPaZlJ/rSyjU7RHIe+xRbco1lAJHs7oGMXaSb22kizHemZS
z20vlufRZlLvbW9WYH0zqQdXirFudsvyblzqxe3DimxoJvXkRrMSG5lJvbn9
WJnRadq3kPfo9mcVNink3brwAMa6+TnLu3ZxfwPrIM6rsZmZ1LsrzeqMTtSB
hbyHdxBrMDpSm62f0tZBWJMtzaSe3iGsxVZmUm/vUB7J1mZSj68Ma/MYM6nX
V5Z12MZMbdZlW/emvl+8vzvMOgjrMbpYsXZS/688j2Z7M3F/C1+v4qjPDmZS
P/AINuBq90bnpYJ1EDZkRzOpP1iJjRjdrr//f35mK7MxO5tJ/cIqbMIuZlLf
sCqbsquZ1D+sxmbsZib1EauzObubSf3EGox1syPLO4txf+xnVHfekj3NxP3t
fL2KoxWjW1azkPcZj2RrRtesViHvN9bmMexjJvUd67ANjzeT+o912ZZ9zbRh
O/Zzb+pFRlftKOsgbM/orMXaOZb12YEnmkm9yQaM/Z94P5+6lKlH2ZAdOcBM
6lU2Yqyb+PlhoJnUs2zMzhxkJvUum7ALB5tJPcym7MohZlIvsxm7caiZ1NNs
zlg38ft1U+ugmSPWQXw/6OE8OnWFQt7jbMmeHGEm9TpbsRdHmunJ1uzNUWZS
7zPWQayZ5c5Hm4n7y8mt/fdGf2XMLjPHWA9hX0YvJNZO6om2Yz+ONRP3x/vu
/s7HuTf1R6PTd6x1EN8/T3Qe7xVi7aQ+6XE8iRPNnMiOHMBJZk5iJw7kZDOp
f9qZgzjFTOqjduFgTjWT+qmxDqJ31tn5NDOpr9qNQzndTOqvducwzjCT+qw9
OJwzzaR+a0+O4Cwzqe/aiyM528wI9uYozjGT+rB9OJpzzaR+7PEcw3lmUl+2
L09mvI86JMv7s/04lqeYSX3aWD/Re+rrfIGZ1K8dz4XuTT3b6D6eYB2EExnv
AWPtTOAATuJiM6mHO5CTucRM6uUO4hQuNZN6uoM5lcvMpN7uEE7jcjOpxzuU
07nCTOr1DuMMrjSTer7DOZOrzKTe7wjGumlbyLvAqQc8krO5xkzqBY/iHK41
M5uxDuLnzpHO15lJveExnMf1ZlKP+GTO5wYzcf+/rKO/9/5c32gm9YzHcQGj
ixprJ/WOx3MhN5lJPeRF3Oze1EeO/uoE66BUIe8mp17yZC5xT+onT+FS96Se
8lQuc0/qK0/jcvek3vJ0rnBP6i/P4Er3pB7zTK5yT+ozz+Jq96Re82zG33e7
Qt5vnsO17lnDuVznntR3nsf17km95/nc4J7Ufz6FG92zgQt4mntSH3ohN7kn
9aIXcbN7Uj96i/9ts7+rJf5ulrq+TF4ur5BXyqvk1fIaea28Tl4vb5A3yqfJ
m+TNnlv8uf4f+8djGA==
       "]}, {
      GraphHighlight -> {168, 205, 355, 97, 289, 176, 89, 148, 49, 265}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9mGk01V/cxe+9Lte9uPNkHpOQCkWlfltFaaAilZSiwVhKg1CkSXM0ESGF
SJSoZJaKQkIpf03KkJAp8/DcZ61nPefNeXFefM86a++9Pvtouu5Zu4NCIpEu
k0mk/901pfaN5TjyoVu6aXKDmyK2Y2XeQboYqUsVzSuWCmGyNMc2bJYI0r9u
Kc65KESc/sv8MzQusoNuGS6tE+CacOxE9G4e+G1W10AWgzE3I9DzsABv0pO3
6jsKcNv/x/03QxxcmbB4U+TCQ2tXuuyWCDZa7sp8fj5dhHKXzcUtOxQQWru1
Nf+sEJfvnS0+pcaAkG/osPawCInzVUZ96mmY0y/ro5UpRDPduaWjVAphaj1l
ZVeEyFEUW1wxI8HYc6VedrgAVXW6qKwYJpbd+XIumiJASdTGo3ZTB4nLHkaK
jX08aLTfPPH5UBfh4eh837iMC//3bpGaa/4QvaInPcJFHNy7npjY5fGPIPXW
tB5ZKI8QlvMfh2VvCfpNYxWhAhOk/1uhxb7hZ5PlQK5N8s+7KEZJx7i4+T9F
rOzI6tFUECE90r3Zka4EX/mBJfUiIVKj6suO3FBE0JfoKIUZQgS5+Q4s/yvC
hneFV6QiuCDlHf/suVcAv05z8/6HPCT5eWUK3PhQ/1XwgtfIwyf3N7PErjzk
R9nkpXlx4LQ79NKqjXy4265MvTqFicgrD2JzcwRgGAfKejuw8LrrgOdfcx5u
vOmotXZmYVl+o0WBOx+32qveLL0vDbnpVdu3KQqwIPo4k95LxTvKxiJ3KS4G
zF9k3mmjYsXm/KZHB7mweHjszOsfw8TQl0P5N1R4EMeKokU/pOFoGal96wgH
CZpzepV0JwheznlFvTQ22mw2e/+d20Mc2M0kF9xh4d5k+ZG0X9+JWfVpHort
CogPnyj6tqedkIpmbdluQkMuO3ZtnKIIASnVWSlOyliycoXS5vt8XJjtZbu9
Uwhe3Gfrye9iLAop1dzmKMSjLm730jg+bBdoBtt/FkPF9sboSRs+mEVTB65v
EuFLRv2h8FVcGLWcitCpF8J4ide2RTocuO8vEwZ1SXQpR7qwbrkCwqp4KVll
fCjHvhdb3GVDO/q8tfZ+DtQnwu67pNNhmivQcdHjY/1ZZRnFWQrY8lbWulyK
h+P9a70DPlBR3Tr11nw1PvxPLAzb2kNGc+khhcIiLnytzi1LXjVGhDBNlnYs
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
pUv6T0bA3BiTsH5i+aef+ZN3Jb7JXXi6xWyE8Hvb37GEEKAre5ZxS9oAce/Z
aqF9Eg+FFroVswwoKLyc9lL/igAZ8/YXM5ZI47x5Wt2xOwLcyK07Me3kKKFQ
Mdq65RwPbbZek8WzO4nDFTOPPfbi4YT4ZiNLv4VoKaxZ8/OcUMJlfw3DlnCQ
C0e1g0o8XKE96nSJZEO2x6FNu0mA7Sr/ys2NmFi7epnJQkmfW6Yl7aaZRkec
VO1bUykR+FEt93dUy0BgXflifKoIXkW5PtrXpbC6ueIo7ZAI17PZ+6/7TBIL
lU0Ym9QlvF5h+ajBdZQwMrgbSpUX4JnBDUXByzHCed3LJyr7OFhWvTJQX9IL
GueOMjOpPJSXpvMYyaPEzo+Z96yc2HgSX35ltw0ZN3lKk8YFPPynH7QjevcE
MfxrY57baT5+emmFXKgYJdblPHEP3y/E9OdzMp1Dx4mGlcu1yQ9EOOOc/ZQ1
NEyEDQ1+jygWonZWYXqsLglrz9aoGnFE+OQdzlOLGCFO9Z6i6lmIcfXbRiGz
oZ3oQBN7RoQI4tbo1n1H+ohFwYzyx6aS3v55/fKrkvzvff967yhZCN9Lf9Ie
LpXH3E3NFypjBFC52Jmf6ysPv9x3ru+6Jf7NOD9pd4GOs74P9U/FCrGQFi91
+p0c3A3dTmg3idGWt73xXR0VTl6fjaW+KoI+KbCSnUNFidjA1WyJGBFNBjPD
JXndt7j5U7I1D/6m21qDD1CR367EtlcV4NtHqmNMMwkHa+k2T1g8yLV9dQps
lIZFXsFqQ6YAqvLHNLRnUvEsb65y6ns+dkxESrVNoWFhvHTb5UUieHTPNvNe
RsNtQVHF6GExPqtNZ5kRUtg9GpiTcUcRSVvp5nN2kuA+Pcyba6GEDc2sg+ut
xwhWvfZM9wwltLZKadsP9RPWTXHras0UUWfoUv7Ho4dwuSwtrFJTwvnsp8l+
51qIVf7lzjWSfj9ss77b6JgcxnQvttKCRFi+w/XLYq48lEz7MvXCBejVPR/R
mSoL9RvtTc1iJfRJ/b2R4EtHGWVFWLq6ErC7MNfDUAZBUj1nz40qITu0ZZ7V
BykY+7Wd+kNRRoKfe+d+PgVtZg3Bo1AEv1RbmyekIGHplQtBdmK8X3r9a20p
Dbq3o+3sngrR/uS9WV6ANGIPqJWGVQoh+OBd2fCChun1Xs4HBAK89Bity/pB
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
po26FTOujO5h4H8ArsDPsg==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[CompressedData["
1:eJxN2nV4V3Wgx/EdDFJCurs7xmB0bjSM3BiDbXRsY8To7kbEwMAWVBTFArsb
W7EVFREDExRF7nPuef2ee//geR3O9/05onKIbbWzclNyCsXFxe0pEhcXGsT9
nxexPCuwMdtqL+LFLM8KrMiiQWRmEG0utr2EFViRldiUSUG0ucT2UlZkJVZm
M2bbXMrCrMTKrMLm2sIswiqsyhZcxPDHV1gfWpRVWJXV2JI/2hRlMVZlNVZn
K20xFmc1VmcNttYWZwlWZw3WZBttCV7GGqzJWmyrvYwlWZO1WJvttCVZirVY
m/UYry3F0qzNOqzL9trSLMM6rMt6TNCW4eWsy/rsoLmcZVmfDdhRU5blWJ8N
2JCJ/NemHBuwIRuxk6YhG7FzXPTuVWBFNmYTduHEIGor2lRiYzZhU3bVVmIT
NmUzdtNUZhU2Y3N2Z/jjCNuqNs3YnC3Yg9d4ZlVWYwu25HFNNVZnC7ZkK/bi
EaYE0ba6Z9RgS7Zia4a/vlXXhdZkK7ZmG/bR1mQttmFb9mVa7DyINrVsa7Mt
2zGJk4KorW1Th+0Yz2RNHdZlO8azPfvxnE1d1mNrxrM9E9iflYNoW88z2jOB
HThAU58NmMAO7MiBHBBEmwa2DdmBHZnIQfzNpiEbsSMT2YmDtY2YyE7szCGa
TuzMoXwpLnoHm7Apu7Arh2mashm7sCu7MYUHbZqxObuyG7tzOFcF0aa5bQt2
Y3eO0LRgS3ZnD/bkSH5m05Kt2IM92YujtK3Ymj3Zi705WtuabdiLvdmHY5hu
04Zt2Zt92JepLBNE9gyibVvPaMe+TGKaph3jmcRkjuVP2ni2ZxKTma5pzwQm
sx/7c5w2gR3Yj/05gBnaDuzI/hzAgRyv7chEJnMAB3IQJ9gkshMHchAHM5NV
g2jTybYzB3EwhzBL25mDOYRDma0ZwqGcGBe9g13ZjcOYwkma7hzGFKZyMrOD
6FndPbMHUzicIzhF24M9OZwjOJU72CCINj1te3EEp7GAu1g7iDa9bHtzJEdx
NDOCqO1t04ejOJpjOEPbh305mmOYypnavkziGKYyjbNYKog2SbbJTGUaxzKH
9YJok2zbj2OZzlxNP/ZnOscxj+H/j3660AFM5zhmcDYvC6LNANtxzOB4ZjNf
O5CDmMHxnMA52kEczNEczwnM5FzmB9F2sGcM4QRmMovztEM4lJnMYjbna4cy
i9mcyALNRC6Ii97FFA7nJE7mQs1wjuAkTuYULtKO4EhO5hRO5WLtSI7iFE7l
EtYPonaUzWhO5TRO51LtaI7hNE7nDC7TjmEqp3MGZ3K5NpVpzOQMzuQsrrBJ
41hO50zOYg5X2qRzFnOYy1X81LPTOY45zGUeV2szmMs8zuYaz8rgeOZxNvO5
VjueEzib+ZzDddoJzGQ+53Au12szmcU5nMt53KDNYjbnch7ncyPvs8nmPM7n
JmcTWcAFfJAvawq4gFu4MIjesfC9CZ3ChVzErbxGO4VTuZCLuU0zldO4iIu5
hNu10zidi7mES7mDLYNoM912BpdwGXeydxC1M2xmchmX8wrNTM7iMi7nCu7S
zmIOl3MFV/JKbQ5zuYIruYq7tbnM40qu4mpepc3jbK7iaq7h1drZzOcaruUW
XqPN5xyu4Tpeq5nDuVzH9dyjmct5XMf13MDrtPO5nhu4kdczPoieOd+zC7iB
G7mJN2gLuIAbuYmbeaN2ATdxM7dwL7/UbuYW3hQXvUuLuJhbuY03axZzCbdy
G2/RLOFSbuN27tAs5TJuZ+x8J2/TLuNy7uBOXsHb+QL7BtF2uWes4E7u4h08
yBFBtFlhu5JXcBev5J3alVzFXbySu7lPu5pXcjev4n7PWs013M2reDXv4sgg
2qyxXcureDXv1qzlOl7Na3mPZh3X8xpeyz08wPDja6Hdg2i73jM28Fru4XW8
V7uBG7mH1/F63qfdyE28jtfzBh7UbuJm3sAbeb9mM7fwBt7IvXxAu4U3ci9v
4iHN9dzLmxj+vhq+Y9u4nTfzFj6k2c4dvJm38FY+zPD34+360J28hbfyNj7C
y+2qBNF2p2dcwVt5G2/XXMFdvI2x88MsFES2DqLNLtsreTvv4J08wqMM/x61
yy50N+/gndzHx7S7eRXv5D7u52E+zk9sr+LV3Mf9vItPaK/mft7Fu/mk5hpe
y7t4N+/hU9pruYd38x4+zaMsHESbPbbX8R4e4L18Rnsdr+cB3sv7+Kz2et7A
e3kfD/I57Y28jwd5P5/3rBu5lwd5Px/gC0wPos1e25t4Px/gIb6ovYkP8BAf
5EuaQ3yQ4Z+Pw3fyFt7Kh/gwX9Hcytv4EB/mI3xVextv58N8hI/yNb5hczvv
4CN8lIf5uvYO3slHeZhH+Ib2Tu7jYR7hYzyq3cf9PMLH+CabBFG73+YuHuZj
fJxP8C2esL2Ld/NxPsEn+bb2bt7DJ/gkn+I72nt4gE/yKT7Nd7UHeC+f4tMM
/70POD/gfugzfJbva+7jQT7DZ/kcP9Ae5P18ls/xeX6ovZ8P8Dk+zxd4TPsA
D/F5vsiP+Ln2EB/kC3yRL/Fj7YN8kS/xZX6ieYkvM/y4QviOPcxX+Co/Y/sg
ciIXBNHmEdtH+Qpf5Wv8XPsoD/NVvsbX+QWzgmhz2PYIX+cbPMVpQdQ+ZnOU
X9k+xsf5Bo/yTR7XPs4neJRv8i1+rX2CT/JNvsW3+Y32Kb7Ft/kOv/Wsp/g0
3+Y7fJcnuDqINk/bPsN3+C7f43faZ/gs3+V7fJ8nGQTR5lnb5/ge3+cH/J5L
g2jznO3zfJ8f8EOe0j7PF/gBP+Qx/qB9gS/yQx7jR/xR+yJf4jF+xJ80L/Nj
fsKfbT/mJ/yUp20/4af8JS56d17la/yMn/NXzWt8nZ/xC/6meZ1v8HN+yd81
b/Aov+CX/Ip/aI/yTR7jl/yKx/knE4No+6ZnvMWveJxnNG/xbR7n1/yGZ9ki
iDZv277Dr/kNv+Vf2nf4Lr/htzzBv7Xv8j1+yxP8jue07/F9nuB3PMl/tO/z
A37Hk/ye/7JiEG0+sP2QJ/k9T/G89kMe4/c8xR/4n/YYP+Ip/sAfeUH7ET/m
j/yJ4RfnfeQ89BN+zR/5E39m+OvOx/rQT/kzT7OQrk8QtZ/a/MzT/MXZaca+
f3EQvVvhexP6BX/lb7wkiJovtF/yV/7G33mpPvx75Rf60K/4G3/nHwz04d9b
vtSHHufv/IN/soi+URBtjtt+zT/4J88w/DjGcV3oN/yTZ3iWxYKo/cbmW57h
Wf7F4kHUfmtzln/xb5YIouaE9jv+xb95juHfg0/oQk/yb57jPywZRO1Jm+95
jv/wX4afdz2pCz3Ff/gvz7N0ELWnbH7gvzzP/xh+PcYpXeiPPM//eIHhz6Mf
dKE/8T9eYJyuLFODaPOT7c+8wDjn5YKo+Vkb5/sBC7E8C4KoPW3zCwP3C/Ei
VmD458rT+tO607rQixn+eveL+7+4H1opiN658P0J/Z2XuF+Z4ef/f3Me+gcv
cf9SFmb4cZ/fdaF/8lL3C7MIw6/j+EMXeobnWdh5ERZltSDanLE9yyLuF2Ux
Vg+i9qzNXyzqfjEWZ40gav+y+ZvF3C/OEizJmkG0+dv2HIu7X4KXsVYQteds
/mEh90uwJGsz/LqEc/pznndO979fuxdEZ/9qzrOk+6VYmnWDqD1v8x9LuV+a
ZRj+88/rQi+wtPtlGL5v/zkPjfP9Moydh+/ZBecX/Py/4PzC/zsvx4ZB1AYs
xLIsx/JsxOk2F7Ecy7MCB3jmRSzPCqzIJpqLWYEVWYlNOUpbkZXYjAOD6N26
lIVZmVXYXFOYRViZVViVLbRFWJRVWJXV2FJblMVYldVYna20xVic1VidNTTF
WYLVGTuvyTbaEqzBmqzFtszmNJvLWJI1WYu12Y4DbUqyFGuxDuM1pViatVmH
dTWlWYex+/WYoCnDy1mX9VifHbSXsyzrsT4bsKO2LMuxARsyUVOO5dmADdmI
nbTlWYEN2YiN2VlbgRXZiI3ZhF20FVmJjdmUXTWV2IRN2Yzd2FPblM0Yfh4q
fIeqsCqbswV7aKqyGpuzBVuyp7YaW7AlW7Eze2mrswZbshVbc522BmuyNduw
j6YWW7MN27IvUz2rFmuzLdsxSVObddiW7RjPZG0d1mU7xrM9+zHNpi7rMZ7t
mcD+2nqsz/ZMYAcO0NZnAyawAztqGjCBHRg7T+QgbUN2ZCI7cbCmERszkZ3Y
mUO0jdmEndiZXThU24RN2Zld2JXDtE3ZjF3YjSmaZuzKbuzO4Zpu7M7w8+nh
u9OCLdmDPTlS04o92JO9OMozWrE1e7IXe2tasw17MXbeh2OYb9OGbdmbfdhX
05bt2Iex8ySmadsxnn2ZxGSO1cazPZOYzH5M17ZnApPZj/05TpvADuzH/hyg
6cCOjN0f76wjEzmQgzhBk8hOHMhBHMxMbWcO4mAOYZZndWYXDuYQZmu6MJlD
ONRZV3Zj7P4wpnCSthu7cxhTOJyTtd2ZwuHM4BTNcI7gVIa/H4TvRk/24khO
c9aLvTmSozld05t9OIpjOEPTh305mmOYypnavkziGKYyjbO0SUxmKtM4ljna
ZPZjGscyV9OP/TmW6RzHPG1/DmA6xzGDs7UDOJDjmMHxzNcO5CBmcDwncI52
EAdzPDM5VzOYQziBmcziPO0QDmUms5jN+dqhHMYsZnMiC7TDmMJsTuQkLuAq
mxQO5yRO5kLNcI7gJE7mIs0ITuYUTuVizRRO5ZIgemdGcTSnM49LNaM5htM4
nTO4TDuGqZzOGZzJ5dpUpnEGZ3IWV2jTOJYzOYs5XKkdy3TOYg5zuUqbznHM
YS7zuFo7jhnMZR5nc402g+OZx9nM51rteE7gbM5xNoGZzGfsfC7XazOZxTmc
y3ncoM3mXM7jRs/I5kTO43wWcJN2IidxPgu4gJu1k1jABdzibDKncAEXchG3
aqdwKhdyERdzm3YqF3Exl3C7ZjGXcEcQvSvTOYNL3ZvBmYzdX8blmpmcxWWM
na/QzGIOlzN2vlKTw1yuYOx8lSaXeVzJ2PlqTR5ncxVj52s0s5nP1Yydr9Xk
cw7XMHa+TjOHc7mWsfP1mrmcxw3uzeN8rmfsfCN3aOezgBu4kZs0BVzA9dzI
WLdZu4ALuYmx8y2aRVzPzYydb/WMRVzMLYydb9Ms5hJuZex8u2YJtzF2f4ez
ldzO8H74c3kZl7uOucL1Ct9WcpXrmKtdx1zjOuZa1zHXuY653nXMDa43uo65
yXXMza5jbnEdc6vrmNtcx9zuertv4X+P/wG2y2MY
          "], 0.0647252240115879]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.0647252240115879], DiskBox[2, 0.0647252240115879], 
         DiskBox[3, 0.0647252240115879], DiskBox[4, 0.0647252240115879], 
         DiskBox[5, 0.0647252240115879], DiskBox[6, 0.0647252240115879], 
         DiskBox[7, 0.0647252240115879], DiskBox[8, 0.0647252240115879], 
         DiskBox[9, 0.0647252240115879], DiskBox[10, 0.0647252240115879], 
         DiskBox[11, 0.0647252240115879], DiskBox[12, 0.0647252240115879], 
         DiskBox[13, 0.0647252240115879], DiskBox[14, 0.0647252240115879], 
         DiskBox[15, 0.0647252240115879], DiskBox[16, 0.0647252240115879], 
         DiskBox[17, 0.0647252240115879], DiskBox[18, 0.0647252240115879], 
         DiskBox[19, 0.0647252240115879], DiskBox[20, 0.0647252240115879], 
         DiskBox[21, 0.0647252240115879], DiskBox[22, 0.0647252240115879], 
         DiskBox[23, 0.0647252240115879], DiskBox[24, 0.0647252240115879], 
         DiskBox[25, 0.0647252240115879], DiskBox[26, 0.0647252240115879], 
         DiskBox[27, 0.0647252240115879], DiskBox[28, 0.0647252240115879], 
         DiskBox[29, 0.0647252240115879], DiskBox[30, 0.0647252240115879], 
         DiskBox[31, 0.0647252240115879], DiskBox[32, 0.0647252240115879], 
         DiskBox[33, 0.0647252240115879], DiskBox[34, 0.0647252240115879], 
         DiskBox[35, 0.0647252240115879], DiskBox[36, 0.0647252240115879], 
         DiskBox[37, 0.0647252240115879], DiskBox[38, 0.0647252240115879], 
         DiskBox[39, 0.0647252240115879], DiskBox[40, 0.0647252240115879], 
         DiskBox[41, 0.0647252240115879], DiskBox[42, 0.0647252240115879], 
         DiskBox[43, 0.0647252240115879], DiskBox[44, 0.0647252240115879], 
         DiskBox[45, 0.0647252240115879], DiskBox[46, 0.0647252240115879], 
         DiskBox[47, 0.0647252240115879], DiskBox[48, 0.0647252240115879], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[49, 0.0647252240115879]}, DiskBox[50, 0.0647252240115879], 
         DiskBox[51, 0.0647252240115879], DiskBox[52, 0.0647252240115879], 
         DiskBox[53, 0.0647252240115879], DiskBox[54, 0.0647252240115879], 
         DiskBox[55, 0.0647252240115879], DiskBox[56, 0.0647252240115879], 
         DiskBox[57, 0.0647252240115879], DiskBox[58, 0.0647252240115879], 
         DiskBox[59, 0.0647252240115879], DiskBox[60, 0.0647252240115879], 
         DiskBox[61, 0.0647252240115879], DiskBox[62, 0.0647252240115879], 
         DiskBox[63, 0.0647252240115879], DiskBox[64, 0.0647252240115879], 
         DiskBox[65, 0.0647252240115879], DiskBox[66, 0.0647252240115879], 
         DiskBox[67, 0.0647252240115879], DiskBox[68, 0.0647252240115879], 
         DiskBox[69, 0.0647252240115879], DiskBox[70, 0.0647252240115879], 
         DiskBox[71, 0.0647252240115879], DiskBox[72, 0.0647252240115879], 
         DiskBox[73, 0.0647252240115879], DiskBox[74, 0.0647252240115879], 
         DiskBox[75, 0.0647252240115879], DiskBox[76, 0.0647252240115879], 
         DiskBox[77, 0.0647252240115879], DiskBox[78, 0.0647252240115879], 
         DiskBox[79, 0.0647252240115879], DiskBox[80, 0.0647252240115879], 
         DiskBox[81, 0.0647252240115879], DiskBox[82, 0.0647252240115879], 
         DiskBox[83, 0.0647252240115879], DiskBox[84, 0.0647252240115879], 
         DiskBox[85, 0.0647252240115879], DiskBox[86, 0.0647252240115879], 
         DiskBox[87, 0.0647252240115879], DiskBox[88, 0.0647252240115879], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[89, 0.0647252240115879]}, DiskBox[90, 0.0647252240115879], 
         DiskBox[91, 0.0647252240115879], DiskBox[92, 0.0647252240115879], 
         DiskBox[93, 0.0647252240115879], DiskBox[94, 0.0647252240115879], 
         DiskBox[95, 0.0647252240115879], DiskBox[96, 0.0647252240115879], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[97, 0.0647252240115879]}, DiskBox[98, 0.0647252240115879], 
         DiskBox[99, 0.0647252240115879], DiskBox[100, 0.0647252240115879], 
         DiskBox[101, 0.0647252240115879], DiskBox[102, 0.0647252240115879], 
         DiskBox[103, 0.0647252240115879], DiskBox[104, 0.0647252240115879], 
         DiskBox[105, 0.0647252240115879], DiskBox[106, 0.0647252240115879], 
         DiskBox[107, 0.0647252240115879], DiskBox[108, 0.0647252240115879], 
         DiskBox[109, 0.0647252240115879], DiskBox[110, 0.0647252240115879], 
         DiskBox[111, 0.0647252240115879], DiskBox[112, 0.0647252240115879], 
         DiskBox[113, 0.0647252240115879], DiskBox[114, 0.0647252240115879], 
         DiskBox[115, 0.0647252240115879], DiskBox[116, 0.0647252240115879], 
         DiskBox[117, 0.0647252240115879], DiskBox[118, 0.0647252240115879], 
         DiskBox[119, 0.0647252240115879], DiskBox[120, 0.0647252240115879], 
         DiskBox[121, 0.0647252240115879], DiskBox[122, 0.0647252240115879], 
         DiskBox[123, 0.0647252240115879], DiskBox[124, 0.0647252240115879], 
         DiskBox[125, 0.0647252240115879], DiskBox[126, 0.0647252240115879], 
         DiskBox[127, 0.0647252240115879], DiskBox[128, 0.0647252240115879], 
         DiskBox[129, 0.0647252240115879], DiskBox[130, 0.0647252240115879], 
         DiskBox[131, 0.0647252240115879], DiskBox[132, 0.0647252240115879], 
         DiskBox[133, 0.0647252240115879], DiskBox[134, 0.0647252240115879], 
         DiskBox[135, 0.0647252240115879], DiskBox[136, 0.0647252240115879], 
         DiskBox[137, 0.0647252240115879], DiskBox[138, 0.0647252240115879], 
         DiskBox[139, 0.0647252240115879], DiskBox[140, 0.0647252240115879], 
         DiskBox[141, 0.0647252240115879], DiskBox[142, 0.0647252240115879], 
         DiskBox[143, 0.0647252240115879], DiskBox[144, 0.0647252240115879], 
         DiskBox[145, 0.0647252240115879], DiskBox[146, 0.0647252240115879], 
         DiskBox[147, 0.0647252240115879], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[148, 0.0647252240115879]}, DiskBox[149, 0.0647252240115879],
          DiskBox[150, 0.0647252240115879], DiskBox[151, 0.0647252240115879], 
         DiskBox[152, 0.0647252240115879], DiskBox[153, 0.0647252240115879], 
         DiskBox[154, 0.0647252240115879], DiskBox[155, 0.0647252240115879], 
         DiskBox[156, 0.0647252240115879], DiskBox[157, 0.0647252240115879], 
         DiskBox[158, 0.0647252240115879], DiskBox[159, 0.0647252240115879], 
         DiskBox[160, 0.0647252240115879], DiskBox[161, 0.0647252240115879], 
         DiskBox[162, 0.0647252240115879], DiskBox[163, 0.0647252240115879], 
         DiskBox[164, 0.0647252240115879], DiskBox[165, 0.0647252240115879], 
         DiskBox[166, 0.0647252240115879], DiskBox[167, 0.0647252240115879], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[168, 0.0647252240115879]}, DiskBox[169, 0.0647252240115879],
          DiskBox[170, 0.0647252240115879], DiskBox[171, 0.0647252240115879], 
         DiskBox[172, 0.0647252240115879], DiskBox[173, 0.0647252240115879], 
         DiskBox[174, 0.0647252240115879], DiskBox[175, 0.0647252240115879], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[176, 0.0647252240115879]}, DiskBox[177, 0.0647252240115879],
          DiskBox[178, 0.0647252240115879], DiskBox[179, 0.0647252240115879], 
         DiskBox[180, 0.0647252240115879], DiskBox[181, 0.0647252240115879], 
         DiskBox[182, 0.0647252240115879], DiskBox[183, 0.0647252240115879], 
         DiskBox[184, 0.0647252240115879], DiskBox[185, 0.0647252240115879], 
         DiskBox[186, 0.0647252240115879], DiskBox[187, 0.0647252240115879], 
         DiskBox[188, 0.0647252240115879], DiskBox[189, 0.0647252240115879], 
         DiskBox[190, 0.0647252240115879], DiskBox[191, 0.0647252240115879], 
         DiskBox[192, 0.0647252240115879], DiskBox[193, 0.0647252240115879], 
         DiskBox[194, 0.0647252240115879], DiskBox[195, 0.0647252240115879], 
         DiskBox[196, 0.0647252240115879], DiskBox[197, 0.0647252240115879], 
         DiskBox[198, 0.0647252240115879], DiskBox[199, 0.0647252240115879], 
         DiskBox[200, 0.0647252240115879], DiskBox[201, 0.0647252240115879], 
         DiskBox[202, 0.0647252240115879], DiskBox[203, 0.0647252240115879], 
         DiskBox[204, 0.0647252240115879], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[205, 0.0647252240115879]}, DiskBox[206, 0.0647252240115879],
          DiskBox[207, 0.0647252240115879], DiskBox[208, 0.0647252240115879], 
         DiskBox[209, 0.0647252240115879], DiskBox[210, 0.0647252240115879], 
         DiskBox[211, 0.0647252240115879], DiskBox[212, 0.0647252240115879], 
         DiskBox[213, 0.0647252240115879], DiskBox[214, 0.0647252240115879], 
         DiskBox[215, 0.0647252240115879], DiskBox[216, 0.0647252240115879], 
         DiskBox[217, 0.0647252240115879], DiskBox[218, 0.0647252240115879], 
         DiskBox[219, 0.0647252240115879], DiskBox[220, 0.0647252240115879], 
         DiskBox[221, 0.0647252240115879], DiskBox[222, 0.0647252240115879], 
         DiskBox[223, 0.0647252240115879], DiskBox[224, 0.0647252240115879], 
         DiskBox[225, 0.0647252240115879], DiskBox[226, 0.0647252240115879], 
         DiskBox[227, 0.0647252240115879], DiskBox[228, 0.0647252240115879], 
         DiskBox[229, 0.0647252240115879], DiskBox[230, 0.0647252240115879], 
         DiskBox[231, 0.0647252240115879], DiskBox[232, 0.0647252240115879], 
         DiskBox[233, 0.0647252240115879], DiskBox[234, 0.0647252240115879], 
         DiskBox[235, 0.0647252240115879], DiskBox[236, 0.0647252240115879], 
         DiskBox[237, 0.0647252240115879], DiskBox[238, 0.0647252240115879], 
         DiskBox[239, 0.0647252240115879], DiskBox[240, 0.0647252240115879], 
         DiskBox[241, 0.0647252240115879], DiskBox[242, 0.0647252240115879], 
         DiskBox[243, 0.0647252240115879], DiskBox[244, 0.0647252240115879], 
         DiskBox[245, 0.0647252240115879], DiskBox[246, 0.0647252240115879], 
         DiskBox[247, 0.0647252240115879], DiskBox[248, 0.0647252240115879], 
         DiskBox[249, 0.0647252240115879], DiskBox[250, 0.0647252240115879], 
         DiskBox[251, 0.0647252240115879], DiskBox[252, 0.0647252240115879], 
         DiskBox[253, 0.0647252240115879], DiskBox[254, 0.0647252240115879], 
         DiskBox[255, 0.0647252240115879], DiskBox[256, 0.0647252240115879], 
         DiskBox[257, 0.0647252240115879], DiskBox[258, 0.0647252240115879], 
         DiskBox[259, 0.0647252240115879], DiskBox[260, 0.0647252240115879], 
         DiskBox[261, 0.0647252240115879], DiskBox[262, 0.0647252240115879], 
         DiskBox[263, 0.0647252240115879], DiskBox[264, 0.0647252240115879], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[265, 0.0647252240115879]}, DiskBox[266, 0.0647252240115879],
          DiskBox[267, 0.0647252240115879], DiskBox[268, 0.0647252240115879], 
         DiskBox[269, 0.0647252240115879], DiskBox[270, 0.0647252240115879], 
         DiskBox[271, 0.0647252240115879], DiskBox[272, 0.0647252240115879], 
         DiskBox[273, 0.0647252240115879], DiskBox[274, 0.0647252240115879], 
         DiskBox[275, 0.0647252240115879], DiskBox[276, 0.0647252240115879], 
         DiskBox[277, 0.0647252240115879], DiskBox[278, 0.0647252240115879], 
         DiskBox[279, 0.0647252240115879], DiskBox[280, 0.0647252240115879], 
         DiskBox[281, 0.0647252240115879], DiskBox[282, 0.0647252240115879], 
         DiskBox[283, 0.0647252240115879], DiskBox[284, 0.0647252240115879], 
         DiskBox[285, 0.0647252240115879], DiskBox[286, 0.0647252240115879], 
         DiskBox[287, 0.0647252240115879], DiskBox[288, 0.0647252240115879], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[289, 0.0647252240115879]}, DiskBox[290, 0.0647252240115879],
          DiskBox[291, 0.0647252240115879], DiskBox[292, 0.0647252240115879], 
         DiskBox[293, 0.0647252240115879], DiskBox[294, 0.0647252240115879], 
         DiskBox[295, 0.0647252240115879], DiskBox[296, 0.0647252240115879], 
         DiskBox[297, 0.0647252240115879], DiskBox[298, 0.0647252240115879], 
         DiskBox[299, 0.0647252240115879], DiskBox[300, 0.0647252240115879], 
         DiskBox[301, 0.0647252240115879], DiskBox[302, 0.0647252240115879], 
         DiskBox[303, 0.0647252240115879], DiskBox[304, 0.0647252240115879], 
         DiskBox[305, 0.0647252240115879], DiskBox[306, 0.0647252240115879], 
         DiskBox[307, 0.0647252240115879], DiskBox[308, 0.0647252240115879], 
         DiskBox[309, 0.0647252240115879], DiskBox[310, 0.0647252240115879], 
         DiskBox[311, 0.0647252240115879], DiskBox[312, 0.0647252240115879], 
         DiskBox[313, 0.0647252240115879], DiskBox[314, 0.0647252240115879], 
         DiskBox[315, 0.0647252240115879], DiskBox[316, 0.0647252240115879], 
         DiskBox[317, 0.0647252240115879], DiskBox[318, 0.0647252240115879], 
         DiskBox[319, 0.0647252240115879], DiskBox[320, 0.0647252240115879], 
         DiskBox[321, 0.0647252240115879], DiskBox[322, 0.0647252240115879], 
         DiskBox[323, 0.0647252240115879], DiskBox[324, 0.0647252240115879], 
         DiskBox[325, 0.0647252240115879], DiskBox[326, 0.0647252240115879], 
         DiskBox[327, 0.0647252240115879], DiskBox[328, 0.0647252240115879], 
         DiskBox[329, 0.0647252240115879], DiskBox[330, 0.0647252240115879], 
         DiskBox[331, 0.0647252240115879], DiskBox[332, 0.0647252240115879], 
         DiskBox[333, 0.0647252240115879], DiskBox[334, 0.0647252240115879], 
         DiskBox[335, 0.0647252240115879], DiskBox[336, 0.0647252240115879], 
         DiskBox[337, 0.0647252240115879], DiskBox[338, 0.0647252240115879], 
         DiskBox[339, 0.0647252240115879], DiskBox[340, 0.0647252240115879], 
         DiskBox[341, 0.0647252240115879], DiskBox[342, 0.0647252240115879], 
         DiskBox[343, 0.0647252240115879], DiskBox[344, 0.0647252240115879], 
         DiskBox[345, 0.0647252240115879], DiskBox[346, 0.0647252240115879], 
         DiskBox[347, 0.0647252240115879], DiskBox[348, 0.0647252240115879], 
         DiskBox[349, 0.0647252240115879], DiskBox[350, 0.0647252240115879], 
         DiskBox[351, 0.0647252240115879], DiskBox[352, 0.0647252240115879], 
         DiskBox[353, 0.0647252240115879], DiskBox[354, 0.0647252240115879], 
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          DiskBox[355, 0.0647252240115879]}, DiskBox[356, 0.0647252240115879],
          DiskBox[357, 0.0647252240115879], DiskBox[358, 0.0647252240115879], 
         DiskBox[359, 0.0647252240115879], DiskBox[360, 0.0647252240115879], 
         DiskBox[361, 0.0647252240115879], DiskBox[362, 0.0647252240115879], 
         DiskBox[363, 0.0647252240115879], DiskBox[364, 0.0647252240115879], 
         DiskBox[365, 0.0647252240115879], DiskBox[366, 0.0647252240115879], 
         DiskBox[367, 0.0647252240115879], DiskBox[368, 0.0647252240115879], 
         DiskBox[369, 0.0647252240115879], DiskBox[370, 0.0647252240115879], 
         DiskBox[371, 0.0647252240115879], DiskBox[372, 0.0647252240115879], 
         DiskBox[373, 0.0647252240115879], DiskBox[374, 0.0647252240115879], 
         DiskBox[375, 0.0647252240115879], DiskBox[376, 0.0647252240115879], 
         DiskBox[377, 0.0647252240115879], DiskBox[378, 0.0647252240115879], 
         DiskBox[379, 0.0647252240115879], DiskBox[380, 0.0647252240115879], 
         DiskBox[381, 0.0647252240115879], DiskBox[382, 0.0647252240115879], 
         DiskBox[383, 0.0647252240115879], DiskBox[384, 0.0647252240115879], 
         DiskBox[385, 0.0647252240115879], DiskBox[386, 0.0647252240115879], 
         DiskBox[387, 0.0647252240115879], DiskBox[388, 0.0647252240115879], 
         DiskBox[389, 0.0647252240115879], DiskBox[390, 0.0647252240115879], 
         DiskBox[391, 0.0647252240115879], DiskBox[392, 0.0647252240115879], 
         DiskBox[393, 0.0647252240115879], DiskBox[394, 0.0647252240115879], 
         DiskBox[395, 0.0647252240115879], DiskBox[396, 0.0647252240115879], 
         DiskBox[397, 0.0647252240115879], DiskBox[398, 0.0647252240115879], 
         DiskBox[399, 0.0647252240115879], 
         DiskBox[400, 0.0647252240115879]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8219446120403214`*^9, 3.8219446523527355`*^9}, 
   3.821944718378477*^9, {3.821944753648716*^9, 3.821944761896858*^9}, 
   3.821944805403906*^9, {3.8219448476489463`*^9, 3.8219448571737022`*^9}, 
   3.8219449503211503`*^9, {3.821944995273177*^9, 3.821945025003775*^9}, {
   3.821945070386859*^9, 3.821945080140882*^9}, {3.8219451826357756`*^9, 
   3.821945200911538*^9}, {3.821945445112656*^9, 3.8219455354217024`*^9}, 
   3.821945577907621*^9, {3.8219456732572985`*^9, 3.8219456833531823`*^9}, {
   3.8219457478637023`*^9, 3.821945799339691*^9}},
 TextAlignment->Center,
 CellLabel->
  "Out[237]=",ExpressionUUID->"dbf10214-9479-4750-a997-a73d033fe556"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before Rewiring: \"\>", "\[InvisibleSpace]", 
   "0.47988311688311686`", "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "6.917293233082707`"}],
  SequenceForm[
  "Before Rewiring: ", 0.47988311688311686`, " ", 6.917293233082707],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8219444633213673`*^9, 3.8219444708292885`*^9}, {
   3.821944611712234*^9, 3.8219446516701937`*^9}, 3.821944718160479*^9, {
   3.821944753445719*^9, 3.8219447617538657`*^9}, 3.8219448053819084`*^9, {
   3.8219448476269464`*^9, 3.821944857150186*^9}, 3.8219449502981515`*^9, {
   3.821944994990174*^9, 3.821945024813776*^9}, {3.8219450705269156`*^9, 
   3.82194508028192*^9}, {3.8219451831267586`*^9, 3.82194520137405*^9}, {
   3.8219454452636585`*^9, 3.8219455355616975`*^9}, 3.82194557804462*^9, {
   3.8219456733943005`*^9, 3.821945683481182*^9}, {3.821945748337731*^9, 
   3.821945799470728*^9}},
 CellLabel->
  "During evaluation of \
In[235]:=",ExpressionUUID->"e9b25363-5c36-41d9-80f8-adc663552f7d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After Rewiring: \"\>", "\[InvisibleSpace]", 
   "0.39790578865578863`", "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "3.636228070175439`"}],
  SequenceForm[
  "After Rewiring: ", 0.39790578865578863`, " ", 3.636228070175439],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8219444633213673`*^9, 3.8219444708292885`*^9}, {
   3.821944611712234*^9, 3.8219446516701937`*^9}, 3.821944718160479*^9, {
   3.821944753445719*^9, 3.8219447617538657`*^9}, 3.8219448053819084`*^9, {
   3.8219448476269464`*^9, 3.821944857150186*^9}, 3.8219449502981515`*^9, {
   3.821944994990174*^9, 3.821945024813776*^9}, {3.8219450705269156`*^9, 
   3.82194508028192*^9}, {3.8219451831267586`*^9, 3.82194520137405*^9}, {
   3.8219454452636585`*^9, 3.8219455355616975`*^9}, 3.82194557804462*^9, {
   3.8219456733943005`*^9, 3.821945683481182*^9}, {3.821945748337731*^9, 
   3.821945799477727*^9}},
 CellLabel->
  "During evaluation of \
In[235]:=",ExpressionUUID->"ebed8934-9b30-4213-9356-52ba63e7b63e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"fa06c34c-1fee-4592-af7f-25758b56cb81"],

Cell[CellGroupData[{

Cell["Conclusion", "Section",
 CellChangeTimes->{{3.8216875648353662`*^9, 3.821687572865981*^9}, {
   3.821711139057105*^9, 3.8217111419862256`*^9}, {3.8218625340152264`*^9, 
   3.8218625444237733`*^9}, {3.821863914847212*^9, 3.8218639219573836`*^9}, {
   3.821944080590269*^9, 3.821944083558071*^9}, 3.821944633040752*^9, {
   3.8219459328226786`*^9, 
   3.821945933926315*^9}},ExpressionUUID->"0c479af2-d51e-473d-8f31-\
a52eacc9cbd6"],

Cell[TextData[{
 "We  will  close  by  asking  the  same  question  as Barab\[AAcute]si in \
[2],  namely: ",
 StyleBox["Are  real  world  networks  truly  random?",
  FontSlant->"Italic"],
 " The answer, as Barab\[AAcute]si put it, \[OpenCurlyDoubleQuote]is clearly \
no\[CloseCurlyDoubleQuote].  In reality, it is more likely that complex \
systems appear as a result of some deep underlying order behind all the \
chaos.  However, by studying random graphs, we were able to quantify some of \
these differences, and even explore ideas that tried to patch the \
discrepancies."
}], "Text",
 CellChangeTimes->{{3.8218639910516634`*^9, 3.8218640738557234`*^9}, {
  3.8218691349690504`*^9, 3.8218692145064974`*^9}, {3.8219428707035513`*^9, 
  3.8219428750323305`*^9}, {3.821942923145333*^9, 3.821943156695232*^9}, {
  3.821943190077448*^9, 3.821943201649599*^9}, {3.8219451436229877`*^9, 
  3.821945174413432*^9}, {3.82194527692583*^9, 3.8219452896239805`*^9}, {
  3.821945325462345*^9, 3.8219453462700043`*^9}, {3.821945420262123*^9, 
  3.821945440933035*^9}, {3.821945822542323*^9, 3.821945823117667*^9}, {
  3.8219459645092793`*^9, 3.821946027760317*^9}, {3.8219486349571915`*^9, 
  3.821948664670167*^9}},
 TextJustification->1.,ExpressionUUID->"d01f45dc-5e39-4418-abb4-6f961e359dbe"],

Cell["\<\
In fact the theory of random graphs serves more as a reference point when \
studying real-world networks.  Upon discovering a new property of a network, \
a question random graphs can answer is: if it could have emerged by chance? \
If the property cannot be found in random graphs, it may represent a \
signature of order, \[OpenCurlyDoubleQuote]requiring a deeper explanation\
\[CloseCurlyDoubleQuote] [2].  This is the relevance of random graphs to the \
study of networks.\
\>", "Text",
 CellChangeTimes->{{3.8219460424518957`*^9, 3.8219460861330075`*^9}, {
  3.821948661595557*^9, 3.82194868209402*^9}},
 TextJustification->1.,ExpressionUUID->"89e2ef93-69d1-4202-ab37-2ced8477c971"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.8219461311664424`*^9, 
  3.821946132165017*^9}},ExpressionUUID->"58f8741c-c82d-4c0a-bd05-\
3cee8e74c128"],

Cell["\<\
[1]  R\[EAcute]ka Albert and Albert-L\[AAcute]szl\[OAcute] Barab\[AAcute]si.  \
Statistical mechanics of complex networks. Reviews of modern physics, \
74(1):47, 2002.\
\>", "Item",
 CellChangeTimes->{
  3.821948219036194*^9, {3.821948266459175*^9, 3.821948266459175*^9}, {
   3.8219483423662224`*^9, 
   3.821948356948138*^9}},ExpressionUUID->"971ae07d-9918-4082-bc74-\
5b5bacbcbf0d"],

Cell["\<\
[2]  Albert-L\[AAcute]szl\[OAcute] Barab\[AAcute]si.  Linked:  The new \
science of networks, 2003.\
\>", "Item",
 CellChangeTimes->{
  3.821948219036194*^9, {3.8219482687381697`*^9, 3.8219482687391667`*^9}, {
   3.8219483335902576`*^9, 
   3.821948362517006*^9}},ExpressionUUID->"b8dfc7e4-76d6-4cab-8404-\
0ee8f547e19f"],

Cell["\<\
[3]  Paul Erd\[ODoubleAcute]s and Alfr\[EAcute]d R\[EAcute]nyi.  On the \
evolution of random graphs. Publ.Math. Inst. Hung. Acad. Sci, \
5(1):17\[Dash]60, 1960.\
\>", "Item",
 CellChangeTimes->{
  3.821948219036194*^9, {3.8219482720149746`*^9, 3.821948272015975*^9}, {
   3.8219483199810667`*^9, 
   3.8219483290695086`*^9}},ExpressionUUID->"92b22571-d7ef-4969-ad22-\
cc1dc6950e9b"],

Cell["\<\
[4]  Agata Fronczak, Piotr Fronczak, and Janusz A Holyst. Average path length \
in random networks. Physical Review E, 70(5):056110, 2004.\
\>", "Item",
 CellChangeTimes->{
  3.821948219036194*^9, {3.8219482750824156`*^9, 3.821948275083364*^9}, {
   3.8219483127171636`*^9, 
   3.8219483164844885`*^9}},ExpressionUUID->"3c0c3d36-b01e-4497-8a2a-\
4f38be99ddd2"],

Cell["\<\
[5]  Edgar N Gilbert.  Random graphs. The Annals of Mathematical Statistics, \
30(4):1141\[Dash]1144, 1959.\
\>", "Item",
 CellChangeTimes->{
  3.821948219036194*^9, {3.821948278410706*^9, 
   3.821948306087051*^9}},ExpressionUUID->"39a803d2-6dce-4625-92cd-\
0f446f71c68e"],

Cell["\<\
[6]  Stanley  Milgram.   Six  degrees  of  separation.Psychology Today,  2:60\
\[Dash]64,1967.\
\>", "Item",
 CellChangeTimes->{
  3.821948219036194*^9, {3.8219482803880043`*^9, 
   3.8219482803890047`*^9}},ExpressionUUID->"ced6545b-e1a0-4ccd-8d09-\
a9bc52d0b175"],

Cell["\<\
[7]  Jacob L Moreno and Helen H Jennings.  Statistics of social \
configurations. Sociometry, pages 342\[Dash]374, 1938.\
\>", "Item",
 CellChangeTimes->{
  3.821948219036194*^9, {3.821948282765414*^9, 
   3.82194830060515*^9}},ExpressionUUID->"4deaa4e8-9378-49ce-9c84-\
6d92b361dce3"],

Cell["\<\
[8]  Ray Solomonoff and Anatol Rapoport.  Connectivity of random nets.The \
bulletin of mathematical biophysics, 13(2):107\[Dash]117, 1951.\
\>", "Item",
 CellChangeTimes->{
  3.821948219036194*^9, {3.8219482854829335`*^9, 
   3.821948295486663*^9}},ExpressionUUID->"5ca8d127-0f8c-475d-a6b1-\
9083a8769d0e"],

Cell["\<\
[9]  Duncan  J  Watts  and  Steven  H  Strogatz.   Collective  dynamics  of  \
'small-world' networks. nature, 393(6684):440\[Dash]442, 1998.\
\>", "Item",
 CellChangeTimes->{
  3.821948219036194*^9, {3.821948290077154*^9, 
   3.8219482914785204`*^9}},ExpressionUUID->"ebf457f2-694c-4b0d-b594-\
bcdafebcb78d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d4d30cbe-449f-4729-b94f-443c5824a9f1"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8219461890150886`*^9, 
  3.8219461939262514`*^9}},ExpressionUUID->"8a0ae330-4ea4-41df-9da4-\
404bafb253db"],

Cell["Any Questions?", "Section",
 CellChangeTimes->{{3.821946179884522*^9, 3.82194618167295*^9}},
 TextAlignment->Center,ExpressionUUID->"adf514fc-8987-4a3b-9bc2-d19a89beb766"]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{1920, 997},
WindowMargins->{{Automatic, 1912}, {Automatic, -8}},
TaggingRules->{
 "SlideShow" -> True, "SlideshowSettings" -> {"Toolbar" -> True}, 
  "TryRealOnly" -> False},
Magnification:>1. Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"07b76de9-115b-4e53-a721-5ff417c3ce26"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 4372, 95, 2, "SlideShowNavigationBar",ExpressionUUID->"6899b0d1-0d9d-418e-929d-832f32f32215",
   CellTags->"SlideShowHeader"],
  Cell[6116, 163, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"69ff1bd6-bcb4-485a-b5cc-ad3152776792",
   CellTags->"SlideShowHeader"],
  Cell[10338, 259, 146, 3, 1, "SlideShowNavigationBar",ExpressionUUID->"a7a94447-8053-4f8b-8b30-5b88b9bb8ab6",
   CellTags->"SlideShowHeader"],
  Cell[45380, 920, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"1a4dbdc9-5259-4694-badb-144e1bf843cc",
   CellTags->"SlideShowHeader"],
  Cell[122445, 2222, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f73217a3-a55c-4cb9-90c1-99de46c1a212",
   CellTags->"SlideShowHeader"],
  Cell[134887, 2533, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"33456efe-7aa8-4848-ba63-7e1361aba680",
   CellTags->"SlideShowHeader"],
  Cell[143538, 2734, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"882f291b-61a3-4dd6-8f78-4b93ac630c41",
   CellTags->"SlideShowHeader"],
  Cell[149998, 2931, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"0159f69a-6834-4bf3-8999-7b5e2e7d68f1",
   CellTags->"SlideShowHeader"],
  Cell[159029, 3166, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"6ee84857-e5d5-4c88-834f-6ea0242e3af8",
   CellTags->"SlideShowHeader"],
  Cell[166543, 3370, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b153da5e-6d6b-4f8b-96fd-7a83f397a705",
   CellTags->"SlideShowHeader"],
  Cell[172007, 3502, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"7f282770-ec0c-42ed-b86f-3fca64f00363",
   CellTags->"SlideShowHeader"],
  Cell[183827, 3827, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"2e848e28-35f4-4c1f-9cb2-f73b63a37805",
   CellTags->"SlideShowHeader"],
  Cell[193299, 4065, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"908d56a9-d330-492e-b66b-602f1584f7a9",
   CellTags->"SlideShowHeader"],
  Cell[198251, 4182, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b222d199-4c18-4bef-8b9d-4d81aa95fe0f",
   CellTags->"SlideShowHeader"],
  Cell[204172, 4332, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"999834f0-1595-45e6-aee1-c61ca66630c5",
   CellTags->"SlideShowHeader"],
  Cell[251789, 5172, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"58a089f6-d7d3-4419-9147-7c2fd14c908e",
   CellTags->"SlideShowHeader"],
  Cell[258284, 5327, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"033f5d0e-9ed9-4f33-a462-df1672dee6a1",
   CellTags->"SlideShowHeader"],
  Cell[401605, 7795, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"c9e0439b-2fbc-45ec-8c03-ca92ad8474ac",
   CellTags->"SlideShowHeader"],
  Cell[446086, 8517, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"fa06c34c-1fee-4592-af7f-25758b56cb81",
   CellTags->"SlideShowHeader"],
  Cell[451906, 8667, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"d4d30cbe-449f-4729-b94f-443c5824a9f1",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 453191, 8701}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4372, 95, 2, "SlideShowNavigationBar",ExpressionUUID->"6899b0d1-0d9d-418e-929d-832f32f32215",
 CellTags->"SlideShowHeader"],
Cell[4955, 119, 333, 10, 505, "Title",ExpressionUUID->"29ddcfc4-5c4b-45da-aff5-f1983d663462"],
Cell[5291, 131, 206, 4, 105, "Input",ExpressionUUID->"c938e9f2-7f3d-4f95-894a-7dad47e92c2a"],
Cell[CellGroupData[{
Cell[5522, 139, 209, 8, 226, "Subtitle",ExpressionUUID->"9e9f732e-f787-4eb4-9d72-c5da395980f0"],
Cell[5734, 149, 174, 3, 102, "Subtitle",ExpressionUUID->"188c9394-e10b-48e0-bab2-8ef782decd46"],
Cell[5911, 154, 156, 3, 46, "Input",ExpressionUUID->"f547b722-6fa3-4d21-9429-836c6177101b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6116, 163, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"69ff1bd6-bcb4-485a-b5cc-ad3152776792",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[6263, 169, 269, 5, 67, "Section",ExpressionUUID->"9ea291a9-5c2d-49d6-a421-1118b75ab1d9"],
Cell[6535, 176, 815, 12, 56, "Text",ExpressionUUID->"51548551-8526-422c-b5fd-1888f60f1886"],
Cell[7353, 190, 686, 10, 56, "Text",ExpressionUUID->"bae27d10-1b2d-4899-b271-dd37ad50c018"],
Cell[8042, 202, 470, 7, 34, "Text",ExpressionUUID->"828e1607-0303-40ce-afcb-25301f6d6e52"],
Cell[CellGroupData[{
Cell[8537, 213, 180, 3, 53, "Subsection",ExpressionUUID->"96545de7-8cef-4a56-95b6-11f97bd69740"],
Cell[8720, 218, 243, 4, 31, "Item",ExpressionUUID->"366cd33a-b7e0-4fb5-ab3a-8c06cdcf07c4"],
Cell[8966, 224, 238, 5, 31, "Item",ExpressionUUID->"d8d43664-0b36-4e07-a3f8-8935be0763e5"],
Cell[9207, 231, 415, 8, 31, "Item",ExpressionUUID->"d5286a43-4b97-4872-858d-d59b306ddebc"],
Cell[9625, 241, 298, 4, 31, "Item",ExpressionUUID->"9cd62532-0e36-4368-8667-4ecfc983e45d"],
Cell[9926, 247, 351, 5, 31, "Item",ExpressionUUID->"ca4c1e89-afef-427c-a4b8-ae1a2eaccc45"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10338, 259, 146, 3, 1, "SlideShowNavigationBar",ExpressionUUID->"a7a94447-8053-4f8b-8b30-5b88b9bb8ab6",
 CellTags->"SlideShowHeader"],
Cell[10487, 264, 361, 7, 34, "Text",ExpressionUUID->"a61a9e80-7d4f-41b2-9238-849fbf8f87c3"],
Cell[10851, 273, 1700, 32, 28, "Input",ExpressionUUID->"922abb62-0783-4a6a-a852-94b01de992b4"],
Cell[12554, 307, 369, 6, 34, "Text",ExpressionUUID->"98ab0d17-5bbc-4b41-9651-239dff767d0a"],
Cell[CellGroupData[{
Cell[12948, 317, 5220, 105, 200, "Input",ExpressionUUID->"8e75390c-870c-48a0-bf39-a7c4819f7f1f"],
Cell[18171, 424, 1781, 29, 22, "Print",ExpressionUUID->"28411b4c-7725-4cf9-9304-434ddfaeacf7"],
Cell[19955, 455, 25376, 459, 376, "Output",ExpressionUUID->"126807ca-8ef7-4dad-a249-02fefce62774"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45380, 920, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"1a4dbdc9-5259-4694-badb-144e1bf843cc",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[45527, 926, 256, 5, 67, "Section",ExpressionUUID->"8b975cee-4994-4ab3-a8db-75cbdef74bc9"],
Cell[45786, 933, 726, 11, 56, "Text",ExpressionUUID->"ae27f246-a926-449b-af27-82999f135ff3"],
Cell[CellGroupData[{
Cell[46537, 948, 231, 4, 53, "Subsection",ExpressionUUID->"4f677161-dbd8-4a13-bb0a-448f2e6e7d08"],
Cell[46771, 954, 540, 9, 31, "Item",ExpressionUUID->"57437801-c4dc-4223-bc22-a903d2caa301"],
Cell[47314, 965, 678, 12, 31, "Item",ExpressionUUID->"c090c27f-6894-4b42-a482-4ad87052a81f"],
Cell[47995, 979, 453, 7, 31, "Item",ExpressionUUID->"5eae476b-8233-45c8-9d06-5504d2e80e38"],
Cell[48451, 988, 643, 11, 31, "Item",ExpressionUUID->"52d4d9d1-5329-4060-a0b8-04b10a1624a4"],
Cell[49097, 1001, 750, 13, 31, "Item",ExpressionUUID->"0e8f3582-aaf0-4060-bc4d-7cd257362de8"],
Cell[49850, 1016, 72316, 1195, 278, "Text",ExpressionUUID->"5a5f476c-b9a5-4d80-9018-f8705559372b"],
Cell[122169, 2213, 215, 2, 34, "Text",ExpressionUUID->"2255959e-159a-4358-a345-2b336cc3d9b8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[122445, 2222, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f73217a3-a55c-4cb9-90c1-99de46c1a212",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[122592, 2228, 152, 3, 67, "Section",ExpressionUUID->"e2c8e914-c073-4378-8455-78cdfb648495"],
Cell[122747, 2233, 802, 15, 56, "Text",ExpressionUUID->"de63188f-b2ad-4951-b725-37ef800bc741"],
Cell[CellGroupData[{
Cell[123574, 2252, 2755, 69, 48, "Input",ExpressionUUID->"165b7d02-ec23-4140-9ac8-fb069784b98d"],
Cell[126332, 2323, 5595, 121, 177, "Output",ExpressionUUID->"dbcf7b29-0064-4bbe-a208-5158c87af0ff"]
}, Open  ]],
Cell[131942, 2447, 232, 3, 34, "Text",ExpressionUUID->"c4674b1c-6832-4710-88a3-f6ba6ca555cc"],
Cell[CellGroupData[{
Cell[132199, 2454, 294, 5, 53, "Subsection",ExpressionUUID->"dfcedb31-05c8-4732-9d3d-744b8a3fdf25"],
Cell[132496, 2461, 747, 14, 34, "Text",ExpressionUUID->"f23e54f3-91b7-4970-9a48-c2229a370827"],
Cell[133246, 2477, 1580, 49, 97, "Text",ExpressionUUID->"07ef390a-d8f4-4dfa-b7f4-26b0d5e95bb9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134887, 2533, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"33456efe-7aa8-4848-ba63-7e1361aba680",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[135034, 2539, 167, 3, 67, "Section",ExpressionUUID->"7e6321ee-152f-4663-b101-a5b22631e8ee"],
Cell[CellGroupData[{
Cell[135226, 2546, 266, 5, 53, "Subsection",ExpressionUUID->"a5d33595-4e0f-42cf-9c1a-fb9c7bb5d572"],
Cell[135495, 2553, 629, 13, 34, "Text",ExpressionUUID->"91956487-b4b8-4db5-ab54-1c43909763d9"],
Cell[136127, 2568, 1341, 41, 57, "Text",ExpressionUUID->"8ae0980b-4fea-434a-8af8-60f9080a57be"],
Cell[137471, 2611, 6006, 116, 559, "Input",ExpressionUUID->"2d80ff5e-6ffa-4fbe-83be-f9247d323304"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143538, 2734, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"882f291b-61a3-4dd6-8f78-4b93ac630c41",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[143685, 2740, 143, 3, 67, "Section",ExpressionUUID->"289d0db8-023c-49da-9ff4-a2a8fd1dcfdd"],
Cell[CellGroupData[{
Cell[143853, 2747, 213, 4, 53, "Subsection",ExpressionUUID->"a32c1b96-88ce-45f6-98db-7d06a5da9f4d"],
Cell[144069, 2753, 1425, 44, 71, "Text",ExpressionUUID->"3b1e977c-3198-474c-9156-4a69f50695fa"],
Cell[CellGroupData[{
Cell[145519, 2801, 159, 3, 44, "Subsubsection",ExpressionUUID->"f79d75db-b8b1-4580-8d41-e10bf67e2a8e"],
Cell[145681, 2806, 1061, 27, 90, "Text",ExpressionUUID->"ed2c4a3a-aa6f-498f-9728-0f807dc6d5ad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[146791, 2839, 218, 4, 53, "Subsection",ExpressionUUID->"45ede422-fd32-4919-bd62-9f93563929bf"],
Cell[147012, 2845, 1351, 36, 51, "Text",ExpressionUUID->"dc1b6172-09bd-4ad6-b454-dd5ad5c349ab"],
Cell[CellGroupData[{
Cell[148388, 2885, 158, 3, 44, "Subsubsection",ExpressionUUID->"6da66c4a-331b-4461-9961-305b61f414fb"],
Cell[148549, 2890, 1376, 33, 56, "Text",ExpressionUUID->"6d1ab619-17e9-41b1-ada0-af76b79bc109"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149998, 2931, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"0159f69a-6834-4bf3-8999-7b5e2e7d68f1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[150145, 2937, 169, 3, 67, "Section",ExpressionUUID->"00df6a90-404d-4dde-82dc-db0eb10192da"],
Cell[CellGroupData[{
Cell[150339, 2944, 245, 4, 53, "Subsection",ExpressionUUID->"d8df051d-2e25-4f3d-bf4a-c31d722cf5cd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[150587, 2950, 1241, 30, 56, "Text",ExpressionUUID->"a6a684a5-44ae-4ead-8d43-bc081f33a80b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[151865, 2985, 238, 4, 53, "Subsection",ExpressionUUID->"6270ed25-bb95-4690-9952-8aea73a61862"],
Cell[152106, 2991, 1791, 49, 44, "Text",ExpressionUUID->"d81cf208-d336-4ffc-a97f-8f1a1acd055f"],
Cell[CellGroupData[{
Cell[153922, 3044, 2434, 57, 48, "Input",ExpressionUUID->"cbef4157-9afa-415a-b455-0bba51d7e722"],
Cell[156359, 3103, 2597, 55, 331, "Output",ExpressionUUID->"463186ad-b937-4937-af10-1a00241f8840"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[159029, 3166, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"6ee84857-e5d5-4c88-834f-6ea0242e3af8",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[159176, 3172, 169, 3, 67, "Section",ExpressionUUID->"b3965329-6d3a-4b42-861d-be89095bf9e9"],
Cell[159348, 3177, 529, 8, 56, "Text",ExpressionUUID->"b8068152-afd6-48bf-a726-92fd4e9ca64e"],
Cell[CellGroupData[{
Cell[159902, 3189, 314, 5, 53, "Subsection",ExpressionUUID->"c350cd89-9f3d-463d-a750-a63ed8d7b754",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[160219, 3196, 2219, 54, 63, "Text",ExpressionUUID->"27f6d40b-849a-4c98-8177-28dfa3774b5b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[162475, 3255, 295, 4, 53, "Subsection",ExpressionUUID->"5be2f5d2-f3c0-4b1b-a1a1-34f3ff33d57a"],
Cell[162773, 3261, 528, 12, 34, "Text",ExpressionUUID->"2e0eb6eb-d501-4490-86cb-2f8993de68a8"],
Cell[CellGroupData[{
Cell[163326, 3277, 157, 3, 44, "Subsubsection",ExpressionUUID->"ee0f1f3f-6d66-4ae6-8d51-0e7808d5ad5c"],
Cell[163486, 3282, 2706, 73, 77, "Text",ExpressionUUID->"d8bb9512-ec18-4ea8-aa47-40bf6cfc1c0a"],
Cell[166195, 3357, 275, 5, 34, "Text",ExpressionUUID->"633dfa5f-5a11-449f-aa28-421dd485e0e1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166543, 3370, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b153da5e-6d6b-4f8b-96fd-7a83f397a705",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[166690, 3376, 244, 4, 127, "Section",ExpressionUUID->"859226ef-497e-466a-a8e2-523e775082d4"],
Cell[CellGroupData[{
Cell[166959, 3384, 162, 3, 98, "Subsection",ExpressionUUID->"9b1b900b-e7dc-4d97-acf4-a0bf52625a19"],
Cell[167124, 3389, 606, 9, 79, "Text",ExpressionUUID->"e3ea95f0-1f93-4ec8-8004-8ee1938fc031"],
Cell[167733, 3400, 275, 5, 48, "Text",ExpressionUUID->"bf2e2963-a9ac-48d1-9619-002f27194022"],
Cell[CellGroupData[{
Cell[168033, 3409, 1252, 28, 76, "Input",ExpressionUUID->"e4245cd2-3c28-45bb-b72c-39018b2e784f"],
Cell[169288, 3439, 1966, 41, 344, "Output",ExpressionUUID->"fdfed8e5-9b95-41bf-b31f-a32ea3f61b48"]
}, Open  ]],
Cell[171269, 3483, 677, 12, 79, "Text",ExpressionUUID->"4bd23bc4-f31d-47a8-9ab2-069aefd3ee3e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172007, 3502, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"7f282770-ec0c-42ed-b86f-3fca64f00363",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[172154, 3508, 218, 4, 67, "Section",ExpressionUUID->"88f8938f-50c4-4a85-a65c-70264e0bb583"],
Cell[172375, 3514, 616, 10, 34, "Text",ExpressionUUID->"cc0a8370-eedb-44ae-830e-72656ffcd975"],
Cell[CellGroupData[{
Cell[173016, 3528, 420, 6, 53, "Subsection",ExpressionUUID->"c78be70b-88f1-4fc9-b1a1-18169002d47f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[173439, 3536, 2717, 74, 63, "Text",ExpressionUUID->"97c333bf-d46f-49b4-a97b-e02073c08174",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[176159, 3612, 352, 6, 53, "Subsection",ExpressionUUID->"a450c799-6cce-4602-94f7-cdff758f3750",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[176514, 3620, 1514, 42, 34, "Text",ExpressionUUID->"87905d5f-15bd-4cd6-a259-f139654b8684",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[178065, 3667, 502, 7, 98, "Subsection",ExpressionUUID->"6e7a9304-c338-49f3-9fc5-d50808d69527"],
Cell[178570, 3676, 907, 23, 41, "Text",ExpressionUUID->"977b78f9-e10f-4578-bbba-3ee2e3d97718"],
Cell[CellGroupData[{
Cell[179502, 3703, 157, 3, 44, "Subsubsection",ExpressionUUID->"667d6388-6db9-44b7-a371-88d7e61febaf"],
Cell[179662, 3708, 4092, 111, 97, "Text",ExpressionUUID->"11330785-a01b-4735-a11b-eea0764cb94e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183827, 3827, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"2e848e28-35f4-4c1f-9cb2-f73b63a37805",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[183974, 3833, 266, 4, 67, "Section",ExpressionUUID->"e43957fd-8c4f-4541-801e-4e298df7c7c3"],
Cell[184243, 3839, 1396, 24, 61, "Text",ExpressionUUID->"22daf5c4-8ca1-457e-805a-bb6f274afd3a"],
Cell[CellGroupData[{
Cell[185664, 3867, 475, 7, 53, "Subsection",ExpressionUUID->"edbe3a17-9bef-4777-9677-b96d60334daa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[186142, 3876, 2729, 64, 38, "Text",ExpressionUUID->"8906aa81-e2df-422f-b06a-096ec8ddcfda",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[188874, 3942, 1288, 39, 97, "Text",ExpressionUUID->"98340334-1aa9-4f13-b449-62578925b852",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[190199, 3986, 158, 3, 44, "Subsubsection",ExpressionUUID->"cc75b609-b24e-49ae-a987-96f941ca7589"],
Cell[190360, 3991, 163, 3, 34, "Text",ExpressionUUID->"b64b6b85-e17b-423d-8ce3-81ddd33658a7"],
Cell[CellGroupData[{
Cell[190548, 3998, 442, 7, 53, "Subsection",ExpressionUUID->"5cd5225f-0608-485a-9826-1196dde480c2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[190993, 4007, 1197, 17, 34, "Text",ExpressionUUID->"cfbe503d-065b-4825-84a3-f65733dfb6b8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[192193, 4026, 1033, 31, 76, "Text",ExpressionUUID->"039b39b2-75ef-487a-ad3e-7ac28a94d959",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193299, 4065, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"908d56a9-d330-492e-b66b-602f1584f7a9",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[193446, 4071, 218, 4, 67, "Section",ExpressionUUID->"535da1f9-4e2a-48b0-bab0-5feb3b32294c"],
Cell[193667, 4077, 861, 13, 34, "Text",ExpressionUUID->"5b642911-d7df-4067-a206-651aa596a5d1"],
Cell[194531, 4092, 501, 8, 53, "Subsection",ExpressionUUID->"daf452fb-a2e5-42f5-9860-a8aca19b1833",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[195035, 4102, 1562, 35, 53, "Item",ExpressionUUID->"512270cc-e7b7-4adc-b734-2cbb429edf91"],
Cell[196600, 4139, 1286, 28, 54, "Item",ExpressionUUID->"afd0e00c-75e3-4ef4-be3e-722567952e17"],
Cell[197889, 4169, 313, 7, 31, "Item",ExpressionUUID->"9eb8d01e-d23d-4aa2-8187-7f0b44c4619c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198251, 4182, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b222d199-4c18-4bef-8b9d-4d81aa95fe0f",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[198398, 4188, 218, 4, 67, "Section",ExpressionUUID->"28f861e0-fe73-488e-b4c8-c9e14f578d1c"],
Cell[CellGroupData[{
Cell[198641, 4196, 173, 3, 53, "Subsection",ExpressionUUID->"f41eda55-f05f-4ce9-86e1-3d1a27a40586"],
Cell[CellGroupData[{
Cell[198839, 4203, 2383, 54, 48, "Input",ExpressionUUID->"685218f5-19a2-4167-bde6-88bb4acdf224"],
Cell[201225, 4259, 2391, 51, 373, "Output",ExpressionUUID->"acc8bb04-2379-459f-b6c0-a603c22fa84b"]
}, Open  ]],
Cell[203631, 4313, 152, 3, 28, "Input",ExpressionUUID->"5d02a153-2721-4b92-b061-ff642f5bd61a"],
Cell[203786, 4318, 325, 7, 34, "Text",ExpressionUUID->"8e472be1-8d5c-4175-91f9-f4db127c7d99"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[204172, 4332, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"999834f0-1595-45e6-aee1-c61ca66630c5",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[204319, 4338, 272, 4, 67, "Section",ExpressionUUID->"83257c01-2174-4dfc-be49-9669790246f0"],
Cell[204594, 4344, 552, 9, 56, "Text",ExpressionUUID->"03bc2419-68bb-48f8-b7b9-390cbfbae915"],
Cell[205149, 4355, 724, 18, 56, "Text",ExpressionUUID->"57f090f7-e3d7-467f-b986-24fd0f0377c3"],
Cell[205876, 4375, 768, 21, 43, "Item",ExpressionUUID->"1a244fe9-81d8-4de0-b3ba-c58ac8429809"],
Cell[206647, 4398, 514, 13, 31, "Item",ExpressionUUID->"efa8687a-c08e-411a-b281-c40f5ec51704"],
Cell[207164, 4413, 304, 8, 43, "Item",ExpressionUUID->"c0ef8408-14bf-4a0f-8ab0-621ca641645f"],
Cell[207471, 4423, 244, 4, 31, "Item",ExpressionUUID->"30048c13-2181-4ac6-bb9e-e7b5c408068b"],
Cell[207718, 4429, 205, 3, 31, "Item",ExpressionUUID->"f0a80f1d-4f78-4459-a706-4d19a9ee9af0"],
Cell[CellGroupData[{
Cell[207948, 4436, 244, 4, 53, "Subsection",ExpressionUUID->"306d8ebc-0317-47d6-99e4-e06ef582c2ba"],
Cell[208195, 4442, 422, 8, 34, "Text",ExpressionUUID->"8b0fa19b-bfae-4f5b-bcdd-70f575a0fcce"],
Cell[208620, 4452, 42741, 706, 203, "Input",ExpressionUUID->"c3196574-e321-4555-8a71-9c47dc3552fa"],
Cell[251364, 5160, 364, 5, 34, "Text",ExpressionUUID->"32647e93-029d-4cd1-84af-bf53ec73ebbe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[251789, 5172, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"58a089f6-d7d3-4419-9147-7c2fd14c908e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[251936, 5178, 323, 5, 67, "Section",ExpressionUUID->"f762b401-47c7-4ca2-825d-48f6f631b1cc"],
Cell[252262, 5185, 557, 9, 56, "Text",ExpressionUUID->"efad7fb7-b1c6-43f8-bf84-00d018bda585"],
Cell[CellGroupData[{
Cell[252844, 5198, 318, 5, 53, "Subsection",ExpressionUUID->"2e7177a6-7cab-4da0-9def-c162c75c12dc"],
Cell[253165, 5205, 780, 16, 34, "Text",ExpressionUUID->"92fa4299-7514-41f2-8f73-2a8328197167"],
Cell[253948, 5223, 303, 6, 31, "ItemNumbered",ExpressionUUID->"6537f3ed-94d9-4209-9546-006af676c1ca"],
Cell[CellGroupData[{
Cell[254276, 5233, 384, 7, 31, "ItemNumbered",ExpressionUUID->"8bca3452-78af-455a-8a3d-dd19263700f5"],
Cell[CellGroupData[{
Cell[254685, 5244, 1137, 25, 28, "Input",ExpressionUUID->"9dec4b89-5c88-42f7-85fc-d34b1d7d1e25"],
Cell[255825, 5271, 2374, 47, 501, "Output",ExpressionUUID->"ea11cb98-9fd1-42ed-8f23-9a6c6f21388c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[258284, 5327, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"033f5d0e-9ed9-4f33-a462-df1672dee6a1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[258431, 5333, 323, 5, 67, "Section",ExpressionUUID->"15b2532d-575f-4ab9-b9e3-7380317fca53"],
Cell[258757, 5340, 1580, 36, 63, "Text",ExpressionUUID->"0f7daef1-5c2d-4975-9313-50cf988ddf8c"],
Cell[260340, 5378, 1655, 37, 85, "Text",ExpressionUUID->"2f741f5b-2a7a-4c3c-b841-56be5bf8f352"],
Cell[CellGroupData[{
Cell[262020, 5419, 2293, 49, 48, "Input",ExpressionUUID->"f7a34639-9dbb-4da8-84ec-8709dc9d202f"],
Cell[264316, 5470, 137228, 2318, 291, "Output",ExpressionUUID->"7c260f6d-531b-45e5-b54c-7fda920d3f9a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[401605, 7795, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"c9e0439b-2fbc-45ec-8c03-ca92ad8474ac",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[401752, 7801, 398, 6, 67, "Section",ExpressionUUID->"58f5da79-203a-4549-a692-e792011ba7fe"],
Cell[402153, 7809, 855, 13, 34, "Text",ExpressionUUID->"555a5b64-8403-46f2-b348-1846a35cb735"],
Cell[403011, 7824, 139, 2, 28, "Input",ExpressionUUID->"8d0b47ae-e44a-498d-925d-23ce0ce30018"],
Cell[CellGroupData[{
Cell[403175, 7830, 1831, 41, 105, "Input",ExpressionUUID->"369e6753-8238-4b91-846c-360d2cc500c2"],
Cell[405009, 7873, 38884, 592, 283, "Output",ExpressionUUID->"dbf10214-9479-4750-a997-a73d033fe556"],
Cell[CellGroupData[{
Cell[443918, 8469, 1047, 19, 22, "Print",ExpressionUUID->"e9b25363-5c36-41d9-80f8-adc663552f7d"],
Cell[444968, 8490, 1045, 19, 22, "Print",ExpressionUUID->"ebed8934-9b30-4213-9356-52ba63e7b63e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[446086, 8517, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"fa06c34c-1fee-4592-af7f-25758b56cb81",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[446233, 8523, 436, 7, 67, "Section",ExpressionUUID->"0c479af2-d51e-473d-8f31-a52eacc9cbd6"],
Cell[446672, 8532, 1287, 21, 56, "Text",ExpressionUUID->"d01f45dc-5e39-4418-abb4-6f961e359dbe"],
Cell[447962, 8555, 697, 11, 56, "Text",ExpressionUUID->"89e2ef93-69d1-4202-ab37-2ced8477c971"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448696, 8571, 157, 3, 67, "Section",ExpressionUUID->"58f8741c-c82d-4c0a-bd05-3cee8e74c128"],
Cell[448856, 8576, 395, 9, 31, "Item",ExpressionUUID->"971ae07d-9918-4082-bc74-5b5bacbcbf0d"],
Cell[449254, 8587, 331, 8, 31, "Item",ExpressionUUID->"b8dfc7e4-76d6-4cab-8404-0ee8f547e19f"],
Cell[449588, 8597, 393, 9, 31, "Item",ExpressionUUID->"92b22571-d7ef-4969-ad22-cc1dc6950e9b"],
Cell[449984, 8608, 370, 8, 31, "Item",ExpressionUUID->"3c0c3d36-b01e-4497-8a2a-4f38be99ddd2"],
Cell[450357, 8618, 283, 7, 31, "Item",ExpressionUUID->"39a803d2-6dce-4625-92cd-0f446f71c68e"],
Cell[450643, 8627, 274, 7, 31, "Item",ExpressionUUID->"ced6545b-e1a0-4ccd-8d09-a9bc52d0b175"],
Cell[450920, 8636, 295, 7, 31, "Item",ExpressionUUID->"4deaa4e8-9378-49ce-9c84-6d92b361dce3"],
Cell[451218, 8645, 317, 7, 31, "Item",ExpressionUUID->"5ca8d127-0f8c-475d-a6b1-9083a8769d0e"],
Cell[451538, 8654, 319, 7, 31, "Item",ExpressionUUID->"ebf457f2-694c-4b0d-b594-bcdafebcb78d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[451906, 8667, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"d4d30cbe-449f-4729-b94f-443c5824a9f1",
 CellTags->"SlideShowHeader"],
Cell[452031, 8671, 426, 7, 238, "Input",ExpressionUUID->"8a0ae330-4ea4-41df-9da4-404bafb253db"],
Cell[452460, 8680, 177, 2, 67, "Section",ExpressionUUID->"adf514fc-8987-4a3b-9bc2-d19a89beb766"]
}, Open  ]]
}
]
*)

